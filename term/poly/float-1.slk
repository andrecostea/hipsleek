/*

	EXAMPL1:
		x > 0;
		while (x > 0)
			x = x/2;
		
	analysis:
		x(n) > 0; lim x(n) -> 0+;
	
*/

/* for building the entailment, refer to file limit-based-entailment.txt */

// check loop; loop condition is (x > 0.0)
checkentail true |- forall (e: (e <= 0.0) | forall (x: ((x <= 0.0) | (x >= 0.0 + e) | (x > 0.0)))).		// expect: Valid

// check termination; termination condition is (x <= 0)
checkentail true |- (exists e: (e > 0.0) & forall (x: (x <= 0.0) | (x >= 0.0 + e) | (x <= 0.0))).		// expect: Fail

/*

	EXAMPLE 2:
		x > 0;
		while (x > 0.001)
			x = x/2;
		
	analysis:
		x(n) > 0; lim x(n) -> 0+;
	
*/

/* for building the entailment, refer to file limit-based-entailment.txt */

// check LOOP; loop condition is (x > 0.001)
checkentail true |- forall (e: (e <= 0.0) | forall (x: ((x <= 0.0) | (x >= 0.0 + e) | (x > 0.001)))).	// expect: Fail

// check TERMINATION; termination condition is (x <= 0.001)
checkentail true |- (exists e: (e > 0.0) & forall (x: (x <= 0.0) | (x >= 0.0 + e) | (x <= 0.001))).		// expect: Valid
