data node {
  node next;
}.

pred lseg<p,n> == self=p & n=0
  or self::node<q>*q::lseg<p,n-1> & self!=p
  inv n>=0.

lemma_safe self::lseg<p,n> & n=a+b & a>=0 & b>=0 <-> self::lseg<q,a>*q::lseg<p,b>.

checkentail x::lseg<p,n> & n=m |- x::lseg<q,m>.
print residue.

checkentail x::lseg<p,n> & n>m |- x::lseg<q,m>.
print residue.

checkentail x::lseg<p,n> & n<m |- x::lseg<q,m>.
print residue.
// fail

checkentail x::lseg<p,n> & n<=m |- x::lseg<q,m>.
print residue.
// fail

checkentail x::lseg<p,n> |- x::lseg<q,m>.
print residue.
/*
incomplete:
 <1>emp&p=q & m=n&{FLOW,(21,22)=__norm}[]
[[ SEARCH ==>  COND ==>  Match ==> ]]
*/

checkentail x::lseg<p,n> |- (exists m: x::lseg<q,m>).
print residue.
