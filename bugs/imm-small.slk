data node {
     int val;
     node next;
}.

pred Cell<i> == self::node<i,_> 
inv self!=null.

// should fail but valid
// parser problem?
 checkentail (x::Cell<_>@I) ; y::Cell<_> |- x::Cell<_>@I.

// should succeed but wrong residue
checkentail (x::Cell<_>@I) ; y::Cell<_> |- y::Cell<_>@I.
print residue.
// expecting empty residue

// succeeded with empty residue
checkentail (x::Cell<_>@I) ; y::Cell<_> |- y::Cell<_>.
print residue.

// should succeed with residue below
// cannot parse
//checkentail (x::Cell<_>@I) ; y::Cell<_> |- (x::Cell<_>@I); true
//expected residue: y::Cell<>.

// should succeed with residue below
// cannot parse
// checkentail x::Cell<_>@I * y::Cell<_> |- (y::Cell<_>@I) ; true.
// expected residue: x::Cell<>@I * y::Cell<>

// should succeed with residue below
// cannot parse
// checkentail x::Cell<_>@I * y::Cell<_>  |- (x::Cell<_>@I) ; true.
// expected residue: x::Cell<>@I * y::Cell<>

// fail
checkentail x::Cell<_>@I * y::Cell<_>  |- x::Cell<_> .

// succeeded with residue x::Cell<_>@I
checkentail x::Cell<_>@I * y::Cell<_>  |- y::Cell<_> .
print residue.

// succeeded with residue y::Cell<_>
checkentail x::Cell<_> * y::Cell<_>  |- x::Cell<_> .
print residue.
