data node {
	int val;
	node next;
}.

pred ls<p,n> == self = p & n = 0 
  or self::node<_, q> * q::ls<p, n-1> // = q1 
  inv n >= 0.


//should be one answer rather than two
// why isn't base-case unfold part of match?
checkentail x::ls<p,n> & x=null |- x::ls<y,m> .


//checkentail x::ls<y,a>*y::ls<p,b> & a=0 |- x::ls<p,m> .

//checkentail x::ls<y,a>*y::ls<p,b> & y=null |- x::ls<p,m> .
/* why isn't base-case unfold done?
 SS 7::y::ls<p,b>@M[Orig][LHSCase] & y=null & m=a &
 {FLOW,(27,27)=__norm} LOC: _0_0
*/

print residue.
