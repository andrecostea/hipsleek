/*
@M - mutable   (0)
@I - immutable (1)
@L - lending   (2)
@A - no access (3)
*/

//data cell {int val;}.

data node {
	int val; 
	node next;	
}.

pred ll<n, v1> == self = null & n = 0 
	or self::node<a@v1, q> * 
    q::ll<n-1, v1>
  inv n >= 0.


// (11) Valid
checkentail x::node<a@M, r@M> * r::node<b@M, r2@M> * r2::ll<n, v2> |- x::ll<n + 2, v2>.
print residue.
expect Valid.

// (12) Valid
/*checkentail x::node<_, r> * r::node<_, r2> * r2::ll<n,_> |- x::ll<n + 2,_>.
print residue.
expect Valid.
*/

/*
# ex48b.slk --field-imm

Exception(compatible_ann):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(h_formula_2_mem):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(xpure_heap_symbolic):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(xpure_heap):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(xpure_imply):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(sem_imply_add):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(do_base_case_unfold_only):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(process_action):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(process_action):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(heap_entail_non_empty_rhs_heap):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")
Exception(heap_entail_conjunct_helper):Failure("Cpure.ml currently we do not provide support for nested TempAnn/TempRes")

*/
