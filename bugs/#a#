Starting Omega...oc
data node {
  int val
  node next
}


!!!ll-case.slk:15: 2: [entail:0][post:0]
 view ll<n:int>= 
  EBase {1}->true & self=null & n=0 & {FLOW,(1,20)=__flow}
  || EBase exists (Expl)(Impl)[r; 
           nn](ex){2}->EXISTS(Anon_12: self::node<Anon_12,r> * 
           r::ll<nn>[Orig] & nn+1=n & {FLOW,(1,20)=__flow})
  inv: 0<=n
  unstructured formula: 
   {1}->true & self=null & n=0 & {FLOW,(1,20)=__flow}
   || {2}->EXISTS(Anon_12,r,nn: self::node<Anon_12,r> * 
      r::ll<nn>[Orig][LHSCase] & nn+1=n & {FLOW,(1,20)=__flow})
  xform: 0<=n
  is_recursive?: true
  self preds: []
  materialized vars: 
  addr vars: 
  bag of addr: 
  raw base case: {1}->true & self=null & n=0 & {FLOW,(1,20)=__flow}
  view_complex_inv: None
  prune branches: ,
  prune conditions: {
}
  prune baga conditions: 
  prune invs:0:,

!!!:0: 0: [entail:0][post:0]SAT #1

!!!:0: 0: [entail:0][post:0] !((n!=0 | n=0))

!!!:0: 0: [entail:0][post:0]SAT #2

!!!:0: 0: [entail:0][post:0] n!=0 & n=0

!!!ll-case.slk:7: 16: [entail:0][post:0]
 view ll_c<n:int>= 
  ECase case {
         n!=0 -> EBase exists (Expl)[nn](Impl)[r](ex){3}->EXISTS(Anon_11: 
                       self::node<Anon_11,r> * r::ll_c<nn>[Orig] & nn+1=n &
                       {FLOW,(1,20)=__flow})
         ;
         n=0 -> EBase {4}->true & self=null & {FLOW,(1,20)=__flow} 
         }
  inv: 0<=n
  unstructured formula: 
   {3}->EXISTS(Anon_42,nn_43,r_44: self::node<Anon_42,r_44> * 
   r_44::ll_c<nn_43>[Orig][LHSCase] & n!=0 & nn_43+1=n &
   {FLOW,(1,20)=__flow})|| {4}->true & n=0 & self=null & {FLOW,(1,20)=__flow}
  xform: 0<=n
  is_recursive?: true
  self preds: []
  materialized vars: 
  addr vars: 
  bag of addr: 
  raw base case: {4}->true & n=0 & self=null & {FLOW,(1,20)=__flow}
  view_complex_inv: None
  prune branches: ,
  prune conditions: {
}
  prune baga conditions: 
  prune invs:0:,

!!!ll-case.slk:15: 2: [entail:0][post:0]heap_entail_one_context:
ctx:
 es_formula: true & (self=null & n=0 | self!=null & 1<=n) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}


!!!ll-case.slk:15: 2: [entail:0][post:0]heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: true & (self=null & n=0 | self!=null & 1<=n) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!ll-case.slk:15: 2: [entail:0][post:0]heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases

!!!ll-case.slk:15: 2: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: true & (self=null & n=0 | self!=null & 1<=n) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!ll-case.slk:15: 2: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: true & (self=null & n=0 | self!=null & 1<=n) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!ll-case.slk:15: 2: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: true & (self=null & n=0 | self!=null & 1<=n) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!ll-case.slk:15: 2: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: true & (self=null & n=0 | self!=null & 1<=n) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!:0: 0: [entail:0][post:0]simplify the consequent with omega

!!!:0: 0: [entail:0][post:0]IMP #1

!!!:0: 0: [entail:0][post:0]IMP #3

!!!:0: 0: [entail:0][post:0]ante:  self=null & n=0

!!!:0: 0: [entail:0][post:0]conseq:  0<=n

!!!:0: 0: [entail:0][post:0]IMP #4

!!!:0: 0: [entail:0][post:0]ante:  self!=null & 1<=n

!!!:0: 0: [entail:0][post:0]conseq:  0<=n

!!!ll-case.slk:15: 2: [entail:0][post:0]heap_entail_empty_heap: formula is valid

!!!ll-case.slk:15: 2: [entail:0][post:0]heap_entail_empty_heap: res_ctx:
 es_formula: true & (self=null & n=0 | self!=null & 1<=n) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:7: 16: [entail:0][post:0]heap_entail_one_context:
ctx:
 es_formula: true & (self!=null & 1<=n | n=0 & self=null) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}


!!!ll-case.slk:7: 16: [entail:0][post:0]heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: true & (self!=null & 1<=n | n=0 & self=null) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!ll-case.slk:7: 16: [entail:0][post:0]heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases

!!!ll-case.slk:7: 16: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: true & (self!=null & 1<=n | n=0 & self=null) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!ll-case.slk:7: 16: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: true & (self!=null & 1<=n | n=0 & self=null) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!ll-case.slk:7: 16: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: true & (self!=null & 1<=n | n=0 & self=null) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!ll-case.slk:7: 16: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: true & (self!=null & 1<=n | n=0 & self=null) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & 0<=n & {FLOW,(1,20)=__flow}

!!!:0: 0: [entail:0][post:0]simplify the consequent with omega

!!!:0: 0: [entail:0][post:0]IMP #2

!!!:0: 0: [entail:0][post:0]IMP #5

!!!:0: 0: [entail:0][post:0]ante:  self!=null & 1<=n

!!!:0: 0: [entail:0][post:0]conseq:  0<=n

!!!:0: 0: [entail:0][post:0]IMP #6

!!!:0: 0: [entail:0][post:0]ante:  n=0 & self=null

!!!:0: 0: [entail:0][post:0]conseq:  0<=n

!!!ll-case.slk:7: 16: [entail:0][post:0]heap_entail_empty_heap: formula is valid

!!!ll-case.slk:7: 16: [entail:0][post:0]heap_entail_empty_heap: res_ctx:
 es_formula: true & (self!=null & 1<=n | n=0 & self=null) & {FLOW,(1,20)=__flow}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!:0: 0: [entail:0][post:0]IMP #0


!!!:0: 0: [entail:0][post:0]IMP #7

!!!:0: 0: [entail:0][post:0]ante:  self=null & n=0

!!!:0: 0: [entail:0][post:0]conseq:  self=null

!!!:0: 0: [entail:0][post:0]SAT #8

!!!:0: 0: [entail:0][post:0] self=null & (n=1 & self!=null | self!=null & 2<=n)

!!!:0: 0: [entail:0][post:0]IMP #0


!!!:0: 0: [entail:0][post:0]IMP #9

!!!:0: 0: [entail:0][post:0]ante:  self=null & n=0

!!!:0: 0: [entail:0][post:0]conseq:  n=0

!!!:0: 0: [entail:0][post:0]SAT #10

!!!:0: 0: [entail:0][post:0] n=0 & (n=1 & self!=null | self!=null & 2<=n)

!!!:0: 0: [entail:0][post:0]IMP #0


!!!:0: 0: [entail:0][post:0]IMP #11

!!!:0: 0: [entail:0][post:0]ante:  n=0 & self=null

!!!:0: 0: [entail:0][post:0]conseq:  n=0

!!!:0: 0: [entail:0][post:0]SAT #12

!!!:0: 0: [entail:0][post:0] n=0 & (self!=null & 2<=n | n=1 & self!=null)

!!!:0: 0: [entail:0][post:0]IMP #0


!!!:0: 0: [entail:0][post:0]IMP #13

!!!:0: 0: [entail:0][post:0]ante:  n=0 & self=null

!!!:0: 0: [entail:0][post:0]conseq:  self=null

!!!:0: 0: [entail:0][post:0]SAT #14

!!!:0: 0: [entail:0][post:0] self=null & (self!=null & 2<=n | n=1 & self!=null)

!!!:0: 0: [entail:0][post:0]SAT #15

!!!:0: 0: [entail:0][post:0] self=null & n=0

!!!:0: 0: [entail:0][post:0]SAT #16

!!!:0: 0: [entail:0][post:0] exists(r:exists(nn:nn+1=n & self!=null & (r=null & nn=0 | r!=null & 1<=nn)))

!!!:0: 0: [entail:0][post:0]SAT #17

!!!:0: 0: [entail:0][post:0] self=null & n=0

!!!:0: 0: [entail:0][post:0]SAT #18

!!!:0: 0: [entail:0][post:0] nn+1=n & self!=null & (r=null & nn=0 | r!=null & 1<=nn)

!!!:0: 0: [entail:0][post:0]SAT #19

!!!:0: 0: [entail:0][post:0] exists(nn_43:exists(r_44:n!=0 & nn_43+1=n & self!=null & (r_44!=null & 
1<=nn_43 | nn_43=0 & r_44=null)))

!!!:0: 0: [entail:0][post:0]SAT #20

!!!:0: 0: [entail:0][post:0] n=0 & self=null
data node {
  int val
  node next
}
data Object {

}

 view ll<n:int>= 
  EBase exists (Expl)(Impl)[r; 
        nn](ex){2}->EXISTS(Anon_12: self::node<Anon_12,r> * r::ll<nn>[Orig] &
        nn+1=n & {FLOW,(1,20)=__flow})
  || EBase {1}->true & self=null & n=0 & {FLOW,(1,20)=__flow}
  inv: 0<=n
  unstructured formula: 
   {1}->true & self=null & n=0 & {FLOW,(1,20)=__flow}
   || {2}->EXISTS(Anon_12,r,nn: self::node<Anon_12,r> * 
      r::ll<nn>[Orig][LHSCase] & nn+1=n & {FLOW,(1,20)=__flow})
  xform: self=null & n=0 | self!=null & 1<=n
  is_recursive?: true
  self preds: []
  materialized vars: [(self,partial,)]
  addr vars: self
  bag of addr: 
  raw base case: {1}->true & self=null & n=0 & {FLOW,(1,20)=__flow}
  base case: self=null | n=0->self=null & n=0
  view_complex_inv: None
  prune branches: ,
  prune conditions: {
}
  prune baga conditions: 
  prune invs:0:,
 view ll_c<n:int>= 
  ECase case {
         n!=0 -> EBase exists (Expl)[nn](Impl)[r](ex){3}->EXISTS(Anon_11: 
                       self::node<Anon_11,r> * r::ll_c<nn>[Orig] & nn+1=n &
                       {FLOW,(1,20)=__flow})
         ;
         n=0 -> EBase {4}->true & self=null & {FLOW,(1,20)=__flow} 
         }
  inv: 0<=n
  unstructured formula: 
   {3}->EXISTS(Anon_42,nn_43,r_44: self::node<Anon_42,r_44> * 
   r_44::ll_c<nn_43>[Orig][LHSCase] & n!=0 & nn_43+1=n &
   {FLOW,(1,20)=__flow})|| {4}->true & n=0 & self=null & {FLOW,(1,20)=__flow}
  xform: self!=null & 1<=n | n=0 & self=null
  is_recursive?: true
  self preds: []
  materialized vars: [(self,partial,)]
  addr vars: self
  bag of addr: 
  raw base case: {4}->true & n=0 & self=null & {FLOW,(1,20)=__flow}
  base case: n=0 | self=null->n=0 & self=null
  view_complex_inv: None
  prune branches: ,
  prune conditions: {
}
  prune baga conditions: 
  prune invs:0:,











run_entail_check:
 EXISTS(flted_52_46: x::node<Anon_13,flted_52_46> & flted_52_46=null & n=1 &
{FLOW,(17,18)=__norm}) |-  EBase EXISTS(n_52: x::ll_c<n_52>[Orig][LHSCase] & n_52=n &
       {FLOW,(17,18)=__norm})


!!!:0: 0: [entail:0][post:0]SAT #21

!!!:0: 0: [entail:0][post:0] flted_52_46=null & n=1 & x!=null

!!!:0: 0: [entail:0][post:0]heap_entail_struc_init:
ctx:
 
Good Context: [es_formula: 
                EXISTS(flted_52_46: x::node<Anon_13,flted_52_46> &
                flted_52_46=null & n=1 & {FLOW,(17,18)=__norm})
               es_pure: true
               es_heap: true
               es_aux_conseq: true
               es_must_error: None
               es_var_label: None
               es_var_ctx_lhs: true
               es_var_ctx_rhs: true
               es_var_loc:  0:0]

conseq:
 EBase EXISTS(n_52: x::ll_c<n_52>[Orig][LHSCase] & n_52=n &
       {FLOW,(17,18)=__norm})

!!!:0: 0: [entail:0][post:0]heap_entail_one_context_struc:
ctx:
 es_formula: 
  EXISTS(flted_52_46: x::node<Anon_13,flted_52_46> & flted_52_46=null & n=1 &
  {FLOW,(17,18)=__norm})
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 EBase EXISTS(n_52: x::ll_c<n_52>[Orig][LHSCase] & n_52=n &
       {FLOW,(17,18)=__norm})

!!!:0: 0: [entail:0][post:0]heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
context:
 es_formula: 
  EXISTS(flted_52_46: x::node<Anon_13,flted_52_46> & flted_52_46=null & n=1 &
  {FLOW,(17,18)=__norm})
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 EBase EXISTS(n_52: x::ll_c<n_52>[Orig][LHSCase] & n_52=n &
       {FLOW,(17,18)=__norm})

!!!:0: 0: [entail:0][post:0]heap_entail_one_context:
ctx:
 es_formula: 
  EXISTS(flted_52_46: x::node<Anon_13,flted_52_46> & flted_52_46=null & n=1 &
  {FLOW,(17,18)=__norm})
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 EXISTS(n_52: x::ll_c<n_52>[Orig][LHSCase] & n_52=n & {FLOW,(17,18)=__norm})


!!!:0: 0: [entail:0][post:0]heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  EXISTS(flted_52_46: x::node<Anon_13,flted_52_46> & flted_52_46=null & n=1 &
  {FLOW,(17,18)=__norm})
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 EXISTS(n_52: x::ll_c<n_52>[Orig][LHSCase] & n_52=n & {FLOW,(17,18)=__norm})

!!!:0: 0: [entail:0][post:0]heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases

!!!:0: 0: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  EXISTS(flted_52_46: x::node<Anon_13,flted_52_46> & flted_52_46=null & n=1 &
  {FLOW,(17,18)=__norm})
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 EXISTS(n_52: x::ll_c<n_52>[Orig][LHSCase] & n_52=n & {FLOW,(17,18)=__norm})

!!!ll-case.slk:52: 12: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 EXISTS(n_52: x::ll_c<n_52>[Orig][LHSCase] & n_52=n & {FLOW,(17,18)=__norm})

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 x::ll_c<n_58>[Orig][LHSCase] & n_58=n & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_split_lhs_phases: 
                            
ante:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 x::ll_c<n_58>[Orig][LHSCase] & true & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 x::ll_c<n_58>[Orig][LHSCase] & true & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 x::ll_c<n_58>[Orig][LHSCase] & true & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 x::ll_c<n_58>[Orig][LHSCase] & true & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]do_fold: LHS ctx: x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
{FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]do_fold: RHS view:  x::ll_c<n>[Orig]

!!!ll-case.slk:53: 5: [entail:0][post:0]do_fold: view_form:  ECase case {
        n!=0 -> EBase exists (Expl)[nn_59](Impl)[r_60](ex)EXISTS(Anon_61: 
                      x::node<Anon_61,r_60> * r_60::ll_c<nn_59>[Orig] &
                      nn_59+1=n & {FLOW,(1,20)=__flow})
        ;
        n=0 -> EBase {4}->true & x=null & {FLOW,(1,20)=__flow} 
        }

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_one_context_struc:
ctx:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 ECase case {
        n!=0 -> EBase exists (Expl)[nn_59](Impl)[r_60](ex)EXISTS(Anon_61: 
                      x::node<Anon_61,r_60> * r_60::ll_c<nn_59>[Orig] &
                      nn_59+1=n & {FLOW,(1,20)=__flow})
        ;
        n=0 -> EBase {4}->true & x=null & {FLOW,(1,20)=__flow} 
        }

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
context:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 ECase case {
        n!=0 -> EBase exists (Expl)[nn_59](Impl)[r_60](ex)EXISTS(Anon_61: 
                      x::node<Anon_61,r_60> * r_60::ll_c<nn_59>[Orig] &
                      nn_59+1=n & {FLOW,(1,20)=__flow})
        ;
        n=0 -> EBase {4}->true & x=null & {FLOW,(1,20)=__flow} 
        }

!!!:0: 0: [entail:0][post:0]SAT #22

!!!:0: 0: [entail:0][post:0] flted_52_57=null & n=1 & n!=0 & x!=null

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_one_context:
ctx:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 & n!=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_gen_expl_vars: [nn_59]
 es_gen_impl_vars: [r_60]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 EXISTS(Anon_61: x::node<Anon_61,r_60> * r_60::ll_c<nn_59>[Orig] & nn_59+
1=n & {FLOW,(1,20)=__flow})


!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 & n!=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_gen_expl_vars: [nn_59]
 es_gen_impl_vars: [r_60]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 EXISTS(Anon_61: x::node<Anon_61,r_60> * r_60::ll_c<nn_59>[Orig] & nn_59+
1=n & {FLOW,(1,20)=__flow})

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 & n!=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_gen_expl_vars: [nn_59]
 es_gen_impl_vars: [r_60]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 EXISTS(Anon_61: x::node<Anon_61,r_60> * r_60::ll_c<nn_59>[Orig] & nn_59+
1=n & {FLOW,(1,20)=__flow})

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 & n!=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_gen_expl_vars: [nn_59]
 es_gen_impl_vars: [r_60]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 x::node<Anon_64,r_60> * r_60::ll_c<nn_59>[Orig] & nn_59+1=n &
{FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_split_lhs_phases: 
                            
ante:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 & n!=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_gen_expl_vars: [nn_59]
 es_gen_impl_vars: [r_60]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 x::node<Anon_64,r_60> * r_60::ll_c<nn_59>[Orig] & true &
{FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 & n!=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_gen_expl_vars: [nn_59]
 es_gen_impl_vars: [r_60]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 x::node<Anon_64,r_60> * r_60::ll_c<nn_59>[Orig] & true &
{FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 & n!=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_gen_expl_vars: [nn_59]
 es_gen_impl_vars: [r_60]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 x::node<Anon_64,r_60> * r_60::ll_c<nn_59>[Orig] & true &
{FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 & n!=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_gen_expl_vars: [nn_59]
 es_gen_impl_vars: [r_60]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 x::node<Anon_64,r_60> * r_60::ll_c<nn_59>[Orig] & true &
{FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]do_match: using  x::node<Anon_13,flted_52_57> to prove  x::node<Anon_64,r_60>

!!!ll-case.slk:9: 16: [entail:0][post:0]do_match (after): LHS:  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
{FLOW,(17,18)=__norm}

!!!ll-case.slk:9: 16: [entail:0][post:0]do_match (after): RHS: r_60::ll_c<nn_59>[Orig] & true & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 r_60::ll_c<nn_59>[Orig] & true & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 r_60::ll_c<nn_59>[Orig] & true & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: n!=0
 es_var_loc:  0:0
conseq:
 r_60::ll_c<nn_59>[Orig] & true & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]do_fold: LHS ctx: true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
{FLOW,(17,18)=__norm}

!!!ll-case.slk:9: 16: [entail:0][post:0]do_fold: RHS view:  r_60::ll_c<nn_59>[Orig]

!!!ll-case.slk:9: 16: [entail:0][post:0]do_fold: view_form:  EBase {4}->true & nn_59=0 & r_60=null & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_one_context_struc:
ctx:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 EBase {4}->true & nn_59=0 & r_60=null & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 EBase {4}->true & nn_59=0 & r_60=null & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_one_context:
ctx:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 {4}->true & nn_59=0 & r_60=null & {FLOW,(1,20)=__flow}


!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 {4}->true & nn_59=0 & r_60=null & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 {4}->true & nn_59=0 & r_60=null & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n); (r_60,null)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 {4}->true & nn_59=0 & r_60=null & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n); (r_60,null)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 {4}->true & nn_59=0 & r_60=null & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n); (r_60,null)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 {4}->true & nn_59=0 & r_60=null & {FLOW,(1,20)=__flow}

!!!:0: 0: [entail:0][post:0]simplify the consequent with omega

!!!:0: 0: [entail:0][post:0]IMP #3

!!!:0: 0: [entail:0][post:0]IMP #23

!!!:0: 0: [entail:0][post:0]ante:  flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & x!=null

!!!:0: 0: [entail:0][post:0]conseq:  r_60=null

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_empty_heap: folding: formula is valid

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: nn_59=0 & r_60=null
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n); (r_60,null)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:9: 16: [entail:0][post:0]fold: rs1:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: nn_59=0 & r_60=null
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n); (r_60,null)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:9: 16: [entail:0][post:0]fold: context at beginning of fold: r_60
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:9: 16: [entail:0][post:0]fold: context at end of fold: r_60
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: nn_59=0 & r_60=null
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n); (r_60,null)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:9: 16: [entail:0][post:0]fold: es.es_pure:  nn_59=0 & r_60=null

!!!ll-case.slk:9: 16: [entail:0][post:0]split_universal: evars: Anon_64, n_58

!!!ll-case.slk:9: 16: [entail:0][post:0]split_universal: expl_inst_vars: nn_59

!!!ll-case.slk:9: 16: [entail:0][post:0]split_universal: vvars: nn_59

!!!ll-case.slk:9: 16: [entail:0][post:0]split_universal: to_ante:  true

!!!ll-case.slk:9: 16: [entail:0][post:0]split_universal: to_conseq:  nn_59=0

!!!ll-case.slk:9: 16: [entail:0][post:0]process_fold_result: new_ctx after folding: r_60
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:9: 16: [entail:0][post:0]process_fold_result: vs2: nn_59

!!!ll-case.slk:9: 16: [entail:0][post:0]process_fold_result: to_ante:  true

!!!ll-case.slk:9: 16: [entail:0][post:0]process_fold_result: to_conseq:  nn_59=0

!!!ll-case.slk:9: 16: [entail:0][post:0]process_fold_result: new_conseq:
 true & nn_59=0 & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_one_context:
ctx:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & nn_59=0 & {FLOW,(1,20)=__flow}


!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & nn_59=0 & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & nn_59=0 & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & nn_59=0 & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & nn_59=0 & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & nn_59=0 & {FLOW,(1,20)=__flow}

!!!:0: 0: [entail:0][post:0]simplify the consequent with omega

!!!:0: 0: [entail:0][post:0]IMP #4

!!!:0: 0: [entail:0][post:0]IMP #24

!!!:0: 0: [entail:0][post:0]ante:  flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & x!=null

!!!:0: 0: [entail:0][post:0]conseq:  exists(nn_59:nn_59=0)

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_empty_heap: folding: formula is valid

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 &
  {FLOW,(17,18)=__norm}
 es_pure: nn_59=0
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:9: 16: [entail:0][post:0]process_fold_result: context at end fold: r_60
 
Good Context: [es_formula: 
                true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & 
                nn_59=0 & nn_59=0 & {FLOW,(17,18)=__norm}
               es_pure: nn_59=0
               es_heap: x::node<Anon_13,flted_52_57>
               es_gen_expl_vars: [nn_59]
               es_rhs_eqset: [(n_58,n)]
               es_aux_conseq: true
               es_must_error: None
               es_var_label: None
               es_var_ctx_lhs: true
               es_var_ctx_rhs: true
               es_var_loc:  0:0]


!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: nn_59=0
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_subst (from): [Anon_64]
 es_subst (to): [Anon_13]
 es_aux_conseq: nn_59=0
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & nn_59+1=n & nn_59=0 & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: nn_59=0
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_subst (from): [Anon_64]
 es_subst (to): [Anon_13]
 es_aux_conseq: nn_59=0
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & nn_59+1=n & nn_59=0 & {FLOW,(1,20)=__flow}

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: nn_59=0
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_subst (from): [Anon_64]
 es_subst (to): [Anon_13]
 es_aux_conseq: nn_59=0
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & nn_59+1=n & nn_59=0 & {FLOW,(1,20)=__flow}

!!!:0: 0: [entail:0][post:0]simplify the consequent with omega

!!!:0: 0: [entail:0][post:0]IMP #5

!!!:0: 0: [entail:0][post:0]IMP #25

!!!:0: 0: [entail:0][post:0]ante:  flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & nn_59=0 & 
x!=null

!!!:0: 0: [entail:0][post:0]conseq:  exists(nn_59:1+nn_59=n & nn_59=0)

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_empty_heap: folding: formula is valid

!!!ll-case.slk:9: 16: [entail:0][post:0]heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: nn_59+1=n & nn_59=0 & nn_59=0
 es_heap: x::node<Anon_13,flted_52_57>
 es_gen_expl_vars: [nn_59]
 es_rhs_eqset: [(n_58,n)]
 es_subst (from): [Anon_64]
 es_subst (to): [Anon_13]
 es_aux_conseq: nn_59=0
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!:0: 0: [entail:0][post:0]SAT #26

!!!:0: 0: [entail:0][post:0] flted_52_57=null & n=1 & n=0 & x!=null

!!!ll-case.slk:53: 5: [entail:0][post:0]fold: rs1:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: nn_59+1=n & nn_59=0 & nn_59=0
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_subst (from): [Anon_64]
 es_subst (to): [Anon_13]
 es_aux_conseq: nn_59=0
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:53: 5: [entail:0][post:0]fold: context at beginning of fold: x
 es_formula: 
  x::node<Anon_13,flted_52_57> & flted_52_57=null & n=1 &
  {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: true
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:53: 5: [entail:0][post:0]fold: context at end of fold: x
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: nn_59+1=n & nn_59=0 & nn_59=0
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_subst (from): [Anon_64]
 es_subst (to): [Anon_13]
 es_aux_conseq: nn_59=0
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:53: 5: [entail:0][post:0]fold: es.es_pure:  nn_59+1=n & nn_59=0 & nn_59=0

!!!ll-case.slk:53: 5: [entail:0][post:0]split_universal: evars: n_58

!!!ll-case.slk:53: 5: [entail:0][post:0]split_universal: expl_inst_vars: 

!!!ll-case.slk:53: 5: [entail:0][post:0]split_universal: vvars: n_58

!!!ll-case.slk:53: 5: [entail:0][post:0]split_universal: to_ante:  true

!!!ll-case.slk:53: 5: [entail:0][post:0]split_universal: to_conseq:  true

!!!ll-case.slk:53: 5: [entail:0][post:0]process_fold_result: new_ctx after folding: x
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:53: 5: [entail:0][post:0]process_fold_result: vs2: n_58

!!!ll-case.slk:53: 5: [entail:0][post:0]process_fold_result: to_ante:  true

!!!ll-case.slk:53: 5: [entail:0][post:0]process_fold_result: to_conseq:  true

!!!ll-case.slk:53: 5: [entail:0][post:0]process_fold_result: new_conseq:
 true & true & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_one_context:
ctx:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & true & {FLOW,(17,18)=__norm}


!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & true & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & true & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & true & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & true & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & true & {FLOW,(17,18)=__norm}

!!!:0: 0: [entail:0][post:0]simplify the consequent with omega

!!!:0: 0: [entail:0][post:0]IMP #6

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_empty_heap: formula is valid

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_empty_heap: res_ctx:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0

!!!ll-case.slk:53: 5: [entail:0][post:0]process_fold_result: context at end fold: x
 
Good Context: [es_formula: 
                true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & 
                nn_59=0 & nn_59=0 & nn_59+1=n & nn_59=0 &
                {FLOW,(17,18)=__norm}
               es_pure: true
               es_heap: x::node<Anon_13,flted_52_57>
               es_rhs_eqset: [(n_58,n)]
               es_aux_conseq: true
               es_must_error: None
               es_var_label: None
               es_var_ctx_lhs: true
               es_var_ctx_rhs: true
               es_var_loc:  0:0]


!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & n_58=n & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & n_58=n & {FLOW,(17,18)=__norm}

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0
conseq:
 true & n_58=n & {FLOW,(17,18)=__norm}

!!!:0: 0: [entail:0][post:0]simplify the consequent with omega

!!!:0: 0: [entail:0][post:0]IMP #7

!!!:0: 0: [entail:0][post:0]IMP #27

!!!:0: 0: [entail:0][post:0]ante:  flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & nn_59=0 & 
nn_59+1=n & nn_59=0 & x!=null

!!!:0: 0: [entail:0][post:0]conseq:  true

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_empty_heap: formula is valid

!!!ll-case.slk:53: 5: [entail:0][post:0]heap_entail_empty_heap: res_ctx:
 es_formula: 
  true & flted_52_57=null & n=1 & n!=0 & r_60=flted_52_57 & nn_59=0 & 
  nn_59=0 & nn_59+1=n & nn_59=0 & {FLOW,(17,18)=__norm}
 es_pure: true
 es_heap: x::node<Anon_13,flted_52_57>
 es_rhs_eqset: [(n_58,n)]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
 es_var_ctx_lhs: true
 es_var_ctx_rhs: true
 es_var_loc:  0:0Entail (1): Valid.
 true & r_60=null & n=1 & n!=0 & nn_59=0 & nn_59=0 & nn_59+1=n & nn_59=0 &
 {FLOW,(17,18)=__norm}
Stop Omega... 23 invocations 
