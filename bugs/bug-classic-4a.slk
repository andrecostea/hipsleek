data node{
	int val;
	node next;
}.

//useless parameters

HeapPred P1(node a).
HeapPred P2(node a).

pred ll<n:node> == 
  n::node<_,null> & self=null
   or self::node<_,p>*p::ll<n>
inv true.


// (1)
infer [P1] 
  n::node<_,null> & self=null
|- P1(self).
print residue.
// should succeed with residue.

// (2)
infer_exact
[P1] n::node<_,null> & x=null
|- P1(x).
print residue.
// should just fail

// (3)
infer_exact
[P1] n::node<_,null> 
|- P1(self).
print residue.
// fail as expected ...


// (4)
infer
[P1] n::node<_,null> 
|- P1(self).
print residue.
// succeed with residue

