
data node {
	int val;
	node next;
}.

pred sll<n> == self = null & n = 0 
  or self::node<_ , q> * q::sll<n-1>
  inv n >= 0.

checkentail x=5 |- x>3.
print residue.

checkentail x=5 |- x>8.
print residue.

checkentail y=6 & x>y & x>5 |- x>8.
print residue.


checkentail x::sll<n> & n>2 |- x::node<_,q>*q::node<_,r>.


checkentail x::sll<n> & n>=2 |- x::node<_,q>*q::node<_,r>*r::node<_,z>.


checkentail x::sll<n> & n=2 |- x::node<_,q>*q::node<_,r>*r::node<_,z>.

checkentail x::sll<n> & n>2 |- x::node<_,q>.

checkentail x::sll<n> & n>2 |- (exists q: x::node<_,q>).

checkentail x::sll<n> & n>2 |- [q] x::node<_,q>.


print residue.








