// examples from bi-abduction paper

data node {
	node next;	
}.

pred lseg<p> == self = p 
	or self::node<q> * q::lseg<p> & self!=p 
  inv true.

HeapPred H1(node y).


infer [z,H1] H1(y)*x::node<z>   |- y::lseg<null> * x::lseg<z> .
print residue.
/*
# ex64r2.slk

# Why are we losing x=z?

 <1>x::node<z>@M * HP_186(flted_35_185,y)&x!=null & flted_35_185=null&{FLOW,(20,21)=__norm#E}[]
 inferred hprel: [HP_186(flted_35_185,y@NI)&true --> emp&flted_35_185=null; 
                  H1(y)&
                   true --> y::lseg<flted_35_185>@M * 
                            HP_186(flted_35_185,y@NI)&
                   true]
[[ Fold ==>  InferUnfold  ==>  InferHeap ==>  Match(y,y)]]

# infer-str & default branch triggers FALSE

Entail (1) : Valid. 
Residue:
 <1>hfalse&false&{FLOW,(20,21)=__norm#E}[]
 inferred pure: [z=null]
 inferred hprel: [HP_65(flted_14_64,y@NI)&true --> emp&
                   y=flted_14_64 & flted_14_64=null & y!=flted_14_64; 
                  H1(y)&
                   true --> y::lseg<flted_14_64>@M * HP_65(flted_14_64,y@NI)&
                   true]

*/
