data node {
  node f0;
}.

pred ls<y:node> ==
 self = y
or (exists xp: self::node<xp> * xp::ls<y> //& null != self 
   & self != y).


lemma_unsafe self::ls<z> <- (exists u: self::ls<u>*u::ls<z> * z::ls<null>@L).

checkentail x::ls<y> * y::ls<z> * z::ls<null>
         |- x::ls<z> * z::ls<null>.
//expect Valid.


checkentail x::ls<y> * y::ls<null>
         |- x::ls<null> .
//expect Valid.
// succeeds

