data node {
  int val;
  node next;
}.

pred p<v> == self::node<v,_>
  inv self!=null.

// (1) ==> v<=1
infer[v] y::node<_,r>@v |- y::node<a,b>@I.
print residue.

// (2) valid
checkentail y::node<_,r>@v & v<:@M|- y::node<a,b>@I.
print residue.

// (3) ==> v<=1 or v=@I or v=@M
infer[v] y::node<_,r>@v * x::node<_,r>@v |- y::node<_,_>@I *x::node<_,_>@L.
print residue.

checkentail y::node<_,r>@I |- [v] y::node<_,_>@v.
print residue.
/*
 PROBLEM : why is there EXISTS v for explicit instantiation?
 <1>EXISTS(v: true&Anon_27=Anon_26 & Anon_28=r & @I<:v&{FLOW,(17,18)=__norm})[]
*/

checkentail y::node<r,_> & r>6  |- [v] y::node<v,_> & v>4.
print residue.
/*
 PROBLEM : what the above explicit v disappeared?

 <1>true&6<r & Anon_26=Anon_25 & 4<r&{FLOW,(17,18)=__norm}[]
*/



