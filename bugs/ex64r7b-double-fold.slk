// examples from bi-abduction paper

data node {
	node next;	
}.

pred ll<n> == self = null & n=0 
	or self::node<q> * q::ll<n-1> 
  inv n>=0.

HeapPred H(node y).

infer [z,H] x::node<z>*H(y)    |- y::node<null> * x::ll<a>.
// fail
/*
infer [H] H(y)    |- y::node<null>.
print residue.
infer [z] x::node<z>    |- x::ll<a>.
*/
//infer [H] x::node<null>*H(y)    |- y::node<null> * x::ll<a>.
//infer [n] x::node<null>*y::ll<n>    |- y::node<null> * x::ll<a>.
//infer [n] x::node<null>*y::ll<n> & n=1   |- y::node<null> * x::ll<a>.
//infer [zzz,H1] x::node<zzz>*H1(y)   |- y::node<null>  .
print residue.
expect Valid.

/*
# ex64r7b.slk -dre "om_gist"

# gist not working properly ..

(====)
om_gist@29@27@26@25@24@21@20@2
om_gist inp1 : (z!=null | flted_13_52=null)
om_gist inp2 : 0+1=a & q_43=z & z=null & y!=null & x!=null & y!=x
om_gist@29 EXIT: (flted_13_52=null | z!=null)


*/
