/* singly linked lists */

/* representation of a node */

data node {
	int val; 
	node next;	
}.


/* view for a singly linked list */

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> 
  inv n >= 0.

checkentail x::node<1,x2>*x2::node<3,null> |- x::ll<n>.

print residue.

/*
checkentail x::node<1,x2>*x2::node<3,null> 
  |- x::node<_,y1>*y1::node<_,null>.

print residue.

checkentail x::ll<m> & m=4  |- x::ll<n>.

print residue.


checkentail x::node<_,q>*q::ll<m> & m=4  |- x::node<_,r>.

print residue.


checkentail x::node<_,q> * q::ll<m> & m=4  |- x::ll<n> & n>6.

checkentail x::ll<m> & m=4  |- [n] x::node<_,q> * q::ll<n-1>.

print residue.
*/
