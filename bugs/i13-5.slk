// examples from bi-abduction paper

data node {
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<q> * q::ll<n-1> 
  inv n >= 0.

pred lseg<p> == self = p 
	or self::node<q> * q::lseg<p> & self!=p 
  inv true.

HeapPred H1(node a ).


infer [H1] H1(y)  |- y::node<null>.
print residue.

/*
infer [H1] H1(y)  |- y::node<null>.
print residue.

ARNING : Pushing 1 stk_estate (4)

Entail (1) : Valid. 

 <1>HP_40(flted_18_39)&flted_18_39=null&{FLOW,(19,20)=__norm}[]
 inferred hprel: [// Sleek_Entail(1)
H1(y) --> y::node<flted_18_39>@M * HP_40(flted_18_39); 
// Sleek_Entail(1)
HP_40(flted_18_39) --> emp&
flted_18_39=null]

infer [H1] H1(y)  |- y=null .
print residue.

--OK

infer [H1] H1(y)  |- y::lseg<z> .
print residue.

--OK

# 13-5.slk --sa-en-cont

infer [H1] H1(y)  |- y::lseg<null> .
print residue.

WARNING : Pushing 2 stk_estate (4)
Message: unsat_xpure : encountered a disjunctive formula 
!!! WARNING logtime exception:0.004caught
(Program not linked with -g, cannot print stack backtrace)
Entailment Failure (1) Failure("unsat_xpure : encountered a disjunctive formula \n")

infer [] x::node<z>  |- x::lseg<r> .
print residue.

-------

Why only one solution?

 <1>x::node<z>@M&r=x&{FLOW,(19,20)=__norm}[]




//(5)
infer [z,H1] H1(y)*x::node<z>  |- x::lseg<z> * y::lseg<null> .
print residue.

infer [z] x::node<z>  |- x::lseg<z> .
print residue.

infer [] x::node<z>  |- 
   (exists r: x::node<q> & q::lseg<r> & x!=r).
print residue.
*/