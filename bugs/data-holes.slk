data node {
	int f1;
	int f2;
	int f3;
	node f4;
	node f5;	
}.

data node2 {
	int f1;
}.

checkentail x.f1::<1> * x.node.f5::<a> * x.f4::<b> |- x::node<#,#,#,u,v>.

//checkentail  x::node<m,n,#,#,#> * x::node<#,#,a,b,c> |- x::node<m,n,a,b,c>.
//print residue.

//checkentail  x::node<m,n,#,#,#> * x::node<#,#,a,b,c> |- false.
// BUG : should fail
// need normalization so that LHS is not false


//checkentail  x::node<m,n,#,#,#> |- x::node<m,n,a,b,c>.
// BUG : should fail
// need to check that LHS is bigger than RHS
//print residue.

//checkentail x.f5::<a> * x.f4::<b> |- x::node<#,#,#,u,v>.
//checkentail x.node.f5::<a> * x.node.f4::<b> |- x::node<#,#,#,u,v>.
// should translate to below:
//checkentail  x::node<#,#,#,#,a> * x::node<#,#,#,b,#> |- x::node<#,#,#,u,v>.


//checkentail x.f1::<5> * x.f2::<4> * x.f5::<_> |- x::node<5,4,#,#,a>.
// should translate to below:
//checkentail  x::node<5,#,#,#,#> * x::node<#,4,#,#,#> 
//  * x::node<#,#,#,#,_>  |- x::node<5,4,#,#,a>.
