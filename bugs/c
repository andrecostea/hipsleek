heap_n_pure_entail
Trace
one_ctx_entail
Trace
WARNING: Command for starting mona interactively (mona_inter) not found!
Starting Omega...oc

@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_infer_vars_rel: []
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@1! new_ctx: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_infer_vars_rel: []
 es_unsat_flag: false
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@1! ctx0.es_heap bef: emp
@1! ctx0.es_heap after: emp
@1! h1: q_80::node<_,r>@M
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! h2: self_lem_13::lseg<n,r>@M
@1! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82
@1! p2: true
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@1! estate.es_heap match_: emp
@1! ctx0 match_: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_infer_vars_rel: []
 es_unsat_flag: false
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@1! l:[(lhs_rest: emp,lhs_node: q_80::node<_,r>@M,holes:[],match_type: Root)]
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! r:[([ 
  Type: Root
  LHS: q_80::node<_,r>@M
  RHS: self_lem_13::lseg<n,r>@M
 lhs_rest: emp
 rhs_rest: emp],?)]
@1! **** sel_hp_rel **********************
@1! hp_rel:[]
@1! sel_hp_rel:[]
@1! sel_post_hp_rel:[]
@1! cyclic:add_checkpoint:fold
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:1Fold =>
                       LHS: q_80::node<_,r>@M
                       RHS: self_lem_13::lseg<n,r>@M;
         Prio:1RD_Lemma =>
                           LHS: q_80::node<_,r>@M
                           RHS: self_lem_13::lseg<n,r>@M
         ]]
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! sorted action:[(1): Prio:1SEARCH =>[
        Prio:1Fold =>
                      LHS: q_80::node<_,r>@M
                      RHS: self_lem_13::lseg<n,r>@M;
        Prio:1RD_Lemma =>
                          LHS: q_80::node<_,r>@M
                          RHS: self_lem_13::lseg<n,r>@M
        ]]
@1! estate: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_infer_vars_rel: []
 es_unsat_flag: false
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: process_action :
 ### action =  Fold =>
         Type: Root
         LHS: q_80::node<_,r>@M
         RHS: self_lem_13::lseg<n,r>@M
 lhs_rest: emp
 rhs_rest: emp
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]


@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: do_fold: anns:[@M,@M]
@1!:0: 0: do_fold: LHS ctx: q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
 es_heap: emp
 es_ante_evars: [q_80; _; m_82]

@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: do_fold: RHS view:  self_lem_13::lseg<n,r>@M
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: do_fold: view_form:  :EBase {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_83; q_84](ex)[]{2}->(exists p_85,
          flted_5_86: self_lem_13::node<v_83,q_84>@M * 
          q_84::lseg<flted_5_86,p_85>@M&n=flted_5_86+1 & r!=self_lem_13 & 
          p_85=r&{FLOW,(1,24)=__flow})[]
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_one_context_struc:
ctx:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 :EBase {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_83; q_84](ex)[]{2}->(exists p_85,
          flted_5_86: self_lem_13::node<v_83,q_84>@M * 
          q_84::lseg<flted_5_86,p_85>@M&n=flted_5_86+1 & r!=self_lem_13 & 
          p_85=r&{FLOW,(1,24)=__flow})[]
@1! es(1): q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
tid:None
delayed_f:None
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 :EBase {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_83; q_84](ex)[]{2}->(exists p_85,
          flted_5_86: self_lem_13::node<v_83,q_84>@M * 
          q_84::lseg<flted_5_86,p_85>@M&n=flted_5_86+1 & r!=self_lem_13 & 
          p_85=r&{FLOW,(1,24)=__flow})[]
@1! fs:[]
@1! es(2): q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@1! es(3): q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@1!:heap_entail_one_context
@1! f:#DN# q_80::node<_,r>@M
@1!:0: 0: SAT #29
@1!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]
@1!:heap_entail_conjunct_lhs
@1!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]


@1! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@1! f:#DN# q_80::node<_,r>@M
@1! f:#DN# q_80::node<_,r>@M
@1!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: IMP #30
@1!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13
@1!:0: 0: imply_timeout: conseq:  r=self_lem_13
@1! Ann Vars:[]
@1! Inv: q_80!=null & q_80=self_lem_13
@1!:0: 0: res: :false
@1!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: IMP #31
@1!:0: 0: imply_timeout: ante:  m_82=0 & n=1+m_82
@1!:0: 0: imply_timeout: conseq:  n=0
@1! Ann Vars:[]
@1! Inv: m_82=0 & n=1+m_82
@1!:0: 0: res: :false
@1! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1! rhs(orig): : r=self_lem_13 & n=0
@1! lhs (after filter_ante): : q_80!=null & m_82=0 & q_80=self_lem_13 & n=1+m_82
@1! fml: : q_80!=null & m_82=0 & q_80=self_lem_13 & n=1+m_82 & r=self_lem_13 & n=0
@1!:0: 0: SAT #32
@1!:0: 0:  q_80!=null & m_82=0 & q_80=self_lem_13 & n=1+m_82 & r=self_lem_13 & n=0
@1! f:#DN# q_80::node<_,r>@M
@1! f:#DN# q_80::node<_,r>@M
@1! infer_vars_hp_rel:[]
@1! infer_vars_hp_rel:[]
@1! h_inf_args:[]
@1! es_infer_vars:[]
@1! early contra detect:false
@1! Early lhs-rhs contra detected
@1! f:#DN# q_80::node<_,r>@M
@1! f:#DN# q_80::node<_,r>@M
@1!:0: 0: SAT #33
@1!:0: 0:  n=0
@1!:0: 0: SAT #34
@1!:0: 0:  r=self_lem_13
@1!:0: 0: SAT #35
@1!:0: 0:  m_82=0 & n=1+m_82 & n=0
@1!:0: 0: SAT #36
@1!:0: 0:  q_80!=null & q_80=self_lem_13 & r=self_lem_13
@1!:0: 0: SAT #37
@1!:0: 0:  m_82=0 & n=1+m_82 & n=0
@1!:0: 0: SAT #38
@1!:0: 0:  q_80!=null & q_80=self_lem_13 & r!=self_lem_13
@1!:heap_entail_one_context
@1! f:#DN# q_80::node<_,r>@M
@1!:0: 0: SAT #39
@1!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {2}->(exists p_85,flted_5_86: self_lem_13::node<v_83,q_84>@M * 
q_84::lseg<flted_5_86,p_85>@M&n=flted_5_86+1 & r!=self_lem_13 & p_85=r&
{FLOW,(1,24)=__flow})[]
@1!:heap_entail_conjunct_lhs
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  {2}->(exists p_85,flted_5_86: self_lem_13::node<v_83,q_84>@M * 
q_84::lseg<flted_5_86,p_85>@M&n=flted_5_86+1 & r!=self_lem_13 & p_85=r&
{FLOW,(1,24)=__flow})[]


@1! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@1! f:#DN# q_80::node<_,r>@M
@1! f:#DN# q_80::node<_,r>@M
@1! f:#DN# self_lem_13::node<v_83,q_84>@M
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! f:#VN# q_84::lseg<flted_5_86,p_85>@M
@1! f:#DN# self_lem_13::node<v_83,q_84>@M
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! f:#VN# q_84::lseg<flted_5_86,p_85>@M
@1!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: IMP #41
@1!:0: 0: imply_timeout: ante:  m_82=0 & n=1+m_82
@1!:0: 0: imply_timeout: conseq:  ((q_84!=r & q_84!=null & 2<=n) | (q_84=r & n=1))
@1! Ann Vars:[]
@1! Inv: m_82=0 & n=1+m_82
@1!:0: 0: res: :false
@1!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: IMP #42
@1!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13
@1!:0: 0: imply_timeout: conseq:  r!=self_lem_13
@1! Ann Vars:[]
@1! Inv: q_80!=null & q_80=self_lem_13
@1!:0: 0: res: :false
@1!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: IMP #43
@1!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13
@1!:0: 0: imply_timeout: conseq:  self_lem_13!=null
@1! Ann Vars:[]
@1! Inv: q_80!=null & q_80=self_lem_13
@1!:0: 0: res: :true
@1! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1! rhs(orig): : exists(flted_5_86:exists(p_85:p_85=r & (((1<=flted_5_86 & q_84!=null & 
p_85!=q_84) | (p_85=q_84 & flted_5_86=0)))) & n=flted_5_86+1) & 
r!=self_lem_13
@1! lhs (after filter_ante): : q_80!=null & m_82=0 & q_80=self_lem_13 & n=1+m_82
@1! fml: : q_80!=null & m_82=0 & q_80=self_lem_13 & n=1+m_82 & 
exists(flted_5_86:exists(p_85:p_85=r & (((1<=flted_5_86 & q_84!=null & 
p_85!=q_84) | (p_85=q_84 & flted_5_86=0)))) & n=flted_5_86+1) & 
r!=self_lem_13
@1!:0: 0: SAT #44
@1!:0: 0:  q_80!=null & m_82=0 & q_80=self_lem_13 & n=1+m_82 & 
exists(flted_5_86:(((1<=flted_5_86 & q_84!=null & q_84!=r) | (q_84=r & 
flted_5_86=0))) & n=flted_5_86+1) & r!=self_lem_13
@1! early contra detect:false
@1!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {2}->(exists p_85,flted_5_86: self_lem_13::node<v_83,q_84>@M * 
q_84::lseg<flted_5_86,p_85>@M&n=flted_5_86+1 & r!=self_lem_13 & p_85=r&
{FLOW,(1,24)=__flow})[]
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M&n=flted_5_91+
1 & r!=self_lem_13 & p_90=r&{FLOW,(1,24)=__flow}[]
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! heap(helper): self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M
@1! pure(helper): n=flted_5_91+1 & r!=self_lem_13 & p_90=r
@1! BRANCH2:?
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M&
{FLOW,(1,24)=__flow}[]
@2! new_ctx: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M&
{FLOW,(1,24)=__flow}[]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M&
{FLOW,(1,24)=__flow}[]
@2! ctx0.es_heap bef: emp
@2! ctx0.es_heap after: emp
@2! h1: q_80::node<_,r>@M
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! h2: self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M
@2! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82
@2! p2: true
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M&
{FLOW,(1,24)=__flow}[]
@2! estate.es_heap match_: emp
@2! ctx0 match_: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M&
{FLOW,(1,24)=__flow}[]
@2! l:[(lhs_rest: emp,lhs_node: q_80::node<_,r>@M,holes:[],match_type: Root)]
@2! l:[]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! r:[([ 
  Type: Root
  LHS: q_80::node<_,r>@M
  RHS: self_lem_13::node<v_83,q_84>@M
 lhs_rest: emp
 rhs_rest: q_84::lseg<flted_5_91,p_90>@M],?),([],?)]
@2! **** sel_hp_rel **********************
@2! hp_rel:[]
@2! sel_hp_rel:[]
@2! sel_post_hp_rel:[]
@2! **** sel_hp_rel **********************
@2! hp_rel:[]
@2! sel_hp_rel:[]
@2! sel_post_hp_rel:[]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: q_80::node<_,r>@M
                        RHS: self_lem_13::node<v_83,q_84>@M
         ],
(2): Prio:-1COND =>[Prio:2BaseCaseFold =>
                                      LHS: emp
                                      RHS: q_84::lseg<flted_5_91,p_90>@M;Prio:2UnmatchedRHSData =>  q_84::lseg<flted_5_91,p_90>@M]]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! sorted action:[(1): Prio:0Match =>
                LHS: q_80::node<_,r>@M
                RHS: self_lem_13::node<v_83,q_84>@M,
(2): Prio:2COND =>[Prio:2BaseCaseFold =>
                                     LHS: emp
                                     RHS: q_84::lseg<flted_5_91,p_90>@M;Prio:2UnmatchedRHSData =>  q_84::lseg<flted_5_91,p_90>@M]]
@2! estate: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: process_action :
 ### action =  Match =>
          Type: Root
          LHS: q_80::node<_,r>@M
          RHS: self_lem_13::node<v_83,q_84>@M
 lhs_rest: emp
 rhs_rest: 
          q_84::lseg<flted_5_91,p_90>@M
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M&
{FLOW,(1,24)=__flow}[]


@2! lhs_node: q_80::node<_,r>@M
@2! lhs_rest: emp
@2! rhs_node: self_lem_13::node<v_83,q_84>@M
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! rhs_rest: q_84::lseg<flted_5_91,p_90>@M
@2! new_estate(M_match): es_formula: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2! subst:[]
@2!sh-rev.slk:5: 2: do_match: using  q_80::node<_,r>@M to prove  self_lem_13::node<v_83,q_84>@M
@2!sh-rev.slk:5: 2: do_match: source LHS:  es_formula: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: do_match: source RHS:  q_84::lseg<flted_5_91,p_90>@M&{FLOW,(1,24)=__flow}[]
@2! add_to_lhs:[]
@2! add_to_rhs:[]
@2! Imm annotation mismatch (node lvl):false
@2! param_ann_lhs:[]
@2! param_ann_rhs:[]
@2! Imm annotation mismatch (field lvl):false
@2! l_args_ann:[]
@2! r_args_ann:[]
@2! view_param_ann_lhs:None
@2! view_param_ann_rhs:None
@2! Imm annotation mismatch (view param):false
@2! ann_lhs:None
@2! ann_rhs:None
@2! Imm annotation mismatch:false
@2! restore_hole_b:true
@2! l_h: emp
@2! estate: es_formula: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! r_h: q_84::lseg<flted_5_91,p_90>@M
@2! new_l_args:[#,#]
@2! new_r_args:[#,#]
@2! new_l_holes:[0,1]
@2! new_r_holes:[0,1]
@2! rem_l_node: emp
@2! rem_r_node: emp
@2!  impl_vars: :[v_83,q_84]
@2! other subs:[((v_83,Anon_81),?),((q_84,r),?)]
@2! other subs:[((v_83,Anon_81),?),((q_84,r),?)]
@2! ext_subst(bef filter out ann):[]
@2! to_rhs(bef ann): true
@2! to_lhs(bef ann): Anon_81=v_83 & q_84=r
@2! ext_subst(bef ann):[]
@2! to_rhs: true
@2! to_lhs: Anon_81=v_83 & q_84=r
@2! new_ante_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2! new_conseq_p: true
@2! l_h: emp
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! tmp_conseq: q_84::lseg<flted_5_91,p_90>@M&{FLOW,(1,24)=__flow}[]
@2! r_ann:@M
@2! consumed_h: q_80::node<_,r>@M
@2! new_consumed: q_80::node<_,r>@M
@2! new_ante: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
{FLOW,(21,22)=__norm}[]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! new_conseq: q_84::lseg<flted_5_91,p_90>@M&{FLOW,(1,24)=__flow}[]
@2! new_es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2!sh-rev.slk:5: 2: do_match (after): LHS:  es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: do_match (after): RHS: q_84::lseg<flted_5_91,p_90>@M&{FLOW,(1,24)=__flow}[]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_84::lseg<flted_5_91,p_90>@M&{FLOW,(1,24)=__flow}[]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_84::lseg<flted_5_91,p_90>@M&{FLOW,(1,24)=__flow}[]
@2! ctx0.es_heap bef: q_80::node<_,r>@M
@2! ctx0.es_heap after: q_80::node<_,r>@M
@2! h1: emp
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! h2: q_84::lseg<flted_5_91,p_90>@M
@2! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2! p2: true
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_84::lseg<flted_5_91,p_90>@M&{FLOW,(1,24)=__flow}[]
@2! estate.es_heap match_: q_80::node<_,r>@M
@2! ctx0 match_: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_84::lseg<flted_5_91,p_90>@M&{FLOW,(1,24)=__flow}[]
@2! l:[]
@2! r:[([],?)]
@2! **** sel_hp_rel **********************
@2! hp_rel:[]
@2! sel_hp_rel:[]
@2! sel_post_hp_rel:[]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! weighted action:[(1): Prio:-1COND =>[Prio:2BaseCaseFold =>
                                      LHS: emp
                                      RHS: q_84::lseg<flted_5_91,p_90>@M;Prio:2UnmatchedRHSData =>  q_84::lseg<flted_5_91,p_90>@M]]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! sorted action:[(1): Prio:2COND =>[Prio:2BaseCaseFold =>
                                     LHS: emp
                                     RHS: q_84::lseg<flted_5_91,p_90>@M;Prio:2UnmatchedRHSData =>  q_84::lseg<flted_5_91,p_90>@M]]
@2! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: process_action :
 ### action =  BaseCaseFold =>
                 Type: Root
                 LHS: emp
                 RHS: q_84::lseg<flted_5_91,p_90>@M
 lhs_rest: emp
 rhs_rest: emp
 ### estate =  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
 ### conseq =  q_84::lseg<flted_5_91,p_90>@M&{FLOW,(1,24)=__flow}[]


@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: do_fold: anns:[@M,@M]
@2!sh-rev.slk:5: 2: do_fold: LHS ctx: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_ante_evars: [q_80; _; m_82]

@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@2!sh-rev.slk:5: 2: do_fold: RHS view:  q_84::lseg<flted_5_91,p_90>@M
@2!sh-rev.slk:5: 2: do_fold: view_form:  EBase {1}->emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2!sh-rev.slk:5: 2: heap_entail_one_context_struc:
ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 EBase {1}->emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2! es(1): emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
@2!sh-rev.slk:5: 2: heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
tid:None
delayed_f:None
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 EBase {1}->emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2! fs:[]
@2! es(2): emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
@2! es(3): emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
@2!:heap_entail_one_context
@2!:0: 0: SAT #45
@2!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!sh-rev.slk:5: 2: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2!:heap_entail_conjunct_lhs
@2!sh-rev.slk:5: 2: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
 ### conseq =  {1}->emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]


@2! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@2!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: IMP #46
@2!:0: 0: imply_timeout: ante:  q_84=r
@2!:0: 0: imply_timeout: conseq:  p_90=q_84
@2! Ann Vars:[]
@2! Inv: q_84=r
@2!:0: 0: res: :false
@2!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: IMP #47
@2!:0: 0: imply_timeout: ante:  true
@2!:0: 0: imply_timeout: conseq:  flted_5_91=0
@2! Ann Vars:[]
@2! Inv: true
@2!:0: 0: res: :false
@2! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2! rhs(orig): : p_90=q_84 & flted_5_91=0
@2! lhs (after filter_ante): : q_84=r
@2! fml: : q_84=r & p_90=q_84 & flted_5_91=0
@2!:0: 0: SAT #48
@2!:0: 0:  q_84=r & p_90=q_84 & flted_5_91=0
@2! early contra detect:false
@2!sh-rev.slk:5: 2: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@2!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2! heap(helper): emp
@2! pure(helper): p_90=q_84 & flted_5_91=0
@2! BRANCH1:?
@2!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2! ctx0.es_heap bef: q_80::node<_,r>@M
@2! ctx0.es_heap after: q_80::node<_,r>@M
@2! h1: emp
@2! h2: emp
@2! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2! p2: p_90=q_84 & flted_5_91=0
@2!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2! es_infer_vars_hp_rel :[]
@2! es_infer_vars :[]
@2! es_infer_vars_rel :[]
@2! es_infer_vars_sel_hp_rel :[]
@2! lhs_h: emp
@2! estate_orig.es_heap: q_80::node<_,r>@M
@2! curr_lhs_h: q_80::node<_,r>@M
@2! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2! curr_lhs_h0: q_80::node<_,r>@M
@2! f:#DN# q_80::node<_,r>@M
@2! f:#DN# q_80::node<_,r>@M
@2! xpure_lhs_h1(bef merge): q_80!=null
@2! xpure_lhs_h1: q_80!=null
@2! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2!sh-rev.slk:5: 2: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2!sh-rev.slk:5: 2: heap_entail_empty_heap: rhs:
 p_90=q_84 & flted_5_91=0
@2! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@2!sh-rev.slk:5: 2: rhs_p : : p_90=q_84 & flted_5_91=0
@2!sh-rev.slk:5: 2: conseq0 : : true
@2!sh-rev.slk:5: 2: conseq1 : : true
@2!sh-rev.slk:5: 2: >>>>>> entail_empty_heap: cp1 <<<<<<
@2!sh-rev.slk:5: 2: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@2!sh-rev.slk:5: 2: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@2!sh-rev.slk:5: 2: conseq : : true
@2!:0: 0: astaq?
@2!:0: 0: IMP #2
@2!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@2! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null]
@2! ante-a1l:[]
@2!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null]
@2!:0: 0: coseq : : true
@2!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@2!:0: 0: res : :true
@2!:0: 0: ante: :[]
@2!:0: 0: coseq : : true
@2!:0: 0: SAT #49
@2!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: formula is valid
@2!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2! l_inst: true
@2! p2: p_90=q_84 & flted_5_91=0
@2! move_impl(l_inst):[]
@2! move_impl(to_elim_evars):[p_90,flted_5_91,n,r]
@2! move_impl(inst_to_keep):[]
@2! move_impl(f): true
@2! move_impl(new_to_elim):[]
@2! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2! new_es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2! new_ctx: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & 
                 q_84=r&{FLOW,(21,22)=__norm}[]
                es_pure: p_90=q_84 & flted_5_91=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_90; flted_5_91; n; r]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_90:r; q_84:p_90]
                es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@2!sh-rev.slk:5: 2: fold: process_one: rs1:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2!sh-rev.slk:5: 2: fold: context at beginning of fold: q_84
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2!sh-rev.slk:5: 2: fold: context at end of fold: q_84
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2!sh-rev.slk:5: 2: fold: es.es_pure:  p_90=q_84 & flted_5_91=0
@2!sh-rev.slk:5: 2: split_universal: to_ante(after split):  true
@2!sh-rev.slk:5: 2: split_universal: to_ante(find_rel_constraint):  true
@2!sh-rev.slk:5: 2: split_universal: to_ante(aft wrapp):  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@2!sh-rev.slk:5: 2: split_universal: evars: p_90, flted_5_91, n, r
@2!sh-rev.slk:5: 2: split_universal: expl_inst_vars: 
@2!sh-rev.slk:5: 2: split_universal: vvars: flted_5_91, p_90
@2!sh-rev.slk:5: 2: split_universal: to_ante:  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@2!sh-rev.slk:5: 2: split_universal: to_conseq:  p_90=q_84 & flted_5_91=0
@2!sh-rev.slk:5: 2: process_fold_result: old_ctx before folding: q_84
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2!sh-rev.slk:5: 2: process_fold_result: new_ctx after folding: q_84
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@2!sh-rev.slk:5: 2: process_fold_result: vs2: flted_5_91, p_90
@2!sh-rev.slk:5: 2: process_fold_result: to_ante:  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@2!sh-rev.slk:5: 2: process_fold_result: to_conseq:  p_90=q_84 & flted_5_91=0
@2!sh-rev.slk:5: 2: process_fold_result: new_conseq:
 emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2!:heap_entail_one_context
@2!:0: 0: SAT #50
@2!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!sh-rev.slk:5: 2: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2!:heap_entail_conjunct_lhs
@2!sh-rev.slk:5: 2: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
 ### conseq =  emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]


@2! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@2!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: IMP #51
@2!:0: 0: imply_timeout: ante:  q_84=r
@2!:0: 0: imply_timeout: conseq:  p_90=q_84
@2!:0: 0: res: :false
@2!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!:0: 0: IMP #52
@2!:0: 0: imply_timeout: ante:  true
@2!:0: 0: imply_timeout: conseq:  flted_5_91=0
@2!:0: 0: res: :false
@2! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@2! rhs(orig): : p_90=q_84 & flted_5_91=0
@2! lhs (after filter_ante): : q_84=r & exists(p_90:p_90=q_84)
@2! fml: : q_84=r & exists(p_90:p_90=q_84) & p_90=q_84 & flted_5_91=0
@2!:0: 0: SAT #53
@2!:0: 0:  q_84=r & p_90=q_84 & flted_5_91=0
@2! early contra detect:false
@2!sh-rev.slk:5: 2: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@2!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2! heap(helper): emp
@2! pure(helper): p_90=q_84 & flted_5_91=0
@2! BRANCH1:?
@2!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2! ctx0.es_heap bef: q_80::node<_,r>@M
@2! ctx0.es_heap after: q_80::node<_,r>@M
@2! h1: emp
@2! h2: emp
@2! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@2! p2: p_90=q_84 & flted_5_91=0
@2!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_90=q_84 & flted_5_91=0&{FLOW,(1,24)=__flow}[]
@2! es_infer_vars_hp_rel :[]
@2! es_infer_vars :[]
@2! es_infer_vars_rel :[]
@2! es_infer_vars_sel_hp_rel :[]
@2! lhs_h: emp
@2! estate_orig.es_heap: q_80::node<_,r>@M
@2! curr_lhs_h: q_80::node<_,r>@M
@2! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@2! curr_lhs_h0: q_80::node<_,r>@M
@2! f:#DN# q_80::node<_,r>@M
@2! f:#DN# q_80::node<_,r>@M
@2! xpure_lhs_h1(bef merge): q_80!=null
@2! xpure_lhs_h1: q_80!=null
@2! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2!sh-rev.slk:5: 2: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2!sh-rev.slk:5: 2: heap_entail_empty_heap: rhs:
 p_90=q_84 & flted_5_91=0
@2! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@2! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null
@2!sh-rev.slk:5: 2: rhs_p : : p_90=q_84 & flted_5_91=0
@2!sh-rev.slk:5: 2: conseq0 : : true
@2!sh-rev.slk:5: 2: conseq1 : : true
@2!sh-rev.slk:5: 2: >>>>>> entail_empty_heap: cp1 <<<<<<
@2!sh-rev.slk:5: 2: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null
@2!sh-rev.slk:5: 2: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null
@2!sh-rev.slk:5: 2: conseq : : true
@2!:0: 0: astaq?
@2!:0: 0: IMP #3
@2!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@2! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null]
@2! ante-a1l:[]
@2!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null]
@2!:0: 0: coseq : : true
@2!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null
@2!:0: 0: res : :true
@2!:0: 0: ante: :[]
@2!:0: 0: coseq : : true
@2!:0: 0: SAT #54
@2!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r
@2!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: formula is valid
@2!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2! l_inst: true
@2! p2: p_90=q_84 & flted_5_91=0
@2! move_impl(l_inst):[]
@2! move_impl(to_elim_evars):[p_90,flted_5_91,n,r]
@2! move_impl(inst_to_keep):[]
@2! move_impl(f): true
@2! move_impl(new_to_elim):[]
@2! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2! new_es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@2! new_ctx: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & 
                 q_84=r & exists(flted_5_91:flted_5_91=0) & 
                 exists(p_90:p_90=q_84)&{FLOW,(21,22)=__norm}[]
                es_pure: p_90=q_84 & flted_5_91=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_90; flted_5_91; n; r]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_90:r; q_84:p_90]
                es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@2!sh-rev.slk:5: 2: process_fold_result: context at end fold: q_84
 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & 
                 q_84=r & exists(flted_5_91:flted_5_91=0) & 
                 exists(p_90:p_90=q_84)&{FLOW,(21,22)=__norm}[]
                es_pure: p_90=q_84 & flted_5_91=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_90; flted_5_91; n; r]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_90:r; q_84:p_90]
                es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@2! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & 
                 q_84=r & exists(flted_5_91:flted_5_91=0) & 
                 exists(p_90:p_90=q_84)&{FLOW,(21,22)=__norm}[]
                es_pure: p_90=q_84 & flted_5_91=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_90; flted_5_91; n; r]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_90:r; q_84:p_90]
                es_aux_conseq: p_90=q_84 & flted_5_91=0
                es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@2! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & 
                 q_84=r & exists(flted_5_91:flted_5_91=0) & 
                 exists(p_90:p_90=q_84)&{FLOW,(21,22)=__norm}[]
                es_pure: p_90=q_84 & flted_5_91=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_90; flted_5_91; n; r]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_90:r; q_84:p_90]
                es_aux_conseq: p_90=q_84 & flted_5_91=0
                es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@2! cl:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_aux_conseq: p_90=q_84 & flted_5_91=0
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []]
@2! cl after subs:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_aux_conseq: p_90=q_84 & flted_5_91=0
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []]
@2! cl after restore:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_aux_conseq: p_90=q_84 & flted_5_91=0
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []]
@2! annot: 2
@2! annot: [0,0]
@2! p: 1
@2! i: 0
@2! i: 0
@2! p: 2
@2! i: 0
@2! i: 0
@2! view_args_pos: 2
@2! to_be_updated: 2
@2! hargs: 2
@3! new_conseq one_ctx_entail: emp&n=flted_5_91+1 & r!=self_lem_13 & p_90=r&{FLOW,(1,24)=__flow}[]
@3!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_aux_conseq: p_90=q_84 & flted_5_91=0
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&n=flted_5_91+1 & r!=self_lem_13 & p_90=r & p_90=q_84 & flted_5_91=0&
{FLOW,(1,24)=__flow}[]
@3!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_aux_conseq: p_90=q_84 & flted_5_91=0
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&n=flted_5_91+1 & r!=self_lem_13 & p_90=r & p_90=q_84 & flted_5_91=0&
{FLOW,(1,24)=__flow}[]
@3! ctx0.es_heap bef: q_80::node<_,r>@M
@3! ctx0.es_heap after: q_80::node<_,r>@M
@3! h1: emp
@3! h2: emp
@3! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@3! p2: n=flted_5_91+1 & r!=self_lem_13 & p_90=r & p_90=q_84 & flted_5_91=0
@3!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_aux_conseq: p_90=q_84 & flted_5_91=0
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&n=flted_5_91+1 & r!=self_lem_13 & p_90=r & p_90=q_84 & flted_5_91=0&
{FLOW,(1,24)=__flow}[]
@3! es_infer_vars_hp_rel :[]
@3! es_infer_vars :[]
@3! es_infer_vars_rel :[]
@3! es_infer_vars_sel_hp_rel :[]
@3! lhs_h: emp
@3! estate_orig.es_heap: q_80::node<_,r>@M
@3! curr_lhs_h: q_80::node<_,r>@M
@3! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@3! curr_lhs_h0: q_80::node<_,r>@M
@3! f:#DN# q_80::node<_,r>@M
@3! f:#DN# q_80::node<_,r>@M
@3! xpure_lhs_h1(bef merge): q_80!=null
@3! xpure_lhs_h1: q_80!=null
@3! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_aux_conseq: p_90=q_84 & flted_5_91=0
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@3!sh-rev.slk:5: 2: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_aux_conseq: p_90=q_84 & flted_5_91=0
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@3!sh-rev.slk:5: 2: heap_entail_empty_heap: rhs:
 n=flted_5_91+1 & r!=self_lem_13 & p_90=r & p_90=q_84 & flted_5_91=0
@3! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
  exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_90=q_84 & flted_5_91=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_90:r; q_84:p_90]
 es_aux_conseq: p_90=q_84 & flted_5_91=0
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@3! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)
@3! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null
@3!sh-rev.slk:5: 2: rhs_p : : n=flted_5_91+1 & r!=self_lem_13 & p_90=r & p_90=q_84 & flted_5_91=0
@3!sh-rev.slk:5: 2: conseq0 : : exists(r:r!=self_lem_13 & q_84=r) & exists(n:n=0+1)
@3!sh-rev.slk:5: 2: conseq1 : : exists(r:r!=self_lem_13 & q_84=r) & exists(n:n=0+1)
@3!sh-rev.slk:5: 2: >>>>>> entail_empty_heap: cp1 <<<<<<
@3!sh-rev.slk:5: 2: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null
@3!sh-rev.slk:5: 2: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null
@3!sh-rev.slk:5: 2: conseq : : exists(r:r!=self_lem_13 & q_84=r) & exists(n:n=1+0)
@3!:0: 0: astaq?
@3!:0: 0: IMP #4
@3!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@3! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null]
@3! ante-a1l:[]
@3!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null]
@3!:0: 0: coseq : : exists(r:r!=self_lem_13 & q_84=r)
@3!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null
@3!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@3!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@3!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@3!:0: 0: IMP #55
@3!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13 & q_84=r
@3!:0: 0: imply_timeout: conseq:  q_84!=self_lem_13
@3! Ann Vars:[]
@3! Inv: q_80!=null & q_80=self_lem_13 & q_84=r
@3!:0: 0: res: :false
@3!:0: 0: res : :false
@3! finish_flag::false
@3!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@3! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null]
@3! ante-a1l:[]
@3!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null]
@3!:0: 0: coseq : : exists(r:r!=self_lem_13 & q_84=r)
@3!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & 
exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84) & q_80!=null
@3!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@3!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@3!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & q_80!=null
@3!:0: 0: IMP #56
@3!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13 & q_84=r
@3!:0: 0: imply_timeout: conseq:  q_84!=self_lem_13
@3!:0: 0: res: :false
@3!:0: 0: res : :false
@3!:0: 0: SAT #57
@3!:0: 0:  q_84!=self_lem_13
@3!:0: 0: SAT #58
@3!:0: 0:  q_80!=null & q_84=r & q_80=self_lem_13 & q_84!=self_lem_13
@3!:0: 0: SAT #59
@3!:0: 0:  q_80!=null & q_84=r & q_80=self_lem_13 & q_84=self_lem_13
@3!:0: 0: SAT #60
@3!:0: 0:  q_84!=self_lem_13
@3!:0: 0: SAT #61
@3!:0: 0:  q_80!=null & q_84=r & q_80=self_lem_13 & q_84!=self_lem_13
@3!:0: 0: SAT #62
@3!:0: 0:  q_80!=null & q_84=r & q_80=self_lem_13 & q_84=self_lem_13
@3!sh-rev.slk:5: 2: heap_entail_empty_rhs_heap: formula is not valid

@3! new_ctx: 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: logical bug
                   fe_locs: {
                             fc_message: 
                               self_lem_13!=null & exists(p_90:p_90=q_84) |-  exists(r:r!=self_lem_13 & q_84=r). LOCS:[8;5;4;0] (may-bug)
                             fc_current_lhs_flow: {FLOW,(1,24)=__flow}}

one_ctx_entail@3@2@1
one_ctx_entail inp1 : emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_83 & q_84=r & exists(flted_5_91:flted_5_91=0) & exists(p_90:p_90=q_84)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_ante_evars: [q_80; _; m_82]

one_ctx_entail inp2 : self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M&n=flted_5_91+
1 & r!=self_lem_13 & p_90=r&{FLOW,(1,24)=__flow}[]
one_ctx_entail inp3 : n=flted_5_91+1 & r!=self_lem_13 & p_90=r
one_ctx_entail@3 EXIT: failctx
         fe_kind: MAY
         fe_name: logical bug
         fe_locs: {
                   fc_message: 
                     self_lem_13!=null & exists(p_90:p_90=q_84) |-  exists(r:r!=self_lem_13 & q_84=r). LOCS:[8;5;4;0] (may-bug)
                   fc_current_lhs_flow: {FLOW,(1,24)=__flow}}

heap_n_pure_entail#1@2@1
heap_n_pure_entail#1 inp1 : es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_90; flted_5_91; n; r]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_83; q_84]
 es_rhs_eqset: [p_90:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : self_lem_13::node<v_83,q_84>@M * q_84::lseg<flted_5_91,p_90>@M
heap_n_pure_entail#1 inp3 : n=flted_5_91+1 & r!=self_lem_13 & p_90=r
heap_n_pure_entail#1@2 EXIT:Not OK

@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_non_empty_rhs_heap: unable to fold:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 to:ln2:  self_lem_13::lseg<n,r>@M
rhs_p:  true..end
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: process_action :
 ### action =  RD_Lemma =>
             Type: Root
             LHS: q_80::node<_,r>@M
             RHS: self_lem_13::lseg<n,r>@M
 lhs_rest: emp
 rhs_rest: emp
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]


@1!:0: 0: do_coercion: estate : q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp

@1!:0: 0: do_coercion: c1 = node, c2 = lseg

@1!do_right_coercion : c2 = lseg

@1!:0: 0: asta6?
@1!:0: 0: IMP #5
@1!:heap_entail_one_context
@1! f:#DN# q_80::node<_,r>@M
@1!:0: 0: SAT #63
@1!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 (exists q_104,_,m_106: self_lem_13::lseg<m_106,q_104>@M * 
q_104::node<_,r>@M&n=1+m_106&{FLOW,(21,22)=__norm})[]
@1!:heap_entail_conjunct_lhs
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  (exists q_104,_,m_106: self_lem_13::lseg<m_106,q_104>@M * 
q_104::node<_,r>@M&n=1+m_106&{FLOW,(21,22)=__norm})[]


@1! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@1! f:#DN# q_80::node<_,r>@M
@1! f:#DN# q_80::node<_,r>@M
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! f:#VN# self_lem_13::lseg<m_106,q_104>@M
@1! f:#DN# q_104::node<_,r>@M
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! f:#VN# self_lem_13::lseg<m_106,q_104>@M
@1! f:#DN# q_104::node<_,r>@M
@1!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1!:0: 0: IMP #65
@1!:0: 0: imply_timeout: ante:  q_80!=null & m_82=0 & q_80=self_lem_13 & n=1+m_82
@1!:0: 0: imply_timeout: conseq:  self_lem_13!=null & ((2<=n | n=1))
@1! Ann Vars:[]
@1! Inv: q_80!=null & m_82=0 & q_80=self_lem_13 & n=1+m_82
@1!:0: 0: res: :true
@1! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@1! rhs(orig): : true
@1! lhs (after filter_ante): : true
@1! fml: : true
@1! early contra detect:false
@1!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 (exists q_104,_,m_106: self_lem_13::lseg<m_106,q_104>@M * 
q_104::node<_,r>@M&n=1+m_106&{FLOW,(21,22)=__norm})[]
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M&n=1+m_109&
{FLOW,(21,22)=__norm}[]
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@1! heap(helper): self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M
@1! pure(helper): n=1+m_109
@1! BRANCH2:?
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@4! new_ctx: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@4! ctx0.es_heap bef: emp
@4! ctx0.es_heap after: emp
@4! h1: q_80::node<_,r>@M
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4! h2: self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M
@4! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82
@4! p2: true
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@4! estate.es_heap match_: emp
@4! ctx0 match_: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@4! l:[(lhs_rest: emp,lhs_node: q_80::node<_,r>@M,holes:[],match_type: Root)]
@4! l:[]
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4! r:[([ 
  Type: Root
  LHS: q_80::node<_,r>@M
  RHS: self_lem_13::lseg<m_109,q_107>@M
 lhs_rest: emp
 rhs_rest: q_107::node<_,r>@M],?),([],?)]
@4! **** sel_hp_rel **********************
@4! hp_rel:[]
@4! sel_hp_rel:[]
@4! sel_post_hp_rel:[]
@4! cyclic:add_checkpoint:fold
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4! **** sel_hp_rel **********************
@4! hp_rel:[]
@4! sel_hp_rel:[]
@4! sel_post_hp_rel:[]
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:1Fold =>
                       LHS: q_80::node<_,r>@M
                       RHS: self_lem_13::lseg<m_109,q_107>@M
         ],
(2): Prio:-1COND =>[Prio:2UnmatchedRHSData =>  q_107::node<_,r>@M]]
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4! sorted action:[(1): Prio:1SEARCH =>[
        Prio:1Fold =>
                      LHS: q_80::node<_,r>@M
                      RHS: self_lem_13::lseg<m_109,q_107>@M
        ],
(2): Prio:2COND =>[Prio:2UnmatchedRHSData =>  q_107::node<_,r>@M]]
@4! estate: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: process_action :
 ### action =  Fold =>
         Type: Root
         LHS: q_80::node<_,r>@M
         RHS: self_lem_13::lseg<m_109,q_107>@M
 lhs_rest: emp
 rhs_rest: 
         q_107::node<_,r>@M
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M&
{FLOW,(21,22)=__norm}[]


@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: do_fold: anns:[@M,@M]
@4!:0: 0: do_fold: LHS ctx: q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
 es_heap: emp
 es_ante_evars: [q_80; _; m_82]

@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: do_fold: RHS view:  self_lem_13::lseg<m_109,q_107>@M
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: do_fold: view_form:  :EBase {1}->emp&q_107=self_lem_13 & m_109=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_110; q_111](ex)[]{2}->(exists p_112,
          flted_5_113: self_lem_13::node<v_110,q_111>@M * 
          q_111::lseg<flted_5_113,p_112>@M&m_109=flted_5_113+1 & 
          q_107!=self_lem_13 & p_112=q_107&{FLOW,(1,24)=__flow})[]
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: heap_entail_one_context_struc:
ctx:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 :EBase {1}->emp&q_107=self_lem_13 & m_109=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_110; q_111](ex)[]{2}->(exists p_112,
          flted_5_113: self_lem_13::node<v_110,q_111>@M * 
          q_111::lseg<flted_5_113,p_112>@M&m_109=flted_5_113+1 & 
          q_107!=self_lem_13 & p_112=q_107&{FLOW,(1,24)=__flow})[]
@4! es(1): q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
tid:None
delayed_f:None
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 :EBase {1}->emp&q_107=self_lem_13 & m_109=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_110; q_111](ex)[]{2}->(exists p_112,
          flted_5_113: self_lem_13::node<v_110,q_111>@M * 
          q_111::lseg<flted_5_113,p_112>@M&m_109=flted_5_113+1 & 
          q_107!=self_lem_13 & p_112=q_107&{FLOW,(1,24)=__flow})[]
@4! fs:[]
@4! es(2): q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@4! es(3): q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@4!:heap_entail_one_context
@4! f:#DN# q_80::node<_,r>@M
@4!:0: 0: SAT #66
@4!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_107=self_lem_13 & m_109=0&{FLOW,(1,24)=__flow}[]
@4!:heap_entail_conjunct_lhs
@4!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  {1}->emp&q_107=self_lem_13 & m_109=0&{FLOW,(1,24)=__flow}[]


@4! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@4! f:#DN# q_80::node<_,r>@M
@4! f:#DN# q_80::node<_,r>@M
@4!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: IMP #67
@4!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13
@4!:0: 0: imply_timeout: conseq:  q_107=self_lem_13
@4!:0: 0: res: :false
@4!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: IMP #68
@4!:0: 0: imply_timeout: ante:  true
@4!:0: 0: imply_timeout: conseq:  m_109=0
@4!:0: 0: res: :false
@4! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4! rhs(orig): : q_107=self_lem_13 & m_109=0
@4! lhs (after filter_ante): : q_80!=null & q_80=self_lem_13
@4! fml: : q_80!=null & q_80=self_lem_13 & q_107=self_lem_13 & m_109=0
@4!:0: 0: SAT #69
@4!:0: 0:  q_80!=null & q_80=self_lem_13 & q_107=self_lem_13 & m_109=0
@4! early contra detect:false
@4!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@4!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_107=self_lem_13 & m_109=0&{FLOW,(1,24)=__flow}[]
@4! heap(helper): emp
@4! pure(helper): q_107=self_lem_13 & m_109=0
@4! BRANCH1:?
@4!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_107=self_lem_13 & m_109=0&{FLOW,(1,24)=__flow}[]
@4!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_107=self_lem_13 & m_109=0&{FLOW,(1,24)=__flow}[]
@4! ctx0.es_heap bef: emp
@4! ctx0.es_heap after: emp
@4! h1: q_80::node<_,r>@M
@4! h2: emp
@4! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82
@4! p2: q_107=self_lem_13 & m_109=0
@4!:0: 0: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_107=self_lem_13 & m_109=0&{FLOW,(1,24)=__flow}[]
@4! es_infer_vars_hp_rel :[]
@4! es_infer_vars :[]
@4! es_infer_vars_rel :[]
@4! es_infer_vars_sel_hp_rel :[]
@4! lhs_h: q_80::node<_,r>@M
@4! estate_orig.es_heap: emp
@4! curr_lhs_h: q_80::node<_,r>@M
@4! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82
@4! curr_lhs_h0: q_80::node<_,r>@M
@4! f:#DN# q_80::node<_,r>@M
@4! f:#DN# q_80::node<_,r>@M
@4! xpure_lhs_h1(bef merge): q_80!=null
@4! xpure_lhs_h1: q_80!=null
@4! es: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@4!:0: 0: heap_entail_empty_heap: ctx:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@4!:0: 0: heap_entail_empty_heap: rhs:
 q_107=self_lem_13 & m_109=0
@4! estate: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@4! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82
@4! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: rhs_p : : q_107=self_lem_13 & m_109=0
@4!:0: 0: conseq0 : : true
@4!:0: 0: conseq1 : : true
@4!:0: 0: >>>>>> entail_empty_heap: cp1 <<<<<<
@4!:0: 0: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: conseq : : true
@4!:0: 0: astaq?
@4!:0: 0: IMP #5
@4!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@4! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null]
@4! ante-a1l:[]
@4!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null]
@4!:0: 0: coseq : : true
@4!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: res : :true
@4!:0: 0: ante: :[]
@4!:0: 0: coseq : : true
@4! f:#DN# q_80::node<_,r>@M
@4!:0: 0: SAT #70
@4!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: heap_entail_empty_heap: folding: formula is valid
@4!:0: 0: heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_pure: q_107=self_lem_13 & m_109=0
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@4! l_inst: true
@4! p2: q_107=self_lem_13 & m_109=0
@4! move_impl(l_inst):[]
@4! move_impl(to_elim_evars):[q_107,Anon_108,m_109]
@4! move_impl(inst_to_keep):[]
@4! move_impl(f): true
@4! move_impl(new_to_elim):[]
@4! es: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_pure: q_107=self_lem_13 & m_109=0
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@4! new_es: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_pure: q_107=self_lem_13 & m_109=0
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@4! new_ctx: 
Good Context: 1[es_formula: 
                 q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
                 {FLOW,(21,22)=__norm}[]
                es_pure: q_107=self_lem_13 & m_109=0
                es_evars: [q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [self_lem_13:q_107]
                es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
                es_infer_vars_rel: []]

@4!:heap_entail_one_context
@4! f:#DN# q_80::node<_,r>@M
@4!:0: 0: SAT #71
@4!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {2}->(exists p_112,flted_5_113: self_lem_13::node<v_110,q_111>@M * 
q_111::lseg<flted_5_113,p_112>@M&m_109=flted_5_113+1 & q_107!=self_lem_13 & 
p_112=q_107&{FLOW,(1,24)=__flow})[]
@4!:heap_entail_conjunct_lhs
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  {2}->(exists p_112,flted_5_113: self_lem_13::node<v_110,q_111>@M * 
q_111::lseg<flted_5_113,p_112>@M&m_109=flted_5_113+1 & q_107!=self_lem_13 & 
p_112=q_107&{FLOW,(1,24)=__flow})[]


@4! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@4! f:#DN# q_80::node<_,r>@M
@4! f:#DN# q_80::node<_,r>@M
@4! f:#DN# self_lem_13::node<v_110,q_111>@M
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4! f:#VN# q_111::lseg<flted_5_113,p_112>@M
@4! f:#DN# self_lem_13::node<v_110,q_111>@M
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4! f:#VN# q_111::lseg<flted_5_113,p_112>@M
@4!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: IMP #73
@4!:0: 0: imply_timeout: ante:  true
@4!:0: 0: imply_timeout: conseq:  ((q_107!=q_111 & q_111!=null & 2<=m_109) | (q_107=q_111 & m_109=1))
@4! Ann Vars:[]
@4! Inv: true
@4!:0: 0: res: :false
@4!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: IMP #74
@4!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13
@4!:0: 0: imply_timeout: conseq:  q_107!=self_lem_13
@4!:0: 0: res: :false
@4!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: IMP #75
@4!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13
@4!:0: 0: imply_timeout: conseq:  self_lem_13!=null
@4!:0: 0: res: :true
@4! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4! rhs(orig): : exists(flted_5_113:exists(p_112:p_112=q_107 & (((1<=flted_5_113 & 
q_111!=null & p_112!=q_111) | (p_112=q_111 & flted_5_113=0)))) & 
m_109=flted_5_113+1) & q_107!=self_lem_13
@4! lhs (after filter_ante): : q_80!=null & q_80=self_lem_13
@4! fml: : q_80!=null & q_80=self_lem_13 & 
exists(flted_5_113:exists(p_112:p_112=q_107 & (((1<=flted_5_113 & 
q_111!=null & p_112!=q_111) | (p_112=q_111 & flted_5_113=0)))) & 
m_109=flted_5_113+1) & q_107!=self_lem_13
@4!:0: 0: SAT #76
@4!:0: 0:  q_80!=null & q_80=self_lem_13 & exists(flted_5_113:(((1<=flted_5_113 & 
q_111!=null & q_107!=q_111) | (q_107=q_111 & flted_5_113=0))) & 
m_109=flted_5_113+1) & q_107!=self_lem_13
@4! early contra detect:false
@4!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {2}->(exists p_112,flted_5_113: self_lem_13::node<v_110,q_111>@M * 
q_111::lseg<flted_5_113,p_112>@M&m_109=flted_5_113+1 & q_107!=self_lem_13 & 
p_112=q_107&{FLOW,(1,24)=__flow})[]
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M&
m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107&{FLOW,(1,24)=__flow}[]
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@4! heap(helper): self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M
@4! pure(helper): m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107
@4! BRANCH2:?
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M&
{FLOW,(1,24)=__flow}[]
@5! new_ctx: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M&
{FLOW,(1,24)=__flow}[]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M&
{FLOW,(1,24)=__flow}[]
@5! ctx0.es_heap bef: emp
@5! ctx0.es_heap after: emp
@5! h1: q_80::node<_,r>@M
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! h2: self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M
@5! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82
@5! p2: true
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M&
{FLOW,(1,24)=__flow}[]
@5! estate.es_heap match_: emp
@5! ctx0 match_: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M&
{FLOW,(1,24)=__flow}[]
@5! l:[(lhs_rest: emp,lhs_node: q_80::node<_,r>@M,holes:[],match_type: Root)]
@5! l:[]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! r:[([ 
  Type: Root
  LHS: q_80::node<_,r>@M
  RHS: self_lem_13::node<v_110,q_111>@M
 lhs_rest: emp
 rhs_rest: q_111::lseg<flted_5_118,p_117>@M],?),([],?)]
@5! **** sel_hp_rel **********************
@5! hp_rel:[]
@5! sel_hp_rel:[]
@5! sel_post_hp_rel:[]
@5! **** sel_hp_rel **********************
@5! hp_rel:[]
@5! sel_hp_rel:[]
@5! sel_post_hp_rel:[]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: q_80::node<_,r>@M
                        RHS: self_lem_13::node<v_110,q_111>@M
         ],
(2): Prio:-1COND =>[Prio:2BaseCaseFold =>
                                      LHS: emp
                                      RHS: q_111::lseg<flted_5_118,p_117>@M;Prio:2UnmatchedRHSData =>  q_111::lseg<flted_5_118,p_117>@M]]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! sorted action:[(1): Prio:0Match =>
                LHS: q_80::node<_,r>@M
                RHS: self_lem_13::node<v_110,q_111>@M,
(2): Prio:2COND =>[Prio:2BaseCaseFold =>
                                     LHS: emp
                                     RHS: q_111::lseg<flted_5_118,p_117>@M;Prio:2UnmatchedRHSData =>  q_111::lseg<flted_5_118,p_117>@M]]
@5! estate: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: process_action :
 ### action =  Match =>
          Type: Root
          LHS: q_80::node<_,r>@M
          RHS: self_lem_13::node<v_110,q_111>@M
 lhs_rest: emp
 rhs_rest: 
          q_111::lseg<flted_5_118,p_117>@M
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M&
{FLOW,(1,24)=__flow}[]


@5! lhs_node: q_80::node<_,r>@M
@5! lhs_rest: emp
@5! rhs_node: self_lem_13::node<v_110,q_111>@M
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! rhs_rest: q_111::lseg<flted_5_118,p_117>@M
@5! new_estate(M_match): es_formula: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5! subst:[]
@5!sh-rev.slk:5: 2: do_match: using  q_80::node<_,r>@M to prove  self_lem_13::node<v_110,q_111>@M
@5!sh-rev.slk:5: 2: do_match: source LHS:  es_formula: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: do_match: source RHS:  q_111::lseg<flted_5_118,p_117>@M&{FLOW,(1,24)=__flow}[]
@5! add_to_lhs:[]
@5! add_to_rhs:[]
@5! Imm annotation mismatch (node lvl):false
@5! param_ann_lhs:[]
@5! param_ann_rhs:[]
@5! Imm annotation mismatch (field lvl):false
@5! l_args_ann:[]
@5! r_args_ann:[]
@5! view_param_ann_lhs:None
@5! view_param_ann_rhs:None
@5! Imm annotation mismatch (view param):false
@5! ann_lhs:None
@5! ann_rhs:None
@5! Imm annotation mismatch:false
@5! restore_hole_b:true
@5! l_h: emp
@5! estate: es_formula: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82&{FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! r_h: q_111::lseg<flted_5_118,p_117>@M
@5! new_l_args:[#,#]
@5! new_r_args:[#,#]
@5! new_l_holes:[0,1]
@5! new_r_holes:[0,1]
@5! rem_l_node: emp
@5! rem_r_node: emp
@5!  impl_vars: :[v_110,q_111]
@5! other subs:[((v_110,Anon_81),?),((q_111,r),?)]
@5! other subs:[((v_110,Anon_81),?),((q_111,r),?)]
@5! ext_subst(bef filter out ann):[]
@5! to_rhs(bef ann): true
@5! to_lhs(bef ann): Anon_81=v_110 & q_111=r
@5! ext_subst(bef ann):[]
@5! to_rhs: true
@5! to_lhs: Anon_81=v_110 & q_111=r
@5! new_ante_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5! new_conseq_p: true
@5! l_h: emp
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! tmp_conseq: q_111::lseg<flted_5_118,p_117>@M&{FLOW,(1,24)=__flow}[]
@5! r_ann:@M
@5! consumed_h: q_80::node<_,r>@M
@5! new_consumed: q_80::node<_,r>@M
@5! new_ante: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
{FLOW,(21,22)=__norm}[]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! new_conseq: q_111::lseg<flted_5_118,p_117>@M&{FLOW,(1,24)=__flow}[]
@5! new_es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5!sh-rev.slk:5: 2: do_match (after): LHS:  es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: do_match (after): RHS: q_111::lseg<flted_5_118,p_117>@M&{FLOW,(1,24)=__flow}[]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_111::lseg<flted_5_118,p_117>@M&{FLOW,(1,24)=__flow}[]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_111::lseg<flted_5_118,p_117>@M&{FLOW,(1,24)=__flow}[]
@5! ctx0.es_heap bef: q_80::node<_,r>@M
@5! ctx0.es_heap after: q_80::node<_,r>@M
@5! h1: emp
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! h2: q_111::lseg<flted_5_118,p_117>@M
@5! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5! p2: true
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_111::lseg<flted_5_118,p_117>@M&{FLOW,(1,24)=__flow}[]
@5! estate.es_heap match_: q_80::node<_,r>@M
@5! ctx0 match_: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_111::lseg<flted_5_118,p_117>@M&{FLOW,(1,24)=__flow}[]
@5! l:[]
@5! r:[([],?)]
@5! **** sel_hp_rel **********************
@5! hp_rel:[]
@5! sel_hp_rel:[]
@5! sel_post_hp_rel:[]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! weighted action:[(1): Prio:-1COND =>[Prio:2BaseCaseFold =>
                                      LHS: emp
                                      RHS: q_111::lseg<flted_5_118,p_117>@M;Prio:2UnmatchedRHSData =>  q_111::lseg<flted_5_118,p_117>@M]]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! sorted action:[(1): Prio:2COND =>[Prio:2BaseCaseFold =>
                                     LHS: emp
                                     RHS: q_111::lseg<flted_5_118,p_117>@M;Prio:2UnmatchedRHSData =>  q_111::lseg<flted_5_118,p_117>@M]]
@5! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: process_action :
 ### action =  BaseCaseFold =>
                 Type: Root
                 LHS: emp
                 RHS: q_111::lseg<flted_5_118,p_117>@M
 lhs_rest: emp
 rhs_rest: emp
 ### estate =  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
 ### conseq =  q_111::lseg<flted_5_118,p_117>@M&{FLOW,(1,24)=__flow}[]


@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: do_fold: anns:[@M,@M]
@5!sh-rev.slk:5: 2: do_fold: LHS ctx: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_ante_evars: [q_80; _; m_82]

@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@5!sh-rev.slk:5: 2: do_fold: RHS view:  q_111::lseg<flted_5_118,p_117>@M
@5!sh-rev.slk:5: 2: do_fold: view_form:  EBase {1}->emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5!sh-rev.slk:5: 2: heap_entail_one_context_struc:
ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 EBase {1}->emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5! es(1): emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
@5!sh-rev.slk:5: 2: heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
tid:None
delayed_f:None
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 EBase {1}->emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5! fs:[]
@5! es(2): emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
@5! es(3): emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
@5!:heap_entail_one_context
@5!:0: 0: SAT #77
@5!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!sh-rev.slk:5: 2: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5!:heap_entail_conjunct_lhs
@5!sh-rev.slk:5: 2: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
 ### conseq =  {1}->emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]


@5! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@5!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: IMP #78
@5!:0: 0: imply_timeout: ante:  q_111=r
@5!:0: 0: imply_timeout: conseq:  p_117=q_111
@5!:0: 0: res: :false
@5!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: IMP #79
@5!:0: 0: imply_timeout: ante:  true
@5!:0: 0: imply_timeout: conseq:  flted_5_118=0
@5!:0: 0: res: :false
@5! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5! rhs(orig): : p_117=q_111 & flted_5_118=0
@5! lhs (after filter_ante): : q_111=r
@5! fml: : q_111=r & p_117=q_111 & flted_5_118=0
@5!:0: 0: SAT #80
@5!:0: 0:  q_111=r & p_117=q_111 & flted_5_118=0
@5! early contra detect:false
@5!sh-rev.slk:5: 2: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@5!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5! heap(helper): emp
@5! pure(helper): p_117=q_111 & flted_5_118=0
@5! BRANCH1:?
@5!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5! ctx0.es_heap bef: q_80::node<_,r>@M
@5! ctx0.es_heap after: q_80::node<_,r>@M
@5! h1: emp
@5! h2: emp
@5! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5! p2: p_117=q_111 & flted_5_118=0
@5!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5! es_infer_vars_hp_rel :[]
@5! es_infer_vars :[]
@5! es_infer_vars_rel :[]
@5! es_infer_vars_sel_hp_rel :[]
@5! lhs_h: emp
@5! estate_orig.es_heap: q_80::node<_,r>@M
@5! curr_lhs_h: q_80::node<_,r>@M
@5! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5! curr_lhs_h0: q_80::node<_,r>@M
@5! f:#DN# q_80::node<_,r>@M
@5! f:#DN# q_80::node<_,r>@M
@5! xpure_lhs_h1(bef merge): q_80!=null
@5! xpure_lhs_h1: q_80!=null
@5! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5!sh-rev.slk:5: 2: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5!sh-rev.slk:5: 2: heap_entail_empty_heap: rhs:
 p_117=q_111 & flted_5_118=0
@5! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@5!sh-rev.slk:5: 2: rhs_p : : p_117=q_111 & flted_5_118=0
@5!sh-rev.slk:5: 2: conseq0 : : true
@5!sh-rev.slk:5: 2: conseq1 : : true
@5!sh-rev.slk:5: 2: >>>>>> entail_empty_heap: cp1 <<<<<<
@5!sh-rev.slk:5: 2: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@5!sh-rev.slk:5: 2: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@5!sh-rev.slk:5: 2: conseq : : true
@5!:0: 0: astaq?
@5!:0: 0: IMP #6
@5!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@5! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null]
@5! ante-a1l:[]
@5!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null]
@5!:0: 0: coseq : : true
@5!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@5!:0: 0: res : :true
@5!:0: 0: ante: :[]
@5!:0: 0: coseq : : true
@5!:0: 0: SAT #81
@5!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: formula is valid
@5!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5! l_inst: true
@5! p2: p_117=q_111 & flted_5_118=0
@5! move_impl(l_inst):[]
@5! move_impl(to_elim_evars):[p_117,flted_5_118,q_107,Anon_108,m_109]
@5! move_impl(inst_to_keep):[]
@5! move_impl(f): true
@5! move_impl(new_to_elim):[]
@5! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5! new_es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5! new_ctx: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & 
                 q_111=r&{FLOW,(21,22)=__norm}[]
                es_pure: p_117=q_111 & flted_5_118=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_117; flted_5_118; q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_117:q_107; q_111:p_117]
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@5!sh-rev.slk:5: 2: fold: process_one: rs1:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5!sh-rev.slk:5: 2: fold: context at beginning of fold: q_111
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5!sh-rev.slk:5: 2: fold: context at end of fold: q_111
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5!sh-rev.slk:5: 2: fold: es.es_pure:  p_117=q_111 & flted_5_118=0
@5!sh-rev.slk:5: 2: split_universal: to_ante(after split):  true
@5!sh-rev.slk:5: 2: split_universal: to_ante(find_rel_constraint):  true
@5!sh-rev.slk:5: 2: split_universal: to_ante(aft wrapp):  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@5!sh-rev.slk:5: 2: split_universal: evars: p_117, flted_5_118, q_107, Anon_108, m_109
@5!sh-rev.slk:5: 2: split_universal: expl_inst_vars: 
@5!sh-rev.slk:5: 2: split_universal: vvars: flted_5_118, p_117
@5!sh-rev.slk:5: 2: split_universal: to_ante:  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@5!sh-rev.slk:5: 2: split_universal: to_conseq:  p_117=q_111 & flted_5_118=0
@5!sh-rev.slk:5: 2: process_fold_result: old_ctx before folding: q_111
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5!sh-rev.slk:5: 2: process_fold_result: new_ctx after folding: q_111
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@5!sh-rev.slk:5: 2: process_fold_result: vs2: flted_5_118, p_117
@5!sh-rev.slk:5: 2: process_fold_result: to_ante:  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@5!sh-rev.slk:5: 2: process_fold_result: to_conseq:  p_117=q_111 & flted_5_118=0
@5!sh-rev.slk:5: 2: process_fold_result: new_conseq:
 emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5!:heap_entail_one_context
@5!:0: 0: SAT #82
@5!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!sh-rev.slk:5: 2: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5!:heap_entail_conjunct_lhs
@5!sh-rev.slk:5: 2: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&{FLOW,(21,22)=__norm}[]
  es_heap:q_80::node<_,r>@M
 ### conseq =  emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]


@5! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@5!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: IMP #83
@5!:0: 0: imply_timeout: ante:  q_111=r
@5!:0: 0: imply_timeout: conseq:  p_117=q_111
@5!:0: 0: res: :false
@5!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!:0: 0: IMP #84
@5!:0: 0: imply_timeout: ante:  true
@5!:0: 0: imply_timeout: conseq:  flted_5_118=0
@5!:0: 0: res: :false
@5! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@5! rhs(orig): : p_117=q_111 & flted_5_118=0
@5! lhs (after filter_ante): : q_111=r & exists(p_117:p_117=q_111)
@5! fml: : q_111=r & exists(p_117:p_117=q_111) & p_117=q_111 & flted_5_118=0
@5!:0: 0: SAT #85
@5!:0: 0:  q_111=r & p_117=q_111 & flted_5_118=0
@5! early contra detect:false
@5!sh-rev.slk:5: 2: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@5!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5! heap(helper): emp
@5! pure(helper): p_117=q_111 & flted_5_118=0
@5! BRANCH1:?
@5!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5! ctx0.es_heap bef: q_80::node<_,r>@M
@5! ctx0.es_heap after: q_80::node<_,r>@M
@5! h1: emp
@5! h2: emp
@5! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@5! p2: p_117=q_111 & flted_5_118=0
@5!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&p_117=q_111 & flted_5_118=0&{FLOW,(1,24)=__flow}[]
@5! es_infer_vars_hp_rel :[]
@5! es_infer_vars :[]
@5! es_infer_vars_rel :[]
@5! es_infer_vars_sel_hp_rel :[]
@5! lhs_h: emp
@5! estate_orig.es_heap: q_80::node<_,r>@M
@5! curr_lhs_h: q_80::node<_,r>@M
@5! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@5! curr_lhs_h0: q_80::node<_,r>@M
@5! f:#DN# q_80::node<_,r>@M
@5! f:#DN# q_80::node<_,r>@M
@5! xpure_lhs_h1(bef merge): q_80!=null
@5! xpure_lhs_h1: q_80!=null
@5! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5!sh-rev.slk:5: 2: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5!sh-rev.slk:5: 2: heap_entail_empty_heap: rhs:
 p_117=q_111 & flted_5_118=0
@5! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@5! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null
@5!sh-rev.slk:5: 2: rhs_p : : p_117=q_111 & flted_5_118=0
@5!sh-rev.slk:5: 2: conseq0 : : true
@5!sh-rev.slk:5: 2: conseq1 : : true
@5!sh-rev.slk:5: 2: >>>>>> entail_empty_heap: cp1 <<<<<<
@5!sh-rev.slk:5: 2: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null
@5!sh-rev.slk:5: 2: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null
@5!sh-rev.slk:5: 2: conseq : : true
@5!:0: 0: astaq?
@5!:0: 0: IMP #7
@5!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@5! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null]
@5! ante-a1l:[]
@5!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null]
@5!:0: 0: coseq : : true
@5!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null
@5!:0: 0: res : :true
@5!:0: 0: ante: :[]
@5!:0: 0: coseq : : true
@5!:0: 0: SAT #86
@5!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r
@5!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: formula is valid
@5!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5! l_inst: true
@5! p2: p_117=q_111 & flted_5_118=0
@5! move_impl(l_inst):[]
@5! move_impl(to_elim_evars):[p_117,flted_5_118,q_107,Anon_108,m_109]
@5! move_impl(inst_to_keep):[]
@5! move_impl(f): true
@5! move_impl(new_to_elim):[]
@5! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5! new_es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@5! new_ctx: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & 
                 q_111=r & exists(flted_5_118:flted_5_118=0) & 
                 exists(p_117:p_117=q_111)&{FLOW,(21,22)=__norm}[]
                es_pure: p_117=q_111 & flted_5_118=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_117; flted_5_118; q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_117:q_107; q_111:p_117]
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@5!sh-rev.slk:5: 2: process_fold_result: context at end fold: q_111
 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & 
                 q_111=r & exists(flted_5_118:flted_5_118=0) & 
                 exists(p_117:p_117=q_111)&{FLOW,(21,22)=__norm}[]
                es_pure: p_117=q_111 & flted_5_118=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_117; flted_5_118; q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_117:q_107; q_111:p_117]
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@5! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & 
                 q_111=r & exists(flted_5_118:flted_5_118=0) & 
                 exists(p_117:p_117=q_111)&{FLOW,(21,22)=__norm}[]
                es_pure: p_117=q_111 & flted_5_118=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_117; flted_5_118; q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_117:q_107; q_111:p_117]
                es_aux_conseq: p_117=q_111 & flted_5_118=0
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@5! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & 
                 q_111=r & exists(flted_5_118:flted_5_118=0) & 
                 exists(p_117:p_117=q_111)&{FLOW,(21,22)=__norm}[]
                es_pure: p_117=q_111 & flted_5_118=0
                es_heap: q_80::node<_,r>@M
                es_evars: [p_117; flted_5_118; q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [p_117:q_107; q_111:p_117]
                es_aux_conseq: p_117=q_111 & flted_5_118=0
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
                es_infer_vars_rel: []]

@5! cl:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_aux_conseq: p_117=q_111 & flted_5_118=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []]
@5! cl after subs:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_aux_conseq: p_117=q_111 & flted_5_118=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []]
@5! cl after restore:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_aux_conseq: p_117=q_111 & flted_5_118=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []]
@5! annot: 2
@5! annot: [0,0]
@5! p: 1
@5! i: 0
@5! i: 0
@5! p: 2
@5! i: 0
@5! i: 0
@5! view_args_pos: 2
@5! to_be_updated: 2
@5! hargs: 2
@6! new_conseq one_ctx_entail: emp&m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107&
{FLOW,(1,24)=__flow}[]
@6!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_aux_conseq: p_117=q_111 & flted_5_118=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107 & p_117=q_111 & 
flted_5_118=0&{FLOW,(1,24)=__flow}[]
@6!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_aux_conseq: p_117=q_111 & flted_5_118=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107 & p_117=q_111 & 
flted_5_118=0&{FLOW,(1,24)=__flow}[]
@6! ctx0.es_heap bef: q_80::node<_,r>@M
@6! ctx0.es_heap after: q_80::node<_,r>@M
@6! h1: emp
@6! h2: emp
@6! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@6! p2: m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107 & p_117=q_111 & 
flted_5_118=0
@6!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_aux_conseq: p_117=q_111 & flted_5_118=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
conseq:
 emp&m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107 & p_117=q_111 & 
flted_5_118=0&{FLOW,(1,24)=__flow}[]
@6! es_infer_vars_hp_rel :[]
@6! es_infer_vars :[]
@6! es_infer_vars_rel :[]
@6! es_infer_vars_sel_hp_rel :[]
@6! lhs_h: emp
@6! estate_orig.es_heap: q_80::node<_,r>@M
@6! curr_lhs_h: q_80::node<_,r>@M
@6! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@6! curr_lhs_h0: q_80::node<_,r>@M
@6! f:#DN# q_80::node<_,r>@M
@6! f:#DN# q_80::node<_,r>@M
@6! xpure_lhs_h1(bef merge): q_80!=null
@6! xpure_lhs_h1: q_80!=null
@6! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_aux_conseq: p_117=q_111 & flted_5_118=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@6!sh-rev.slk:5: 2: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_aux_conseq: p_117=q_111 & flted_5_118=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@6!sh-rev.slk:5: 2: heap_entail_empty_heap: rhs:
 m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107 & p_117=q_111 & 
flted_5_118=0
@6! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
  exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&
  {FLOW,(21,22)=__norm}[]
 es_pure: p_117=q_111 & flted_5_118=0
 es_heap: q_80::node<_,r>@M
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [p_117:q_107; q_111:p_117]
 es_aux_conseq: p_117=q_111 & flted_5_118=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  COND ==>  BaseCaseFold ==> 
 es_infer_vars_rel: []
@6! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)
@6! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null
@6!sh-rev.slk:5: 2: rhs_p : : m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107 & p_117=q_111 & 
flted_5_118=0
@6!sh-rev.slk:5: 2: conseq0 : : q_111!=self_lem_13
@6!sh-rev.slk:5: 2: conseq1 : : q_111!=self_lem_13
@6!sh-rev.slk:5: 2: >>>>>> entail_empty_heap: cp1 <<<<<<
@6!sh-rev.slk:5: 2: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null
@6!sh-rev.slk:5: 2: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null
@6!sh-rev.slk:5: 2: conseq : : q_111!=self_lem_13
@6!:0: 0: astaq?
@6!:0: 0: IMP #8
@6!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@6! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null]
@6! ante-a1l:[]
@6!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null]
@6!:0: 0: coseq : : q_111!=self_lem_13
@6!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null
@6!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@6!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@6!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@6!:0: 0: IMP #87
@6!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13 & q_111=r
@6!:0: 0: imply_timeout: conseq:  q_111!=self_lem_13
@6!:0: 0: res: :false
@6!:0: 0: res : :false
@6! finish_flag::false
@6!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@6! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null]
@6! ante-a1l:[]
@6!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null]
@6!:0: 0: coseq : : q_111!=self_lem_13
@6!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & 
exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111) & q_80!=null
@6!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@6!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@6!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & q_80!=null
@6!:0: 0: IMP #88
@6!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13 & q_111=r
@6!:0: 0: imply_timeout: conseq:  q_111!=self_lem_13
@6!:0: 0: res: :false
@6!:0: 0: res : :false
@6!:0: 0: SAT #89
@6!:0: 0:  q_111!=self_lem_13
@6!:0: 0: SAT #90
@6!:0: 0:  q_80!=null & q_111=r & q_80=self_lem_13 & q_111!=self_lem_13
@6!:0: 0: SAT #91
@6!:0: 0:  q_80!=null & q_111=r & q_80=self_lem_13 & q_111=self_lem_13
@6!:0: 0: SAT #92
@6!:0: 0:  q_111!=self_lem_13
@6!:0: 0: SAT #93
@6!:0: 0:  q_80!=null & q_111=r & q_80=self_lem_13 & q_111!=self_lem_13
@6!:0: 0: SAT #94
@6!:0: 0:  q_80!=null & q_111=r & q_80=self_lem_13 & q_111=self_lem_13
@6!sh-rev.slk:5: 2: heap_entail_empty_rhs_heap: formula is not valid

@6! new_ctx: 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: logical bug
                   fe_locs: {
                             fc_message: 
                               self_lem_13!=null & exists(p_117:p_117=q_111) |-  q_111!=self_lem_13. LOCS:[8;4;5] (may-bug)
                             fc_current_lhs_flow: {FLOW,(1,24)=__flow}}

one_ctx_entail@6@5@4@1
one_ctx_entail inp1 : emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & Anon_81=v_110 & q_111=r & exists(flted_5_118:flted_5_118=0) & exists(p_117:p_117=q_111)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_ante_evars: [q_80; _; m_82]

one_ctx_entail inp2 : self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M&
m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107&{FLOW,(1,24)=__flow}[]
one_ctx_entail inp3 : m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107
one_ctx_entail@6 EXIT: failctx
         fe_kind: MAY
         fe_name: logical bug
         fe_locs: {
                   fc_message: 
                     self_lem_13!=null & exists(p_117:p_117=q_111) |-  q_111!=self_lem_13. LOCS:[8;4;5] (may-bug)
                   fc_current_lhs_flow: {FLOW,(1,24)=__flow}}

heap_n_pure_entail#1@5@4@1
heap_n_pure_entail#1 inp1 : es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [p_117; flted_5_118; q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_gen_impl_vars: [v_110; q_111]
 es_rhs_eqset: [p_117:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : self_lem_13::node<v_110,q_111>@M * q_111::lseg<flted_5_118,p_117>@M
heap_n_pure_entail#1 inp3 : m_109=flted_5_118+1 & q_107!=self_lem_13 & p_117=q_107
heap_n_pure_entail#1@5 EXIT:Not OK

@4!:0: 0: fold: process_one: rs1:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_pure: q_107=self_lem_13 & m_109=0
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@4!:0: 0: fold: context at beginning of fold: self_lem_13
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@4!:0: 0: fold: context at end of fold: self_lem_13
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_pure: q_107=self_lem_13 & m_109=0
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@4!:0: 0: fold: es.es_pure:  q_107=self_lem_13 & m_109=0
@4!:0: 0: split_universal: to_ante(after split):  true
@4!:0: 0: split_universal: to_ante(find_rel_constraint):  true
@4!:0: 0: split_universal: to_ante(aft wrapp):  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)
@4!:0: 0: split_universal: evars: q_107, Anon_108, m_109
@4!:0: 0: split_universal: expl_inst_vars: 
@4!:0: 0: split_universal: vvars: m_109, q_107
@4!:0: 0: split_universal: to_ante:  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)
@4!:0: 0: split_universal: to_conseq:  q_107=self_lem_13 & m_109=0
@4!:0: 0: process_fold_result: old_ctx before folding: self_lem_13
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_pure: q_107=self_lem_13 & m_109=0
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@4!:0: 0: process_fold_result: new_ctx after folding: self_lem_13
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@4!:0: 0: process_fold_result: vs2: m_109, q_107
@4!:0: 0: process_fold_result: to_ante:  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)
@4!:0: 0: process_fold_result: to_conseq:  q_107=self_lem_13 & m_109=0
@4!:0: 0: process_fold_result: new_conseq:
 q_107::node<_,r>@M&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@4!:heap_entail_one_context
@4! f:#DN# q_80::node<_,r>@M
@4!:0: 0: SAT #95
@4!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 q_107::node<_,r>@M&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@4!:heap_entail_conjunct_lhs
@4!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  q_107::node<_,r>@M&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]


@4! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@4! f:#DN# q_80::node<_,r>@M
@4! f:#DN# q_80::node<_,r>@M
@4! f:#DN# q_107::node<_,r>@M
@4! f:#DN# q_107::node<_,r>@M
@4!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: IMP #96
@4!:0: 0: imply_timeout: ante:  q_80!=null & q_80=self_lem_13
@4!:0: 0: imply_timeout: conseq:  q_107=self_lem_13
@4!:0: 0: res: :false
@4!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: IMP #97
@4!:0: 0: imply_timeout: ante:  true
@4!:0: 0: imply_timeout: conseq:  m_109=0
@4!:0: 0: res: :false
@4!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@4!:0: 0: IMP #98
@4!:0: 0: imply_timeout: ante:  true
@4!:0: 0: imply_timeout: conseq:  q_107!=null
@4! Ann Vars:[]
@4! Inv: true
@4!:0: 0: res: :false
@4! lhs(orig): : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@4! rhs(orig): : q_107=self_lem_13 & m_109=0 & q_107!=null
@4! lhs (after filter_ante): : q_80!=null & q_80=self_lem_13 & exists(q_107:q_107=self_lem_13)
@4! fml: : q_80!=null & q_80=self_lem_13 & exists(q_107:q_107=self_lem_13) & 
q_107=self_lem_13 & m_109=0 & q_107!=null
@4!:0: 0: SAT #99
@4!:0: 0:  q_80!=null & q_80=self_lem_13 & q_107=self_lem_13 & m_109=0 & q_107!=null
@4! early contra detect:false
@4!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@4!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 q_107::node<_,r>@M&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@4! heap(helper): q_107::node<_,r>@M
@4! pure(helper): q_107=self_lem_13 & m_109=0
@4! BRANCH2:?
@7!:0: 0: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 q_107::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@7! new_ctx: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_107::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@7!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_107::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@7! ctx0.es_heap bef: emp
@7! ctx0.es_heap after: emp
@7! h1: q_80::node<_,r>@M
@7! h2: q_107::node<_,r>@M
@7! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@7! p2: true
@7!:0: 0: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_107::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@7! estate.es_heap match_: emp
@7! ctx0 match_: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7!:0: 0: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_107::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@7! l:[(lhs_rest: emp,lhs_node: q_80::node<_,r>@M,holes:[],match_type: Root)]
@7! r:[([ 
  Type: Root
  LHS: q_80::node<_,r>@M
  RHS: q_107::node<_,r>@M
 lhs_rest: emp
 rhs_rest: emp],?)]
@7! **** sel_hp_rel **********************
@7! hp_rel:[]
@7! sel_hp_rel:[]
@7! sel_post_hp_rel:[]
@7! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: q_80::node<_,r>@M
                        RHS: q_107::node<_,r>@M
         ]]
@7! sorted action:[(1): Prio:0Match =>
                LHS: q_80::node<_,r>@M
                RHS: q_107::node<_,r>@M]
@7! estate: es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7!:0: 0: process_action :
 ### action =  Match =>
          Type: Root
          LHS: q_80::node<_,r>@M
          RHS: q_107::node<_,r>@M
 lhs_rest: emp
 rhs_rest: emp
 ### estate =  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  q_107::node<_,r>@M&{FLOW,(21,22)=__norm}[]


@7! lhs_node: q_80::node<_,r>@M
@7! lhs_rest: emp
@7! rhs_node: q_107::node<_,r>@M
@7! rhs_rest: emp
@7! new_estate(M_match): es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7! subst:[]
@7!:0: 0: do_match: using  q_80::node<_,r>@M to prove  q_107::node<_,r>@M
@7!:0: 0: do_match: source LHS:  es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7!:0: 0: do_match: source RHS:  emp&{FLOW,(21,22)=__norm}[]
@7! add_to_lhs:[]
@7! add_to_rhs:[]
@7! Imm annotation mismatch (node lvl):false
@7! param_ann_lhs:[]
@7! param_ann_rhs:[]
@7! Imm annotation mismatch (field lvl):false
@7! l_args_ann:[]
@7! r_args_ann:[]
@7! view_param_ann_lhs:None
@7! view_param_ann_rhs:None
@7! Imm annotation mismatch (view param):false
@7! ann_lhs:None
@7! ann_rhs:None
@7! Imm annotation mismatch:false
@7! restore_hole_b:true
@7! l_h: emp
@7! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7! r_h: emp
@7! new_l_args:[#,#]
@7! new_r_args:[#,#]
@7! new_l_holes:[0,1]
@7! new_r_holes:[0,1]
@7! rem_l_node: emp
@7! rem_r_node: emp
@7!  impl_vars: :[]
@7! other subs:[((Anon_108,Anon_81),?),((r,r),?)]
@7! other subs:[((Anon_108,Anon_81),?),((r,r),?)]
@7! ext_subst(bef filter out ann):[(Anon_108,Anon_81)]
@7! to_rhs(bef ann): true
@7! to_lhs(bef ann): true
@7! ext_subst(bef ann):[(Anon_108,Anon_81)]
@7! to_rhs: true
@7! to_lhs: true
@7! new_ante_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@7! new_conseq_p: true
@7! l_h: emp
@7! tmp_conseq: emp&{FLOW,(21,22)=__norm}[]
@7! r_ann:@M
@7! consumed_h: q_80::node<_,r>@M
@7! new_consumed: q_80::node<_,r>@M
@7! new_ante: emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
@7! new_conseq: emp&{FLOW,(21,22)=__norm}[]
@7! new_es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7!:0: 0: do_match (after): LHS:  es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7!:0: 0: do_match (after): RHS: emp&{FLOW,(21,22)=__norm}[]
@7!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@7!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@7! ctx0.es_heap bef: q_80::node<_,r>@M
@7! ctx0.es_heap after: q_80::node<_,r>@M
@7! h1: emp
@7! h2: emp
@7! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@7! p2: true
@7!:0: 0: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@7! es_infer_vars_hp_rel :[]
@7! es_infer_vars :[]
@7! es_infer_vars_rel :[]
@7! es_infer_vars_sel_hp_rel :[]
@7! lhs_h: emp
@7! estate_orig.es_heap: q_80::node<_,r>@M
@7! curr_lhs_h: q_80::node<_,r>@M
@7! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@7! curr_lhs_h0: q_80::node<_,r>@M
@7! f:#DN# q_80::node<_,r>@M
@7! f:#DN# q_80::node<_,r>@M
@7! xpure_lhs_h1(bef merge): q_80!=null
@7! xpure_lhs_h1: q_80!=null
@7! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7!:0: 0: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7!:0: 0: heap_entail_empty_heap: rhs:
 true
@7! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@7! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@7! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@7!:0: 0: rhs_p : : true
@7!:0: 0: conseq0 : : true
@7!:0: 0: conseq1 : : true
@7!:0: 0: >>>>>> entail_empty_heap: cp1 <<<<<<
@7!:0: 0: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@7!:0: 0: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@7!:0: 0: conseq : : true
@7!:0: 0: SAT #100
@7!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82
@7!:0: 0: heap_entail_empty_heap: formula is valid
@7!:0: 0: heap_entail_empty_heap: res_ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@7! l_inst: true
@7! p2: true
@7! move_impl(l_inst):[]
@7! move_impl(to_elim_evars):[q_107,Anon_108,m_109]
@7! move_impl(inst_to_keep):[]
@7! move_impl(f): true
@7! move_impl(new_to_elim):[]
@7! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@7! new_es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@7! new_ctx: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
                 exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_80::node<_,r>@M
                es_evars: [q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [self_lem_13:q_107]
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
                es_infer_vars_rel: []]

@7! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
                 exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_80::node<_,r>@M
                es_evars: [q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82]
                es_rhs_eqset: [self_lem_13:q_107]
                es_subst (from): [_]
                es_subst (to): [_]
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
                es_infer_vars_rel: []]

@7! cl:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []]
@7! cl after subs:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []]
@7! cl after restore:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []]
@8! new_conseq one_ctx_entail: emp&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@8!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@8!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@8! ctx0.es_heap bef: q_80::node<_,r>@M
@8! ctx0.es_heap after: q_80::node<_,r>@M
@8! h1: emp
@8! h2: emp
@8! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@8! p2: q_107=self_lem_13 & m_109=0
@8!:0: 0: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@8! es_infer_vars_hp_rel :[]
@8! es_infer_vars :[]
@8! es_infer_vars_rel :[]
@8! es_infer_vars_sel_hp_rel :[]
@8! lhs_h: emp
@8! estate_orig.es_heap: q_80::node<_,r>@M
@8! curr_lhs_h: q_80::node<_,r>@M
@8! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@8! curr_lhs_h0: q_80::node<_,r>@M
@8! f:#DN# q_80::node<_,r>@M
@8! f:#DN# q_80::node<_,r>@M
@8! xpure_lhs_h1(bef merge): q_80!=null
@8! xpure_lhs_h1: q_80!=null
@8! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@8!:0: 0: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@8!:0: 0: heap_entail_empty_heap: rhs:
 q_107=self_lem_13 & m_109=0
@8! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@8! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@8! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@8!:0: 0: rhs_p : : q_107=self_lem_13 & m_109=0
@8!:0: 0: conseq0 : : true
@8!:0: 0: conseq1 : : true
@8!:0: 0: >>>>>> entail_empty_heap: cp1 <<<<<<
@8!:0: 0: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@8!:0: 0: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@8!:0: 0: conseq : : true
@8!:0: 0: astaq?
@8!:0: 0: IMP #10
@8!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@8! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null]
@8! ante-a1l:[]
@8!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null]
@8!:0: 0: coseq : : true
@8!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@8!:0: 0: res : :true
@8!:0: 0: ante: :[]
@8!:0: 0: coseq : : true
@8!:0: 0: SAT #101
@8!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82
@8!:0: 0: heap_entail_empty_heap: formula is valid
@8!:0: 0: heap_entail_empty_heap: res_ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@8! l_inst: true
@8! p2: q_107=self_lem_13 & m_109=0
@8! move_impl(l_inst):[]
@8! move_impl(to_elim_evars):[q_107,Anon_108,m_109]
@8! move_impl(inst_to_keep):[]
@8! move_impl(f): true
@8! move_impl(new_to_elim):[]
@8! new_ctx: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
                 exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_80::node<_,r>@M
                es_evars: [q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
                es_rhs_eqset: [self_lem_13:q_107]
                es_subst (from): [_]
                es_subst (to): [_]
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
                es_infer_vars_rel: []]

one_ctx_entail@8@7@4@1
one_ctx_entail inp1 : emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_ante_evars: [q_80; _; m_82]

one_ctx_entail inp2 : q_107::node<_,r>@M&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
one_ctx_entail inp3 : q_107=self_lem_13 & m_109=0
one_ctx_entail@8 EXIT: 1[
   emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
   ]

heap_n_pure_entail#1@7@4@1
heap_n_pure_entail#1 inp1 : es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
  exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_rhs_eqset: [self_lem_13:q_107]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : q_107::node<_,r>@M
heap_n_pure_entail#1 inp3 : q_107=self_lem_13 & m_109=0
heap_n_pure_entail#1@7 EXIT:OK

@4!:0: 0: process_fold_result: context at end fold: self_lem_13
 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
                 exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_80::node<_,r>@M
                es_evars: [q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
                es_rhs_eqset: [self_lem_13:q_107]
                es_subst (from): [_]
                es_subst (to): [_]
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
                es_infer_vars_rel: []]

@4! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
                 exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_80::node<_,r>@M
                es_evars: [q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
                es_rhs_eqset: [self_lem_13:q_107]
                es_subst (from): [_]
                es_subst (to): [_]
                es_aux_conseq: q_107=self_lem_13 & m_109=0
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
                es_infer_vars_rel: []]

@4! cl:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []]
@4! cl after subs:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []]
@4! cl after restore:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []]
@4! annot: 2
@4! annot: [0,0]
@4! p: 1
@4! i: 0
@4! i: 0
@4! p: 2
@4! i: 0
@4! i: 0
@4! view_args_pos: 2
@4! to_be_updated: 2
@4! hargs: 2
@9! new_conseq one_ctx_entail: emp&n=1+m_109&{FLOW,(21,22)=__norm}[]
@9!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&n=1+m_109 & q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@9!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&n=1+m_109 & q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@9! ctx0.es_heap bef: q_80::node<_,r>@M
@9! ctx0.es_heap after: q_80::node<_,r>@M
@9! h1: emp
@9! h2: emp
@9! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@9! p2: n=1+m_109 & q_107=self_lem_13 & m_109=0
@9!:0: 0: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&n=1+m_109 & q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@9! es_infer_vars_hp_rel :[]
@9! es_infer_vars :[]
@9! es_infer_vars_rel :[]
@9! es_infer_vars_sel_hp_rel :[]
@9! lhs_h: emp
@9! estate_orig.es_heap: q_80::node<_,r>@M
@9! curr_lhs_h: q_80::node<_,r>@M
@9! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@9! curr_lhs_h0: q_80::node<_,r>@M
@9! f:#DN# q_80::node<_,r>@M
@9! f:#DN# q_80::node<_,r>@M
@9! xpure_lhs_h1(bef merge): q_80!=null
@9! xpure_lhs_h1: q_80!=null
@9! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@9!:0: 0: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@9!:0: 0: heap_entail_empty_heap: rhs:
 n=1+m_109 & q_107=self_lem_13 & m_109=0
@9! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@9! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@9! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@9!:0: 0: rhs_p : : n=1+m_109 & q_107=self_lem_13 & m_109=0
@9!:0: 0: conseq0 : : n=1+0
@9!:0: 0: conseq1 : : n=1+0
@9!:0: 0: >>>>>> entail_empty_heap: cp1 <<<<<<
@9!:0: 0: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@9!:0: 0: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@9!:0: 0: conseq : : n=0+1
@9!:0: 0: astaq?
@9!:0: 0: IMP #11
@9!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@9! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null]
@9! ante-a1l:[]
@9!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null]
@9!:0: 0: coseq : : n=0+1
@9!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@9!:0: 0: ante 1: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@9!:0: 0: ante 3: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@9!:0: 0: ante 4: : q_80=self_lem_13 & m_82=0 & n=1+m_82 & q_80!=null
@9!:0: 0: IMP #102
@9!:0: 0: imply_timeout: ante:  m_82=0 & n=1+m_82
@9!:0: 0: imply_timeout: conseq:  n=0+1
@9! Ann Vars:[]
@9! Inv: m_82=0 & n=1+m_82
@9!:0: 0: res: :true
@9!:0: 0: res : :true
@9!:0: 0: ante: :[]
@9!:0: 0: coseq : : n=0+1
@9!:0: 0: SAT #103
@9!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82
@9!:0: 0: heap_entail_empty_heap: formula is valid
@9!:0: 0: heap_entail_empty_heap: res_ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@9! l_inst: true
@9! p2: n=1+m_109 & q_107=self_lem_13 & m_109=0
@9! move_impl(l_inst):[]
@9! move_impl(to_elim_evars):[q_107,Anon_108,m_109]
@9! move_impl(inst_to_keep):[]
@9! move_impl(f): true
@9! move_impl(new_to_elim):[]
@9! new_ctx: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
                 exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_80::node<_,r>@M
                es_evars: [q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; 
                                m_109]
                es_rhs_eqset: [self_lem_13:q_107]
                es_subst (from): [_]
                es_subst (to): [_]
                es_aux_conseq: q_107=self_lem_13 & m_109=0
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
                es_infer_vars_rel: []]

one_ctx_entail@9@4@1
one_ctx_entail inp1 : emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109]

one_ctx_entail inp2 : self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M&n=1+m_109&
{FLOW,(21,22)=__norm}[]
one_ctx_entail inp3 : n=1+m_109
one_ctx_entail@9 EXIT: 1[
   emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
   ]

heap_n_pure_entail#1@4@1
heap_n_pure_entail#1 inp1 : es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : self_lem_13::lseg<m_109,q_107>@M * q_107::node<_,r>@M
heap_n_pure_entail#1 inp3 : n=1+m_109
heap_n_pure_entail#1@4 EXIT:OK

@1! f(b4 elim_exists_es_his): emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
@1! new_his(after elim_exists_es_his):[]
@1! f(after elim_exists_es_his): emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
@1! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
                 exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_80::node<_,r>@M
                es_evars: [q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; 
                                m_109]
                es_rhs_eqset: [self_lem_13:q_107]
                es_subst (from): [_]
                es_subst (to): [_]
                es_aux_conseq: q_107=self_lem_13 & m_109=0
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
                es_infer_vars_rel: []]

@1! cl:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []]
@1! cl after subs:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []]
@1! cl after restore:[ es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []]
@1! annot: 2
@1! annot: [0,0]
@1! p: 1
@1! i: 0
@1! i: 0
@1! p: 2
@1! i: 0
@1! i: 0
@1! view_args_pos: 2
@1! to_be_updated: 2
@1! hargs: 2
@10! new_conseq one_ctx_entail: emp&{FLOW,(21,22)=__norm}[]
@10!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@10!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@10! ctx0.es_heap bef: q_80::node<_,r>@M
@10! ctx0.es_heap after: q_80::node<_,r>@M
@10! h1: emp
@10! h2: emp
@10! p1: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@10! p2: q_107=self_lem_13 & m_109=0
@10!:0: 0: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&q_107=self_lem_13 & m_109=0&{FLOW,(21,22)=__norm}[]
@10! es_infer_vars_hp_rel :[]
@10! es_infer_vars :[]
@10! es_infer_vars_rel :[]
@10! es_infer_vars_sel_hp_rel :[]
@10! lhs_h: emp
@10! estate_orig.es_heap: q_80::node<_,r>@M
@10! curr_lhs_h: q_80::node<_,r>@M
@10! lhs_p: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@10! curr_lhs_h0: q_80::node<_,r>@M
@10! f:#DN# q_80::node<_,r>@M
@10! f:#DN# q_80::node<_,r>@M
@10! xpure_lhs_h1(bef merge): q_80!=null
@10! xpure_lhs_h1: q_80!=null
@10! es: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@10!:0: 0: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@10!:0: 0: heap_entail_empty_heap: rhs:
 q_107=self_lem_13 & m_109=0
@10! estate: es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@10! m_lhs: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13)
@10! tmp3: q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@10!:0: 0: rhs_p : : q_107=self_lem_13 & m_109=0
@10!:0: 0: conseq0 : : true
@10!:0: 0: conseq1 : : true
@10!:0: 0: >>>>>> entail_empty_heap: cp1 <<<<<<
@10!:0: 0: ante0 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@10!:0: 0: ante1 : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@10!:0: 0: conseq : : true
@10!:0: 0: astaq?
@10!:0: 0: IMP #12
@10!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@10! ante-a0l:[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null]
@10! ante-a1l:[]
@10!:0: 0: ante: :[ q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null]
@10!:0: 0: coseq : : true
@10!:0: 0: h : : q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
exists(q_107:q_107=self_lem_13) & q_80!=null
@10!:0: 0: res : :true
@10!:0: 0: ante: :[]
@10!:0: 0: coseq : : true
@10!:0: 0: SAT #104
@10!:0: 0:  q_80=self_lem_13 & m_82=0 & n=1+m_82
@10!:0: 0: heap_entail_empty_heap: formula is valid
@10!:0: 0: heap_entail_empty_heap: res_ctx:
 es_formula: 
  emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & 
  exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_evars: [q_107; _; m_109]
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]
 es_rhs_eqset: [self_lem_13:q_107]
 es_subst (from): [_]
 es_subst (to): [_]
 es_aux_conseq: q_107=self_lem_13 & m_109=0
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
@10! l_inst: true
@10! p2: q_107=self_lem_13 & m_109=0
@10! move_impl(l_inst):[]
@10! move_impl(to_elim_evars):[q_107,Anon_108,m_109]
@10! move_impl(inst_to_keep):[]
@10! move_impl(f): true
@10! move_impl(new_to_elim):[]
@10! new_ctx: 
Good Context: 1[es_formula: 
                 emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & 
                 exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_80::node<_,r>@M
                es_evars: [q_107; _; m_109]
                es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; 
                                m_109; q_107; _; m_109]
                es_rhs_eqset: [self_lem_13:q_107]
                es_subst (from): [_]
                es_subst (to): [_]
                es_aux_conseq: q_107=self_lem_13 & m_109=0
                es_trace: 
                  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
                es_infer_vars_rel: []]

one_ctx_entail@10@1
one_ctx_entail inp1 : emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_heap: q_80::node<_,r>@M
 es_ante_evars: [q_80; _; m_82; q_107; _; m_109; q_107; _; m_109]

one_ctx_entail inp2 : self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
one_ctx_entail inp3 : true
one_ctx_entail@10 EXIT: 1[
   emp&q_80=self_lem_13 & m_82=0 & n=1+m_82 & exists(m_109:m_109=0) & exists(q_107:q_107=self_lem_13)&{FLOW,(21,22)=__norm}[]
   ]

heap_n_pure_entail#1@1
heap_n_pure_entail#1 inp1 : es_formula: 
  q_80::node<_,r>@M&q_80=self_lem_13 & m_82=0 & n=1+m_82&
  {FLOW,(21,22)=__norm}[]
 es_ante_evars: [q_80; _; m_82]
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : self_lem_13::lseg<n,r>@M
heap_n_pure_entail#1 inp3 : true
heap_n_pure_entail#1@1 EXIT:OK

@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_infer_vars_rel: []
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! new_ctx: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_infer_vars_rel: []
 es_unsat_flag: false
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@11! ctx0.es_heap bef: emp
@11! ctx0.es_heap after: emp
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! h1: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
q_140::node<_,r>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! h2: self_lem_13::lseg<n,r>@M
@11! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142
@11! p2: true
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@11! estate.es_heap match_: emp
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! ctx0 match_: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_infer_vars_rel: []
 es_unsat_flag: false
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
@11! vars:[n,p]
@11! args:[n,r]
@11! lmv: [(self,full,[lseg])]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! l:[(lhs_rest: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M,lhs_node: self_lem_13::node<v_138,q_139>@M,holes:[],match_type: Root)]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! r:[([ 
  Type: Root
  LHS: self_lem_13::node<v_138,q_139>@M
  RHS: self_lem_13::lseg<n,r>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M
 rhs_rest: emp],?)]
@11! **** sel_hp_rel **********************
@11! hp_rel:[]
@11! sel_hp_rel:[]
@11! sel_post_hp_rel:[]
@11! cyclic:add_checkpoint:fold
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:1Fold =>
                       LHS: self_lem_13::node<v_138,q_139>@M
                       RHS: self_lem_13::lseg<n,r>@M;
         Prio:1RD_Lemma =>
                           LHS: self_lem_13::node<v_138,q_139>@M
                           RHS: self_lem_13::lseg<n,r>@M
         ]]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! sorted action:[(1): Prio:1SEARCH =>[
        Prio:1Fold =>
                      LHS: self_lem_13::node<v_138,q_139>@M
                      RHS: self_lem_13::lseg<n,r>@M;
        Prio:1RD_Lemma =>
                          LHS: self_lem_13::node<v_138,q_139>@M
                          RHS: self_lem_13::lseg<n,r>@M
        ]]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! estate: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_infer_vars_rel: []
 es_unsat_flag: false
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: process_action :
 ### action =  Fold =>
         Type: Root
         LHS: self_lem_13::node<v_138,q_139>@M
         RHS: self_lem_13::lseg<n,r>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
         q_140::node<_,r>@M
 rhs_rest: emp
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]


@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: do_fold: anns:[@M,@M]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: do_fold: LHS ctx: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_heap: emp
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]

@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: do_fold: RHS view:  self_lem_13::lseg<n,r>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: do_fold: view_form:  :EBase {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_143; q_144](ex)[]{2}->(exists p_145,
          flted_5_146: self_lem_13::node<v_143,q_144>@M * 
          q_144::lseg<flted_5_146,p_145>@M&n=flted_5_146+1 & 
          r!=self_lem_13 & p_145=r&{FLOW,(1,24)=__flow})[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_one_context_struc:
ctx:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 :EBase {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_143; q_144](ex)[]{2}->(exists p_145,
          flted_5_146: self_lem_13::node<v_143,q_144>@M * 
          q_144::lseg<flted_5_146,p_145>@M&n=flted_5_146+1 & 
          r!=self_lem_13 & p_145=r&{FLOW,(1,24)=__flow})[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! es(1): self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
tid:None
delayed_f:None
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 :EBase {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_143; q_144](ex)[]{2}->(exists p_145,
          flted_5_146: self_lem_13::node<v_143,q_144>@M * 
          q_144::lseg<flted_5_146,p_145>@M&n=flted_5_146+1 & 
          r!=self_lem_13 & p_145=r&{FLOW,(1,24)=__flow})[]
@11! fs:[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! es(2): self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! es(3): self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@11!:heap_entail_one_context
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11!:0: 0: SAT #107
@11!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]
@11!:heap_entail_conjunct_lhs
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  {1}->emp&r=self_lem_13 & n=0&{FLOW,(1,24)=__flow}[]


@11! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: IMP #108
@11!:0: 0: imply_timeout: ante:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@11!:0: 0: imply_timeout: conseq:  r=self_lem_13
@11! Ann Vars:[]
@11! Inv: n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@11!:0: 0: res: :false
@11!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: IMP #109
@11!:0: 0: imply_timeout: ante:  q_140!=null & self_lem_13!=null & q_140!=self_lem_13 & p_136=q_140 & 
(((1<=flted_5_137 & q_139!=null & p_136!=q_139) | (p_136=q_139 & 
flted_5_137=0))) & m_142=flted_5_137+1 & n=1+m_142
@11!:0: 0: imply_timeout: conseq:  n=0
@11! Ann Vars:[]
@11! Inv: q_140!=null & self_lem_13!=null & q_140!=self_lem_13 & p_136=q_140 & 
(((1<=flted_5_137 & q_139!=null & p_136!=q_139) | (p_136=q_139 & 
flted_5_137=0))) & m_142=flted_5_137+1 & n=1+m_142
@11!:0: 0: res: :false
@11! lhs(orig): : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11! rhs(orig): : r=self_lem_13 & n=0
@11! lhs (after filter_ante): : q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & p_136=q_140 & m_142=flted_5_137+1 & 
q_140!=self_lem_13 & n=1+m_142 & self_lem_13!=null
@11! fml: : q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & p_136=q_140 & m_142=flted_5_137+1 & 
q_140!=self_lem_13 & n=1+m_142 & self_lem_13!=null & r=self_lem_13 & n=0
@11!:0: 0: SAT #110
@11!:0: 0:  q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & p_136=q_140 & m_142=flted_5_137+1 & 
q_140!=self_lem_13 & n=1+m_142 & self_lem_13!=null & r=self_lem_13 & n=0
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11! infer_vars_hp_rel:[]
@11! infer_vars_hp_rel:[]
@11! h_inf_args:[]
@11! es_infer_vars:[]
@11! early contra detect:false
@11! Early lhs-rhs contra detected
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11!:0: 0: SAT #111
@11!:0: 0:  n=0
@11!:0: 0: SAT #112
@11!:0: 0:  r=self_lem_13
@11!:0: 0: SAT #113
@11!:0: 0:  q_140!=null & self_lem_13!=null & q_140!=self_lem_13 & p_136=q_140 & 
(((1<=flted_5_137 & q_139!=null & p_136!=q_139) | (p_136=q_139 & 
flted_5_137=0))) & m_142=flted_5_137+1 & n=1+m_142 & n=0
@11!:0: 0: SAT #114
@11!:0: 0:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & self_lem_13!=null & q_140!=self_lem_13 & r=self_lem_13
@11!:0: 0: SAT #115
@11!:0: 0:  q_140!=null & self_lem_13!=null & q_140!=self_lem_13 & p_136=q_140 & 
(((1<=flted_5_137 & q_139!=null & p_136!=q_139) | (p_136=q_139 & 
flted_5_137=0))) & m_142=flted_5_137+1 & n=1+m_142 & n=0
@11!:0: 0: SAT #116
@11!:0: 0:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & self_lem_13!=null & q_140!=self_lem_13 & r!=self_lem_13
@11!:heap_entail_one_context
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11!:0: 0: SAT #117
@11!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {2}->(exists p_145,flted_5_146: self_lem_13::node<v_143,q_144>@M * 
q_144::lseg<flted_5_146,p_145>@M&n=flted_5_146+1 & r!=self_lem_13 & p_145=r&
{FLOW,(1,24)=__flow})[]
@11!:heap_entail_conjunct_lhs
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  {2}->(exists p_145,flted_5_146: self_lem_13::node<v_143,q_144>@M * 
q_144::lseg<flted_5_146,p_145>@M&n=flted_5_146+1 & r!=self_lem_13 & p_145=r&
{FLOW,(1,24)=__flow})[]


@11! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11! f:#DN# self_lem_13::node<v_143,q_144>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_144::lseg<flted_5_146,p_145>@M
@11! f:#DN# self_lem_13::node<v_143,q_144>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_144::lseg<flted_5_146,p_145>@M
@11!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: IMP #119
@11!:0: 0: imply_timeout: ante:  q_140!=null & self_lem_13!=null & q_140!=self_lem_13 & p_136=q_140 & 
(((1<=flted_5_137 & q_139!=null & p_136!=q_139) | (p_136=q_139 & 
flted_5_137=0))) & m_142=flted_5_137+1 & n=1+m_142
@11!:0: 0: imply_timeout: conseq:  ((q_144!=r & q_144!=null & 2<=n) | (q_144=r & n=1))
@11! Ann Vars:[]
@11! Inv: q_140!=null & self_lem_13!=null & q_140!=self_lem_13 & p_136=q_140 & 
(((1<=flted_5_137 & q_139!=null & p_136!=q_139) | (p_136=q_139 & 
flted_5_137=0))) & m_142=flted_5_137+1 & n=1+m_142
@11!:0: 0: res: :false
@11!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: IMP #120
@11!:0: 0: imply_timeout: ante:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@11!:0: 0: imply_timeout: conseq:  r!=self_lem_13
@11! Ann Vars:[]
@11! Inv: n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@11!:0: 0: res: :false
@11!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: IMP #121
@11!:0: 0: imply_timeout: ante:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@11!:0: 0: imply_timeout: conseq:  self_lem_13!=null
@11! Ann Vars:[]
@11! Inv: n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@11!:0: 0: res: :true
@11! lhs(orig): : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11! rhs(orig): : exists(flted_5_146:exists(p_145:p_145=r & (((1<=flted_5_146 & q_144!=null & 
p_145!=q_144) | (p_145=q_144 & flted_5_146=0)))) & n=flted_5_146+1) & 
r!=self_lem_13
@11! lhs (after filter_ante): : q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & p_136=q_140 & m_142=flted_5_137+1 & 
q_140!=self_lem_13 & n=1+m_142 & self_lem_13!=null
@11! fml: : q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & p_136=q_140 & m_142=flted_5_137+1 & 
q_140!=self_lem_13 & n=1+m_142 & self_lem_13!=null & 
exists(flted_5_146:exists(p_145:p_145=r & (((1<=flted_5_146 & q_144!=null & 
p_145!=q_144) | (p_145=q_144 & flted_5_146=0)))) & n=flted_5_146+1) & 
r!=self_lem_13
@11!:0: 0: SAT #122
@11!:0: 0:  q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & p_136=q_140 & m_142=flted_5_137+1 & 
q_140!=self_lem_13 & n=1+m_142 & self_lem_13!=null & 
exists(flted_5_146:(((1<=flted_5_146 & q_144!=null & q_144!=r) | (q_144=r & 
flted_5_146=0))) & n=flted_5_146+1) & r!=self_lem_13
@11! early contra detect:false
@11!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {2}->(exists p_145,flted_5_146: self_lem_13::node<v_143,q_144>@M * 
q_144::lseg<flted_5_146,p_145>@M&n=flted_5_146+1 & r!=self_lem_13 & p_145=r&
{FLOW,(1,24)=__flow})[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M&
n=flted_5_151+1 & r!=self_lem_13 & p_150=r&{FLOW,(1,24)=__flow}[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! heap(helper): self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M
@11! pure(helper): n=flted_5_151+1 & r!=self_lem_13 & p_150=r
@11! BRANCH2:?
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M&
{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! new_ctx: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M&
{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M&
{FLOW,(1,24)=__flow}[]
@12! ctx0.es_heap bef: emp
@12! ctx0.es_heap after: emp
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! h1: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
q_140::node<_,r>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! h2: self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M
@12! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142
@12! p2: true
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M&
{FLOW,(1,24)=__flow}[]
@12! estate.es_heap match_: emp
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! ctx0 match_: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M&
{FLOW,(1,24)=__flow}[]
@12! vars:[n,p]
@12! args:[n,r]
@12! lmv: [(self,full,[lseg])]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! l:[(lhs_rest: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M,lhs_node: self_lem_13::node<v_138,q_139>@M,holes:[],match_type: Root)]
@12! vars:[n,p]
@12! args:[n,r]
@12! lmv: [(self,full,[lseg])]
@12! l:[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! r:[([ 
  Type: Root
  LHS: self_lem_13::node<v_138,q_139>@M
  RHS: self_lem_13::node<v_143,q_144>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M
 rhs_rest: q_144::lseg<flted_5_151,p_150>@M],?),([],?)]
@12! **** sel_hp_rel **********************
@12! hp_rel:[]
@12! sel_hp_rel:[]
@12! sel_post_hp_rel:[]
@12! **** sel_hp_rel **********************
@12! hp_rel:[]
@12! sel_hp_rel:[]
@12! sel_post_hp_rel:[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: self_lem_13::node<v_138,q_139>@M
                        RHS: self_lem_13::node<v_143,q_144>@M
         ],
(2): Prio:-1COND =>[Prio:2BaseCaseFold =>
                                      LHS: emp
                                      RHS: q_144::lseg<flted_5_151,p_150>@M;Prio:2UnmatchedRHSData =>  q_144::lseg<flted_5_151,p_150>@M]]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! sorted action:[(1): Prio:0Match =>
                LHS: self_lem_13::node<v_138,q_139>@M
                RHS: self_lem_13::node<v_143,q_144>@M,
(2): Prio:2COND =>[Prio:2BaseCaseFold =>
                                     LHS: emp
                                     RHS: q_144::lseg<flted_5_151,p_150>@M;Prio:2UnmatchedRHSData =>  q_144::lseg<flted_5_151,p_150>@M]]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! estate: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: process_action :
 ### action =  Match =>
          Type: Root
          LHS: self_lem_13::node<v_138,q_139>@M
          RHS: self_lem_13::node<v_143,q_144>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
          q_140::node<_,r>@M
 rhs_rest: q_144::lseg<flted_5_151,p_150>@M
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M&
{FLOW,(1,24)=__flow}[]


@12! lhs_node: self_lem_13::node<v_138,q_139>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! lhs_rest: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@12! rhs_node: self_lem_13::node<v_143,q_144>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! rhs_rest: q_144::lseg<flted_5_151,p_150>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! new_estate(M_match): es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! subst:[]
@12!sh-rev.slk:5: 2: do_match: using  self_lem_13::node<v_138,q_139>@M to prove  self_lem_13::node<v_143,q_144>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: do_match: source LHS:  es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: do_match: source RHS:  q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]
@12! add_to_lhs:[]
@12! add_to_rhs:[]
@12! Imm annotation mismatch (node lvl):false
@12! param_ann_lhs:[]
@12! param_ann_rhs:[]
@12! Imm annotation mismatch (field lvl):false
@12! l_args_ann:[]
@12! r_args_ann:[]
@12! view_param_ann_lhs:None
@12! view_param_ann_rhs:None
@12! Imm annotation mismatch (view param):false
@12! ann_lhs:None
@12! ann_rhs:None
@12! Imm annotation mismatch:false
@12! restore_hole_b:true
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! l_h: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! estate: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! r_h: q_144::lseg<flted_5_151,p_150>@M
@12! new_l_args:[#,#]
@12! new_r_args:[#,#]
@12! new_l_holes:[0,1]
@12! new_r_holes:[0,1]
@12! rem_l_node: emp
@12! rem_r_node: emp
@12!  impl_vars: :[v_143,q_144]
@12! other subs:[((v_143,v_138),?),((q_144,q_139),?)]
@12! other subs:[((v_143,v_138),?),((q_144,q_139),?)]
@12! ext_subst(bef filter out ann):[]
@12! to_rhs(bef ann): true
@12! to_lhs(bef ann): v_138=v_143 & q_139=q_144
@12! ext_subst(bef ann):[]
@12! to_rhs: true
@12! to_lhs: v_138=v_143 & q_139=q_144
@12! new_ante_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@12! new_conseq_p: true
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! l_h: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! tmp_conseq: q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]
@12! r_ann:@M
@12! consumed_h: self_lem_13::node<v_138,q_139>@M
@12! new_consumed: self_lem_13::node<v_138,q_139>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! new_ante: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & 
q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&
{FLOW,(21,22)=__norm}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! new_conseq: q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! new_es: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: do_match (after): LHS:  es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: do_match (after): RHS: q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]
@12! ctx0.es_heap bef: self_lem_13::node<v_138,q_139>@M
@12! ctx0.es_heap after: self_lem_13::node<v_138,q_139>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! h1: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! h2: q_144::lseg<flted_5_151,p_150>@M
@12! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@12! p2: true
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]
@12! estate.es_heap match_: self_lem_13::node<v_138,q_139>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! ctx0 match_: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! l:[(lhs_rest: q_140::node<_,r>@M,lhs_node: q_139::lseg<flted_5_137,p_136>@M,holes:[],match_type: Root)]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! r:[([ 
  Type: Root
  LHS: q_139::lseg<flted_5_137,p_136>@M
  RHS: q_144::lseg<flted_5_151,p_150>@M
 lhs_rest: q_140::node<_,r>@M
 rhs_rest: emp],?)]
@12! **** sel_hp_rel **********************
@12! hp_rel:[]
@12! sel_hp_rel:[]
@12! sel_post_hp_rel:[]
@12! force_match:false
@12! s_eq:true
@12! vl_b:false
@12! vr_b:false
@12! vl_view_orig:true
@12! vr_view_orig:true
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:1COND =>[Prio:1BaseCaseUnfold =>
                                               LHS: q_139::lseg<flted_5_137,p_136>@M
                                               RHS: q_144::lseg<flted_5_151,p_150>@M;Prio:1Match =>
         
          LHS: q_139::lseg<flted_5_137,p_136>@M
          RHS: q_144::lseg<flted_5_151,p_150>@M];
         Prio:1(Lemma <== lem_13) =>
                                     LHS: q_139::lseg<flted_5_137,p_136>@M
                                     RHS: q_144::lseg<flted_5_151,p_150>@M
         ]]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! sorted action:[(1): Prio:1SEARCH =>[
        Prio:1COND =>[Prio:1BaseCaseUnfold =>
                                              LHS: q_139::lseg<flted_5_137,p_136>@M
                                              RHS: q_144::lseg<flted_5_151,p_150>@M;Prio:1Match =>
        
         LHS: q_139::lseg<flted_5_137,p_136>@M
         RHS: q_144::lseg<flted_5_151,p_150>@M];
        Prio:1(Lemma <== lem_13) =>
                                    LHS: q_139::lseg<flted_5_137,p_136>@M
                                    RHS: q_144::lseg<flted_5_151,p_150>@M
        ]]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! estate: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: process_action :
 ### action =  BaseCaseUnfold =>
                   Type: Root
                   LHS: q_139::lseg<flted_5_137,p_136>@M
                   RHS: q_144::lseg<flted_5_151,p_150>@M
 lhs_rest: q_140::node<_,r>@M
 rhs_rest: emp
 ### estate =  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M
 ### conseq =  q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]


@12! M_base_case_unfold:
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: do_base_case_unfold attempt for :  q_139::lseg<flted_5_137,p_136>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@12! f:#DN# q_140::node<_,r>@M
@12! f:#DN# self_lem_13::node<v_138,q_139>@M
@12!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@12! ante-a0l:[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13]
@12! ante-a1l:[]
@12!:0: 0: ante: :[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13]
@12!:0: 0: coseq : : (flted_5_137=0 | p_136=q_139)
@12!:0: 0: h : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13
@12!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13
@12!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13
@12!:0: 0: ante 4: : m_142=flted_5_137+1 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144 & 
(((1<=flted_5_137 & q_139!=null & p_136!=q_139) | (p_136=q_139 & 
flted_5_137=0))) & q_140!=null & self_lem_13!=null & q_140!=self_lem_13
@12!:0: 0: IMP #123
@12!:0: 0: imply_timeout: ante:  self_lem_13!=null & q_140!=self_lem_13 & q_140!=null & n=1+m_142 & 
m_142=flted_5_137+1 & p_136=q_140 & q_139=q_144 & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0)))
@12!:0: 0: imply_timeout: conseq:  (flted_5_137=0 | p_136=q_139)
@12! Ann Vars:[]
@12! Inv: self_lem_13!=null & q_140!=self_lem_13 & q_140!=null & n=1+m_142 & 
m_142=flted_5_137+1 & p_136=q_140 & q_139=q_144 & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0)))
@12!:0: 0: res: :false
@12!:0: 0: res : :false
@12!:0: 0: asta5?
@12!:0: 0: IMP #13.0
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: do_base_case_unfold attempt : unsuccessful for :  q_139::lseg<flted_5_137,p_136>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: process_action :
 ### action =  Match =>
          Type: Root
          LHS: q_139::lseg<flted_5_137,p_136>@M
          RHS: q_144::lseg<flted_5_151,p_150>@M
 lhs_rest: q_140::node<_,r>@M
 rhs_rest: emp
 ### estate =  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M
 ### conseq =  q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]


@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! lhs_node: q_139::lseg<flted_5_137,p_136>@M
@12! lhs_rest: q_140::node<_,r>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! rhs_node: q_144::lseg<flted_5_151,p_150>@M
@12! rhs_rest: emp
@12! new_estate(M_match): es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! subst:[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: do_match: using  q_139::lseg<flted_5_137,p_136>@M to prove  q_144::lseg<flted_5_151,p_150>@M
@12!sh-rev.slk:5: 2: do_match: source LHS:  es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12!sh-rev.slk:5: 2: do_match: source RHS:  emp&{FLOW,(1,24)=__flow}[]
@12! add_to_lhs:[]
@12! add_to_rhs:[]
@12! Imm annotation mismatch (node lvl):false
@12! param_ann_lhs:[]
@12! param_ann_rhs:[]
@12! Imm annotation mismatch (field lvl):false
@12! l_args_ann:[]
@12! r_args_ann:[]
@12! view_param_ann_lhs:None
@12! view_param_ann_rhs:None
@12! Imm annotation mismatch (view param):false
@12! ann_lhs:None
@12! ann_rhs:None
@12! Imm annotation mismatch:false
@12! restore_hole_b:true
@12! l_h: q_140::node<_,r>@M
@12! estate: es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! r_h: emp
@12!  impl_vars: :[]
@12! other subs:[((flted_5_151,flted_5_137),?),((p_150,p_136),?)]
@12! other subs:[((flted_5_151,flted_5_137),?),((p_150,p_136),?)]
@12! ext_subst(bef filter out ann):[(flted_5_151,flted_5_137),(p_150,p_136)]
@12! to_rhs(bef ann): true
@12! to_lhs(bef ann): true
@12! ext_subst(bef ann):[(flted_5_151,flted_5_137),(p_150,p_136)]
@12! to_rhs: true
@12! to_lhs: true
@12! new_ante_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@12! new_conseq_p: true
@12! l_h: q_140::node<_,r>@M
@12! tmp_conseq: emp&{FLOW,(1,24)=__flow}[]
@12! r_ann:@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! consumed_h: q_139::lseg<flted_5_137,p_136>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! new_consumed: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@12! new_ante: q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & 
n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
@12! new_conseq: emp&{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! new_es: es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: do_match (after): LHS:  es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@12!sh-rev.slk:5: 2: do_match (after): RHS: emp&{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! ctx0.es_heap bef: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! ctx0.es_heap after: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@12! h1: q_140::node<_,r>@M
@12! h2: emp
@12! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@12! p2: true
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:r]
 es_trace:  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(1,24)=__flow}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: process_action :
 ### action =  (Lemma <== lem_13) =>
                       Type: Root
                       LHS: q_139::lseg<flted_5_137,p_136>@M
                       RHS: q_144::lseg<flted_5_151,p_150>@M
 lhs_rest: 
                       q_140::node<_,r>@M
 rhs_rest: emp
 ### estate =  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M
 ### conseq =  q_144::lseg<flted_5_151,p_150>@M&{FLOW,(1,24)=__flow}[]


@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: do_coercion: estate : q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M

@12!sh-rev.slk:5: 2: do_coercion: c1 = lseg, c2 = lseg

@12!do_right_coercion : c2 = lseg

@12!:0: 0: asta6?
@12!:0: 0: IMP #13
@12!:heap_entail_one_context
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@12! f:#DN# q_140::node<_,r>@M
@12!:0: 0: SAT #124
@12!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 (exists q_163,_,m_165: q_144::lseg<m_165,q_163>@M * q_163::node<_,p_150>@M&
flted_5_151=1+m_165&{FLOW,(21,22)=__norm})[]
@12!:heap_entail_conjunct_lhs
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M
 ### conseq =  (exists q_163,_,m_165: q_144::lseg<m_165,q_163>@M * q_163::node<_,p_150>@M&
flted_5_151=1+m_165&{FLOW,(21,22)=__norm})[]


@12! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@12! f:#DN# q_140::node<_,r>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@12! f:#DN# q_140::node<_,r>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! f:#VN# q_144::lseg<m_165,q_163>@M
@12! f:#DN# q_163::node<_,p_150>@M
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! f:#VN# q_144::lseg<m_165,q_163>@M
@12! f:#DN# q_163::node<_,p_150>@M
@12!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null
@12!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null
@12!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null
@12!:0: 0: IMP #126
@12!:0: 0: imply_timeout: ante:  q_140!=null & n=1+m_142 & m_142=flted_5_137+1 & q_140!=self_lem_13 & 
p_136=q_140 & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_139=q_144
@12!:0: 0: imply_timeout: conseq:  q_144!=null & ((2<=flted_5_151 | flted_5_151=1))
@12! Ann Vars:[]
@12! Inv: q_140!=null & n=1+m_142 & m_142=flted_5_137+1 & q_140!=self_lem_13 & 
p_136=q_140 & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_139=q_144
@12!:0: 0: res: :false
@12! lhs(orig): : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null
@12! rhs(orig): : exists(m_165:exists(q_163:(((1<=m_165 & q_144!=null & q_144!=q_163) | 
(q_144=q_163 & m_165=0))) & q_163!=null) & flted_5_151=1+m_165)
@12! lhs (after filter_ante): : q_140!=null & n=1+m_142 & m_142=flted_5_137+1 & q_140!=self_lem_13 & 
p_136=q_140 & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_139=q_144
@12! fml: : q_140!=null & n=1+m_142 & m_142=flted_5_137+1 & q_140!=self_lem_13 & 
p_136=q_140 & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_139=q_144 & 
exists(m_165:exists(q_163:(((1<=m_165 & q_144!=null & q_144!=q_163) | 
(q_144=q_163 & m_165=0))) & q_163!=null) & flted_5_151=1+m_165)
@12!:0: 0: SAT #127
@12!:0: 0:  q_140!=null & n=1+m_142 & m_142=flted_5_137+1 & q_140!=self_lem_13 & 
p_136=q_140 & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_139=q_144 & 
exists(m_165:exists(q_163:(((1<=m_165 & q_144!=null & q_144!=q_163) | 
(q_144=q_163 & m_165=0))) & q_163!=null) & flted_5_151=1+m_165)
@12! early contra detect:false
@12!sh-rev.slk:5: 2: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 (exists q_163,_,m_165: q_144::lseg<m_165,q_163>@M * q_163::node<_,p_150>@M&
flted_5_151=1+m_165&{FLOW,(21,22)=__norm})[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M&flted_5_151=1+m_168&
{FLOW,(21,22)=__norm}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! heap(helper): q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M
@12! pure(helper): flted_5_151=1+m_168
@12! BRANCH2:?
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! new_ctx: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! ctx0.es_heap bef: self_lem_13::node<v_138,q_139>@M
@13! ctx0.es_heap after: self_lem_13::node<v_138,q_139>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! h1: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! h2: q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M
@13! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@13! p2: true
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! estate.es_heap match_: self_lem_13::node<v_138,q_139>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! ctx0 match_: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! l:[(lhs_rest: q_140::node<_,r>@M,lhs_node: q_139::lseg<flted_5_137,p_136>@M,holes:[],match_type: Root)]
@13! vars:[n,p]
@13! args:[n,r]
@13! lmv: [(self,full,[lseg])]
@13! l:[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! r:[([ 
  Type: Root
  LHS: q_139::lseg<flted_5_137,p_136>@M
  RHS: q_144::lseg<m_168,q_166>@M
 lhs_rest: q_140::node<_,r>@M
 rhs_rest: 
  q_166::node<_,p_150>@M],?),([],?)]
@13! **** sel_hp_rel **********************
@13! hp_rel:[]
@13! sel_hp_rel:[]
@13! sel_post_hp_rel:[]
@13! force_match:true
@13! s_eq:true
@13! vl_b:false
@13! vr_b:true
@13! vl_view_orig:true
@13! vr_view_orig:false
@13! **** sel_hp_rel **********************
@13! hp_rel:[]
@13! sel_hp_rel:[]
@13! sel_post_hp_rel:[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: q_139::lseg<flted_5_137,p_136>@M
                        RHS: q_144::lseg<m_168,q_166>@M;
         Prio:1(Lemma <== lem_13) =>
                                     LHS: q_139::lseg<flted_5_137,p_136>@M
                                     RHS: q_144::lseg<m_168,q_166>@M
         ],
(2): Prio:-1COND =>[Prio:2UnmatchedRHSData =>  q_166::node<_,p_150>@M]]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! sorted action:[(1): Prio:0Match =>
                LHS: q_139::lseg<flted_5_137,p_136>@M
                RHS: q_144::lseg<m_168,q_166>@M,
(2): Prio:2COND =>[Prio:2UnmatchedRHSData =>  q_166::node<_,p_150>@M]]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! estate: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: process_action :
 ### action =  Match =>
          Type: Root
          LHS: q_139::lseg<flted_5_137,p_136>@M
          RHS: q_144::lseg<m_168,q_166>@M
 lhs_rest: q_140::node<_,r>@M
 rhs_rest: 
          q_166::node<_,p_150>@M
 ### estate =  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M
 ### conseq =  q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]


@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! lhs_node: q_139::lseg<flted_5_137,p_136>@M
@13! lhs_rest: q_140::node<_,r>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! rhs_node: q_144::lseg<m_168,q_166>@M
@13! rhs_rest: q_166::node<_,p_150>@M
@13! new_estate(M_match): es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! subst:[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: do_match: using  q_139::lseg<flted_5_137,p_136>@M to prove  q_144::lseg<m_168,q_166>@M
@13!sh-rev.slk:5: 2: do_match: source LHS:  es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13!sh-rev.slk:5: 2: do_match: source RHS:  q_166::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! add_to_lhs:[]
@13! add_to_rhs:[]
@13! Imm annotation mismatch (node lvl):false
@13! param_ann_lhs:[]
@13! param_ann_rhs:[]
@13! Imm annotation mismatch (field lvl):false
@13! l_args_ann:[]
@13! r_args_ann:[]
@13! view_param_ann_lhs:None
@13! view_param_ann_rhs:None
@13! Imm annotation mismatch (view param):false
@13! ann_lhs:None
@13! ann_rhs:None
@13! Imm annotation mismatch:false
@13! restore_hole_b:true
@13! l_h: q_140::node<_,r>@M
@13! estate: es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! r_h: q_166::node<_,p_150>@M
@13!  impl_vars: :[]
@13! other subs:[((m_168,flted_5_137),?),((q_166,p_136),?)]
@13! other subs:[((m_168,flted_5_137),?),((q_166,p_136),?)]
@13! ext_subst(bef filter out ann):[(m_168,flted_5_137),(q_166,p_136)]
@13! to_rhs(bef ann): true
@13! to_lhs(bef ann): true
@13! ext_subst(bef ann):[(m_168,flted_5_137),(q_166,p_136)]
@13! to_rhs: true
@13! to_lhs: true
@13! new_ante_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@13! new_conseq_p: true
@13! l_h: q_140::node<_,r>@M
@13! tmp_conseq: q_166::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! r_ann:@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! consumed_h: q_139::lseg<flted_5_137,p_136>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! new_consumed: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@13! new_ante: q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & 
n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
@13! new_conseq: p_136::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! new_es: es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: do_match (after): LHS:  es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13!sh-rev.slk:5: 2: do_match (after): RHS: p_136::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 p_136::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 p_136::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! ctx0.es_heap bef: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! ctx0.es_heap after: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@13! h1: q_140::node<_,r>@M
@13! h2: p_136::node<_,p_150>@M
@13! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@13! p2: true
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 p_136::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! estate.es_heap match_: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! ctx0 match_: es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 p_136::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]
@13! l:[(lhs_rest: emp,lhs_node: q_140::node<_,r>@M,holes:[],match_type: Root)]
@13! r:[([ 
  Type: Root
  LHS: q_140::node<_,r>@M
  RHS: p_136::node<_,p_150>@M
 lhs_rest: emp
 rhs_rest: emp],?)]
@13! **** sel_hp_rel **********************
@13! hp_rel:[]
@13! sel_hp_rel:[]
@13! sel_post_hp_rel:[]
@13! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: q_140::node<_,r>@M
                        RHS: p_136::node<_,p_150>@M
         ]]
@13! sorted action:[(1): Prio:0Match =>
                LHS: q_140::node<_,r>@M
                RHS: p_136::node<_,p_150>@M]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! estate: es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: process_action :
 ### action =  Match =>
          Type: Root
          LHS: q_140::node<_,r>@M
          RHS: p_136::node<_,p_150>@M
 lhs_rest: emp
 rhs_rest: emp
 ### estate =  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
  es_heap:q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 ### conseq =  p_136::node<_,p_150>@M&{FLOW,(21,22)=__norm}[]


@13! lhs_node: q_140::node<_,r>@M
@13! lhs_rest: emp
@13! rhs_node: p_136::node<_,p_150>@M
@13! rhs_rest: emp
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! new_estate(M_match): es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! subst:[]
@13!sh-rev.slk:5: 2: do_match: using  q_140::node<_,r>@M to prove  p_136::node<_,p_150>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: do_match: source LHS:  es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13!sh-rev.slk:5: 2: do_match: source RHS:  emp&{FLOW,(21,22)=__norm}[]
@13! add_to_lhs:[]
@13! add_to_rhs:[]
@13! Imm annotation mismatch (node lvl):false
@13! param_ann_lhs:[]
@13! param_ann_rhs:[]
@13! Imm annotation mismatch (field lvl):false
@13! l_args_ann:[]
@13! r_args_ann:[]
@13! view_param_ann_lhs:None
@13! view_param_ann_rhs:None
@13! Imm annotation mismatch (view param):false
@13! ann_lhs:None
@13! ann_rhs:None
@13! Imm annotation mismatch:false
@13! restore_hole_b:true
@13! l_h: emp
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! estate: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! r_h: emp
@13! new_l_args:[#,#]
@13! new_r_args:[#,#]
@13! new_l_holes:[0,1]
@13! new_r_holes:[0,1]
@13! rem_l_node: emp
@13! rem_r_node: emp
@13!  impl_vars: :[]
@13! other subs:[((Anon_167,Anon_141),?),((p_150,r),?)]
@13! other subs:[((Anon_167,Anon_141),?),((p_150,r),?)]
@13! ext_subst(bef filter out ann):[(Anon_167,Anon_141),(p_150,r)]
@13! to_rhs(bef ann): true
@13! to_lhs(bef ann): true
@13! ext_subst(bef ann):[(Anon_167,Anon_141),(p_150,r)]
@13! to_rhs: true
@13! to_lhs: true
@13! new_ante_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@13! new_conseq_p: true
@13! l_h: emp
@13! tmp_conseq: emp&{FLOW,(21,22)=__norm}[]
@13! r_ann:@M
@13! consumed_h: q_140::node<_,r>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! new_consumed: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@13! new_ante: emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
@13! new_conseq: emp&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! new_es: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: do_match (after): LHS:  es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13!sh-rev.slk:5: 2: do_match (after): RHS: emp&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! ctx0.es_heap bef: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! ctx0.es_heap after: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@13! h1: emp
@13! h2: emp
@13! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@13! p2: true
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@13! es_infer_vars_hp_rel :[]
@13! es_infer_vars :[]
@13! es_infer_vars_rel :[]
@13! es_infer_vars_sel_hp_rel :[]
@13! lhs_h: emp
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! estate_orig.es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! curr_lhs_h: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@13! lhs_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! curr_lhs_h0: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@13! f:#DN# q_140::node<_,r>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@13! f:#DN# self_lem_13::node<v_138,q_139>@M
@13! f:#DN# q_140::node<_,r>@M
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@13! f:#DN# self_lem_13::node<v_138,q_139>@M
@13! xpure_lhs_h1(bef merge): q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@13! xpure_lhs_h1: q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! es: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13!sh-rev.slk:5: 2: heap_entail_empty_heap: rhs:
 true
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! estate: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@13! m_lhs: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@13! tmp3: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & 
q_140!=self_lem_13
@13!sh-rev.slk:5: 2: rhs_p : : true
@13!sh-rev.slk:5: 2: conseq0 : : true
@13!sh-rev.slk:5: 2: conseq1 : : true
@13!sh-rev.slk:5: 2: >>>>>> entail_empty_heap: cp1 <<<<<<
@13!sh-rev.slk:5: 2: ante0 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & 0<=flted_5_137 & 
self_lem_13!=null & q_140!=self_lem_13
@13!sh-rev.slk:5: 2: ante1 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & 
q_140!=self_lem_13
@13!sh-rev.slk:5: 2: conseq : : true
@13!:0: 0: SAT #128
@13!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@13!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: formula is valid
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@13! l_inst: true
@13! p2: true
@13! move_impl(l_inst):[]
@13! move_impl(to_elim_evars):[q_166,Anon_167,m_168,p_150,flted_5_151,n,r]
@13! move_impl(inst_to_keep):[]
@13! move_impl(f): true
@13! move_impl(new_to_elim):[]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! es: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! new_es: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! new_ctx: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142]
                es_rhs_eqset: [r:r]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142]
                es_rhs_eqset: [r:r]
                es_subst (from): [_; p_150]
                es_subst (to): [_; r]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&
                 {FLOW,(21,22)=__norm}[]
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142]
                es_rhs_eqset: [r:r]
                es_subst (from): [_; p_150; m_168; q_166]
                es_subst (to): [_; r; flted_5_137; p_136]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! cl:[ es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! cl after subs:[ es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! cl after restore:[ es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@13! annot: 2
@13! annot: [0,0]
@13! p: 1
@13! i: 0
@13! i: 0
@13! p: 2
@13! i: 0
@13! i: 0
@13! view_args_pos: 2
@13! to_be_updated: 2
@13! hargs: 2
@14! new_conseq one_ctx_entail: emp&flted_5_151=1+flted_5_137&{FLOW,(21,22)=__norm}[]
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&flted_5_151=1+flted_5_137&{FLOW,(21,22)=__norm}[]
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&flted_5_151=1+flted_5_137&{FLOW,(21,22)=__norm}[]
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! ctx0.es_heap bef: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! ctx0.es_heap after: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@14! h1: emp
@14! h2: emp
@14! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@14! p2: flted_5_151=1+flted_5_137
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&flted_5_151=1+flted_5_137&{FLOW,(21,22)=__norm}[]
@14! es_infer_vars_hp_rel :[]
@14! es_infer_vars :[]
@14! es_infer_vars_rel :[]
@14! es_infer_vars_sel_hp_rel :[]
@14! lhs_h: emp
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! estate_orig.es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! curr_lhs_h: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@14! lhs_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! curr_lhs_h0: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@14! f:#DN# q_140::node<_,r>@M
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@14! f:#DN# self_lem_13::node<v_138,q_139>@M
@14! f:#DN# q_140::node<_,r>@M
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@14! f:#DN# self_lem_13::node<v_138,q_139>@M
@14! xpure_lhs_h1(bef merge): q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@14! xpure_lhs_h1: q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! es: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14!sh-rev.slk:5: 2: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@14!sh-rev.slk:5: 2: heap_entail_empty_heap: rhs:
 flted_5_151=1+flted_5_137
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! estate: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@14! m_lhs: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@14! tmp3: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & 
q_140!=self_lem_13
@14!sh-rev.slk:5: 2: rhs_p : : flted_5_151=1+flted_5_137
@14!sh-rev.slk:5: 2: conseq0 : : true
@14!sh-rev.slk:5: 2: conseq1 : : true
@14!sh-rev.slk:5: 2: >>>>>> entail_empty_heap: cp1 <<<<<<
@14!sh-rev.slk:5: 2: ante0 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & 0<=flted_5_137 & 
self_lem_13!=null & q_140!=self_lem_13
@14!sh-rev.slk:5: 2: ante1 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & 
q_140!=self_lem_13
@14!sh-rev.slk:5: 2: conseq : : true
@14!:0: 0: astaq?
@14!:0: 0: IMP #14
@14!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@14! ante-a0l:[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & 0<=flted_5_137 & 
self_lem_13!=null & q_140!=self_lem_13]
@14! ante-a1l:[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & 
q_140!=self_lem_13]
@14!:0: 0: ante: :[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & 0<=flted_5_137 & 
self_lem_13!=null & q_140!=self_lem_13]
@14!:0: 0: coseq : : true
@14!:0: 0: h : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & 0<=flted_5_137 & 
self_lem_13!=null & q_140!=self_lem_13
@14!:0: 0: res : :true
@14!:0: 0: ante: :[]
@14!:0: 0: coseq : : true
@14!:0: 0: SAT #129
@14!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@14!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: formula is valid
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@14! l_inst: true
@14! p2: flted_5_151=1+flted_5_137
@14! move_impl(l_inst):[]
@14! move_impl(to_elim_evars):[q_166,Anon_167,m_168,p_150,flted_5_151,n,r]
@14! move_impl(inst_to_keep):[]
@14! move_impl(f): true
@14! move_impl(new_to_elim):[]
@14! annot: 2
@14! annot: [0,0]
@14! p: 1
@14! i: 0
@14! i: 0
@14! p: 2
@14! i: 0
@14! i: 0
@14! view_args_pos: 2
@14! to_be_updated: 2
@14! hargs: 2
@14! new_ctx: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&
                 {FLOW,(21,22)=__norm}[]
                es_pure: flted_5_151=1+flted_5_137
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142; q_166; _; m_168; p_150; flted_5_151; 
                                n; r]
                es_rhs_eqset: [r:r]
                es_subst (from): [_; p_150; m_168; q_166]
                es_subst (to): [_; r; flted_5_137; p_136]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

one_ctx_entail@14@13@12@11
one_ctx_entail inp1 : emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]

one_ctx_entail inp2 : q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M&flted_5_151=1+m_168&
{FLOW,(21,22)=__norm}[]
one_ctx_entail inp3 : flted_5_151=1+m_168
one_ctx_entail@14 EXIT: 1[
   emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
   ]

heap_n_pure_entail#1@13@12@11
heap_n_pure_entail#1 inp1 : es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & 
  q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_150:r]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : q_144::lseg<m_168,q_166>@M * q_166::node<_,p_150>@M
heap_n_pure_entail#1 inp3 : flted_5_151=1+m_168
heap_n_pure_entail#1@13 EXIT:OK

@12! f(b4 elim_exists_es_his): emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
@12! new_his(after elim_exists_es_his):[]
@12! f(after elim_exists_es_his): emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&
                 {FLOW,(21,22)=__norm}[]
                es_pure: flted_5_151=1+flted_5_137
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142; q_166; _; m_168; p_150; flted_5_151; 
                                n; r]
                es_rhs_eqset: [r:r]
                es_subst (from): [_; p_150; m_168; q_166]
                es_subst (to): [_; r; flted_5_137; p_136]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&
                 {FLOW,(21,22)=__norm}[]
                es_pure: flted_5_151=1+flted_5_137
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142; q_166; _; m_168; p_150; flted_5_151; 
                                n; r]
                es_rhs_eqset: [r:r]
                es_subst (from): [_; p_150; m_168; q_166]
                es_subst (to): [_; r; flted_5_137; p_136]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! cl:[ es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! cl after subs:[ es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! cl after restore:[ es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@12! annot: 2
@12! annot: [0,0]
@12! p: 1
@12! i: 0
@12! i: 0
@12! p: 2
@12! i: 0
@12! i: 0
@12! view_args_pos: 2
@12! to_be_updated: 2
@12! hargs: 2
@15! new_conseq one_ctx_entail: emp&n=flted_5_151+1 & r!=self_lem_13 & r=r&{FLOW,(1,24)=__flow}[]
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&n=flted_5_151+1 & r!=self_lem_13 & r=r&{FLOW,(1,24)=__flow}[]
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&n=flted_5_151+1 & r!=self_lem_13 & r=r&{FLOW,(1,24)=__flow}[]
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! ctx0.es_heap bef: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! ctx0.es_heap after: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@15! h1: emp
@15! h2: emp
@15! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@15! p2: n=flted_5_151+1 & r!=self_lem_13 & r=r
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&n=flted_5_151+1 & r!=self_lem_13 & r=r&{FLOW,(1,24)=__flow}[]
@15! es_infer_vars_hp_rel :[]
@15! es_infer_vars :[]
@15! es_infer_vars_rel :[]
@15! es_infer_vars_sel_hp_rel :[]
@15! lhs_h: emp
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! estate_orig.es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! curr_lhs_h: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@15! lhs_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! curr_lhs_h0: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@15! f:#DN# q_140::node<_,r>@M
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@15! f:#DN# self_lem_13::node<v_138,q_139>@M
@15! f:#DN# q_140::node<_,r>@M
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@15! f:#DN# self_lem_13::node<v_138,q_139>@M
@15! xpure_lhs_h1(bef merge): q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@15! xpure_lhs_h1: q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! es: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15!sh-rev.slk:5: 2: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@15!sh-rev.slk:5: 2: heap_entail_empty_heap: rhs:
 n=flted_5_151+1 & r!=self_lem_13 & r=r
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! estate: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@15! m_lhs: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@15! tmp3: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & 
q_140!=self_lem_13
@15!sh-rev.slk:5: 2: rhs_p : : n=flted_5_151+1 & r!=self_lem_13 & r=r
@15!sh-rev.slk:5: 2: conseq0 : : true
@15!sh-rev.slk:5: 2: conseq1 : : true
@15!sh-rev.slk:5: 2: >>>>>> entail_empty_heap: cp1 <<<<<<
@15!sh-rev.slk:5: 2: ante0 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & 0<=flted_5_137 & 
self_lem_13!=null & q_140!=self_lem_13
@15!sh-rev.slk:5: 2: ante1 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & 
q_140!=self_lem_13
@15!sh-rev.slk:5: 2: conseq : : true
@15!:0: 0: astaq?
@15!:0: 0: IMP #15
@15!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@15! ante-a0l:[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & 0<=flted_5_137 & 
self_lem_13!=null & q_140!=self_lem_13]
@15! ante-a1l:[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & 
q_140!=self_lem_13]
@15!:0: 0: ante: :[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & 0<=flted_5_137 & 
self_lem_13!=null & q_140!=self_lem_13]
@15!:0: 0: coseq : : true
@15!:0: 0: h : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & q_140!=null & 0<=flted_5_137 & 
self_lem_13!=null & q_140!=self_lem_13
@15!:0: 0: res : :true
@15!:0: 0: ante: :[]
@15!:0: 0: coseq : : true
@15!:0: 0: SAT #134
@15!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144
@15!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: formula is valid
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15!sh-rev.slk:5: 2: heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: n=flted_5_151+1 & r!=self_lem_13 & r=r & flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@15! l_inst: true
@15! p2: n=flted_5_151+1 & r!=self_lem_13 & r=r
@15! move_impl(l_inst):[]
@15! move_impl(to_elim_evars):[q_166,Anon_167,m_168,p_150,flted_5_151,n,r]
@15! move_impl(inst_to_keep):[]
@15! move_impl(f): true
@15! move_impl(new_to_elim):[]
@15! annot: 2
@15! annot: [0,0]
@15! p: 1
@15! i: 0
@15! i: 0
@15! p: 2
@15! i: 0
@15! i: 0
@15! view_args_pos: 2
@15! to_be_updated: 2
@15! hargs: 2
@15! new_ctx: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&
                 {FLOW,(21,22)=__norm}[]
                es_pure: n=flted_5_151+1 & r!=self_lem_13 & r=r & 
                          flted_5_151=1+flted_5_137
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142; q_166; _; m_168; p_150; flted_5_151; 
                                n; r; q_166; _; m_168; p_150; flted_5_151; 
                                n; r]
                es_rhs_eqset: [r:r]
                es_subst (from): [_; p_150; m_168; q_166]
                es_subst (to): [_; r; flted_5_137; p_136]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

one_ctx_entail@15@12@11
one_ctx_entail inp1 : emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r]

one_ctx_entail inp2 : self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M&
n=flted_5_151+1 & r!=self_lem_13 & p_150=r&{FLOW,(1,24)=__flow}[]
one_ctx_entail inp3 : n=flted_5_151+1 & r!=self_lem_13 & p_150=r
one_ctx_entail@15 EXIT: 1[
   emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
   ]

heap_n_pure_entail#1@12@11
heap_n_pure_entail#1 inp1 : es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_143; q_144]
 es_rhs_eqset: [p_150:r]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : self_lem_13::node<v_143,q_144>@M * q_144::lseg<flted_5_151,p_150>@M
heap_n_pure_entail#1 inp3 : n=flted_5_151+1 & r!=self_lem_13 & p_150=r
heap_n_pure_entail#1@12 EXIT:OK

@11! f(b4 elim_exists_es_his): emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
@11! new_his(after elim_exists_es_his):[]
@11! f(after elim_exists_es_his): emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: fold: process_one: rs1:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: n=flted_5_151+1 & r!=self_lem_13 & r=r & flted_5_151=1+flted_5_137
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_evars: [q_166; _; m_168; p_150; flted_5_151; n; r]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r; q_166; _; m_168; p_150; 
                 flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: fold: context at beginning of fold: self_lem_13
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: fold: context at end of fold: self_lem_13
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: r=r & r!=self_lem_13 & n=1+flted_5_137+1
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r; q_166; _; m_168; p_150; 
                 flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@11!:0: 0: fold: es.es_pure:  n=flted_5_151+1 & r!=self_lem_13 & r=r & flted_5_151=1+flted_5_137
@11!:0: 0: split_universal: to_ante(after split):  r=r & r!=self_lem_13 & n=1+flted_5_137+1
@11!:0: 0: split_universal: to_ante(find_rel_constraint):  r=r & r!=self_lem_13 & n=1+flted_5_137+1
@11!:0: 0: split_universal: to_ante(aft wrapp):  r=r & r!=self_lem_13 & n=1+flted_5_137+1
@11!:0: 0: split_universal: evars: 
@11!:0: 0: split_universal: expl_inst_vars: 
@11!:0: 0: split_universal: vvars: n, r
@11!:0: 0: split_universal: to_ante:  r=r & r!=self_lem_13 & n=1+flted_5_137+1
@11!:0: 0: split_universal: to_conseq:  true
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: process_fold_result: old_ctx before folding: self_lem_13
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144&{FLOW,(21,22)=__norm}[]
 es_pure: r=r & r!=self_lem_13 & n=1+flted_5_137+1
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142; q_166; 
                 _; m_168; p_150; flted_5_151; n; r; q_166; _; m_168; p_150; 
                 flted_5_151; n; r]
 es_rhs_eqset: [r:r]
 es_subst (from): [_; p_150; m_168; q_166]
 es_subst (to): [_; r; flted_5_137; p_136]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: process_fold_result: new_ctx after folding: self_lem_13
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@11!:0: 0: process_fold_result: vs2: n, r
@11!:0: 0: process_fold_result: to_ante:  r=r & r!=self_lem_13 & n=1+flted_5_137+1
@11!:0: 0: process_fold_result: to_conseq:  true
@11!:0: 0: process_fold_result: new_conseq:
 emp&{FLOW,(21,22)=__norm}[]
@11!:heap_entail_one_context
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@11!:heap_entail_conjunct_lhs
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&{FLOW,(21,22)=__norm}[]
  es_heap:q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 ### conseq =  emp&{FLOW,(21,22)=__norm}[]


@11! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@11! early contra detect:false
@11!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@11! heap(helper): emp
@11! pure(helper): true
@11! BRANCH1:?
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! ctx0.es_heap bef: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! ctx0.es_heap after: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@11! h1: emp
@11! h2: emp
@11! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1
@11! p2: true
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@11! es_infer_vars_hp_rel :[]
@11! es_infer_vars :[]
@11! es_infer_vars_rel :[]
@11! es_infer_vars_sel_hp_rel :[]
@11! lhs_h: emp
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! estate_orig.es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! curr_lhs_h: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@11! lhs_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! curr_lhs_h0: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@11! f:#DN# q_140::node<_,r>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! f:#DN# q_140::node<_,r>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! xpure_lhs_h1(bef merge): q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@11! xpure_lhs_h1: q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! es: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@11!:0: 0: heap_entail_empty_heap: rhs:
 true
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! estate: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@11! m_lhs: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1
@11! tmp3: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1 & 
q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@11!:0: 0: rhs_p : : true
@11!:0: 0: conseq0 : : true
@11!:0: 0: conseq1 : : true
@11!:0: 0: >>>>>> entail_empty_heap: cp1 <<<<<<
@11!:0: 0: ante0 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1 & 
q_140!=null & 0<=flted_5_137 & self_lem_13!=null & q_140!=self_lem_13
@11!:0: 0: ante1 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1 & 
q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@11!:0: 0: conseq : : true
@11!:0: 0: SAT #135
@11!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1
@11!:0: 0: heap_entail_empty_heap: formula is valid
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_empty_heap: res_ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@11! l_inst: true
@11! p2: true
@11! move_impl(l_inst):[]
@11! move_impl(to_elim_evars):[]
@11! move_impl(inst_to_keep):[]
@11! move_impl(f): true
@11! move_impl(new_to_elim):[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! new_ctx: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144 & r=r & 
                 r!=self_lem_13 & n=1+flted_5_137+1&{FLOW,(21,22)=__norm}[]
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: process_fold_result: context at end fold: self_lem_13
 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144 & r=r & 
                 r!=self_lem_13 & n=1+flted_5_137+1&{FLOW,(21,22)=__norm}[]
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: process_action :
 ### action =  RD_Lemma =>
             Type: Root
             LHS: self_lem_13::node<v_138,q_139>@M
             RHS: self_lem_13::lseg<n,r>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
             q_140::node<_,r>@M
 rhs_rest: emp
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]


@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: do_coercion: estate : self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp

@11!:0: 0: do_coercion: c1 = node, c2 = lseg

@11!do_right_coercion : c2 = lseg

@11!:0: 0: asta6?
@11!:0: 0: IMP #17
@11!:heap_entail_one_context
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11!:0: 0: SAT #136
@11!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 (exists q_198,_,m_200: self_lem_13::lseg<m_200,q_198>@M * 
q_198::node<_,r>@M&n=1+m_200&{FLOW,(21,22)=__norm})[]
@11!:heap_entail_conjunct_lhs
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  (exists q_198,_,m_200: self_lem_13::lseg<m_200,q_198>@M * 
q_198::node<_,r>@M&n=1+m_200&{FLOW,(21,22)=__norm})[]


@11! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11! f:#DN# self_lem_13::node<v_138,q_139>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@11! f:#DN# q_140::node<_,r>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# self_lem_13::lseg<m_200,q_198>@M
@11! f:#DN# q_198::node<_,r>@M
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! f:#VN# self_lem_13::lseg<m_200,q_198>@M
@11! f:#DN# q_198::node<_,r>@M
@11!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11!:0: 0: IMP #138
@11!:0: 0: imply_timeout: ante:  q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & p_136=q_140 & m_142=flted_5_137+1 & 
q_140!=self_lem_13 & n=1+m_142 & self_lem_13!=null
@11!:0: 0: imply_timeout: conseq:  self_lem_13!=null & ((2<=n | n=1))
@11! Ann Vars:[]
@11! Inv: q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & p_136=q_140 & m_142=flted_5_137+1 & 
q_140!=self_lem_13 & n=1+m_142 & self_lem_13!=null
@11!:0: 0: res: :true
@11! lhs(orig): : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@11! rhs(orig): : true
@11! lhs (after filter_ante): : true
@11! fml: : true
@11! early contra detect:false
@11!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 (exists q_198,_,m_200: self_lem_13::lseg<m_200,q_198>@M * 
q_198::node<_,r>@M&n=1+m_200&{FLOW,(21,22)=__norm})[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M&n=1+m_203&
{FLOW,(21,22)=__norm}[]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! heap(helper): self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M
@11! pure(helper): n=1+m_203
@11! BRANCH2:?
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! new_ctx: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@16! ctx0.es_heap bef: emp
@16! ctx0.es_heap after: emp
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! h1: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
q_140::node<_,r>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! h2: self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M
@16! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142
@16! p2: true
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@16! estate.es_heap match_: emp
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! ctx0 match_: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M&
{FLOW,(21,22)=__norm}[]
@16! vars:[n,p]
@16! args:[n,r]
@16! lmv: [(self,full,[lseg])]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! l:[(lhs_rest: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M,lhs_node: self_lem_13::node<v_138,q_139>@M,holes:[],match_type: Root)]
@16! vars:[n,p]
@16! args:[n,r]
@16! lmv: [(self,full,[lseg])]
@16! l:[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! r:[([ 
  Type: Root
  LHS: self_lem_13::node<v_138,q_139>@M
  RHS: self_lem_13::lseg<m_203,q_201>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M
 rhs_rest: q_201::node<_,r>@M],?),([],?)]
@16! **** sel_hp_rel **********************
@16! hp_rel:[]
@16! sel_hp_rel:[]
@16! sel_post_hp_rel:[]
@16! cyclic:add_checkpoint:fold
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! **** sel_hp_rel **********************
@16! hp_rel:[]
@16! sel_hp_rel:[]
@16! sel_post_hp_rel:[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:1Fold =>
                       LHS: self_lem_13::node<v_138,q_139>@M
                       RHS: self_lem_13::lseg<m_203,q_201>@M
         ],
(2): Prio:-1COND =>[Prio:2UnmatchedRHSData =>  q_201::node<_,r>@M]]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! sorted action:[(1): Prio:1SEARCH =>[
        Prio:1Fold =>
                      LHS: self_lem_13::node<v_138,q_139>@M
                      RHS: self_lem_13::lseg<m_203,q_201>@M
        ],
(2): Prio:2COND =>[Prio:2UnmatchedRHSData =>  q_201::node<_,r>@M]]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! estate: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: process_action :
 ### action =  Fold =>
         Type: Root
         LHS: self_lem_13::node<v_138,q_139>@M
         RHS: self_lem_13::lseg<m_203,q_201>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
         q_140::node<_,r>@M
 rhs_rest: q_201::node<_,r>@M
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M&
{FLOW,(21,22)=__norm}[]


@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: do_fold: anns:[@M,@M]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: do_fold: LHS ctx: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_heap: emp
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]

@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: do_fold: RHS view:  self_lem_13::lseg<m_203,q_201>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: do_fold: view_form:  :EBase {1}->emp&q_201=self_lem_13 & m_203=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_204; q_205](ex)[]{2}->(exists p_206,
          flted_5_207: self_lem_13::node<v_204,q_205>@M * 
          q_205::lseg<flted_5_207,p_206>@M&m_203=flted_5_207+1 & 
          q_201!=self_lem_13 & p_206=q_201&{FLOW,(1,24)=__flow})[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_one_context_struc:
ctx:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 :EBase {1}->emp&q_201=self_lem_13 & m_203=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_204; q_205](ex)[]{2}->(exists p_206,
          flted_5_207: self_lem_13::node<v_204,q_205>@M * 
          q_205::lseg<flted_5_207,p_206>@M&m_203=flted_5_207+1 & 
          q_201!=self_lem_13 & p_206=q_201&{FLOW,(1,24)=__flow})[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! es(1): self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
tid:None
delayed_f:None
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 :EBase {1}->emp&q_201=self_lem_13 & m_203=0&{FLOW,(1,24)=__flow}[]
|| :EBase exists (Expl)[](Impl)[v_204; q_205](ex)[]{2}->(exists p_206,
          flted_5_207: self_lem_13::node<v_204,q_205>@M * 
          q_205::lseg<flted_5_207,p_206>@M&m_203=flted_5_207+1 & 
          q_201!=self_lem_13 & p_206=q_201&{FLOW,(1,24)=__flow})[]
@16! fs:[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! es(2): self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! es(3): self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
@16!:heap_entail_one_context
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16!:0: 0: SAT #139
@16!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_201=self_lem_13 & m_203=0&{FLOW,(1,24)=__flow}[]
@16!:heap_entail_conjunct_lhs
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  {1}->emp&q_201=self_lem_13 & m_203=0&{FLOW,(1,24)=__flow}[]


@16! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: IMP #140
@16!:0: 0: imply_timeout: ante:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@16!:0: 0: imply_timeout: conseq:  q_201=self_lem_13
@16!:0: 0: res: :false
@16!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: IMP #141
@16!:0: 0: imply_timeout: ante:  true
@16!:0: 0: imply_timeout: conseq:  m_203=0
@16!:0: 0: res: :false
@16! lhs(orig): : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16! rhs(orig): : q_201=self_lem_13 & m_203=0
@16! lhs (after filter_ante): : n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@16! fml: : n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null & q_201=self_lem_13 & 
m_203=0
@16!:0: 0: SAT #142
@16!:0: 0:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null & q_201=self_lem_13 & 
m_203=0
@16! early contra detect:false
@16!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_201=self_lem_13 & m_203=0&{FLOW,(1,24)=__flow}[]
@16! heap(helper): emp
@16! pure(helper): q_201=self_lem_13 & m_203=0
@16! BRANCH1:?
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_201=self_lem_13 & m_203=0&{FLOW,(1,24)=__flow}[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_201=self_lem_13 & m_203=0&{FLOW,(1,24)=__flow}[]
@16! ctx0.es_heap bef: emp
@16! ctx0.es_heap after: emp
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! h1: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
q_140::node<_,r>@M
@16! h2: emp
@16! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142
@16! p2: q_201=self_lem_13 & m_203=0
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {1}->emp&q_201=self_lem_13 & m_203=0&{FLOW,(1,24)=__flow}[]
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! f:#DN# q_140::node<_,r>@M
@16!:0: 0: SAT #143
@16!:0: 0:  p_136=q_139 & flted_5_137=0 & m_142=flted_5_137+1 & q_140!=self_lem_13 & 
p_136=q_140 & n=1+m_142 & self_lem_13!=null & q_140!=null & 
q_140!=self_lem_13
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! f:#DN# q_139::node<v_228,q_229>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_229::lseg<flted_5_227,p_226>@M
@16! f:#DN# q_140::node<_,r>@M
@16!:0: 0: SAT #144
@16!:0: 0:  flted_5_137=flted_5_227+1 & p_136!=q_139 & p_136=p_226 & m_142=flted_5_137+
1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & self_lem_13!=null & 
q_139!=null & (((1<=flted_5_227 & q_229!=null & p_226!=q_229) | 
(p_226=q_229 & flted_5_227=0))) & q_140!=null & q_140!=self_lem_13 & 
q_139!=self_lem_13 & q_139!=q_140
@16! es_infer_vars_hp_rel :[]
@16! es_infer_vars :[]
@16! es_infer_vars_rel :[]
@16! es_infer_vars_sel_hp_rel :[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! lhs_h: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
q_140::node<_,r>@M
@16! estate_orig.es_heap: emp
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! curr_lhs_h: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
q_140::node<_,r>@M
@16! lhs_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! curr_lhs_h0: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
q_140::node<_,r>@M
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16! xpure_lhs_h1(bef merge): self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@16! xpure_lhs_h1: self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! es: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_empty_heap: ctx:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@16!:0: 0: heap_entail_empty_heap: rhs:
 q_201=self_lem_13 & m_203=0
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! estate: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@16! m_lhs: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142
@16! tmp3: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@16!:0: 0: rhs_p : : q_201=self_lem_13 & m_203=0
@16!:0: 0: conseq0 : : true
@16!:0: 0: conseq1 : : true
@16!:0: 0: >>>>>> entail_empty_heap: cp1 <<<<<<
@16!:0: 0: ante0 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & 0<=flted_5_137 & q_140!=null & q_140!=self_lem_13
@16!:0: 0: ante1 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@16!:0: 0: conseq : : true
@16!:0: 0: astaq?
@16!:0: 0: IMP #17
@16!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@16! ante-a0l:[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & 0<=flted_5_137 & q_140!=null & q_140!=self_lem_13]
@16! ante-a1l:[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13]
@16!:0: 0: ante: :[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & 0<=flted_5_137 & q_140!=null & q_140!=self_lem_13]
@16!:0: 0: coseq : : true
@16!:0: 0: h : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & 0<=flted_5_137 & q_140!=null & q_140!=self_lem_13
@16!:0: 0: res : :true
@16!:0: 0: ante: :[]
@16!:0: 0: coseq : : true
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16!:0: 0: SAT #145
@16!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@16!:0: 0: heap_entail_empty_heap: folding: formula is valid
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_empty_heap: folding: res_ctx:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_pure: q_201=self_lem_13 & m_203=0
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@16! l_inst: true
@16! p2: q_201=self_lem_13 & m_203=0
@16! move_impl(l_inst):[]
@16! move_impl(to_elim_evars):[q_201,Anon_202,m_203]
@16! move_impl(inst_to_keep):[]
@16! move_impl(f): true
@16! move_impl(new_to_elim):[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! es: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_pure: q_201=self_lem_13 & m_203=0
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! new_es: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_pure: q_201=self_lem_13 & m_203=0
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! new_ctx: 
Good Context: 1[es_formula: 
                 self_lem_13::node<v_138,q_139>@M * 
                 q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&
                 m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & 
                 n=1+m_142&{FLOW,(21,22)=__norm}[]
                es_pure: q_201=self_lem_13 & m_203=0
                es_evars: [q_201; _; m_203]
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142]
                es_rhs_eqset: [self_lem_13:q_201]
                es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
                es_infer_vars_rel: []]

@16!:heap_entail_one_context
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16!:0: 0: SAT #146
@16!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {2}->(exists p_206,flted_5_207: self_lem_13::node<v_204,q_205>@M * 
q_205::lseg<flted_5_207,p_206>@M&m_203=flted_5_207+1 & q_201!=self_lem_13 & 
p_206=q_201&{FLOW,(1,24)=__flow})[]
@16!:heap_entail_conjunct_lhs
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  {2}->(exists p_206,flted_5_207: self_lem_13::node<v_204,q_205>@M * 
q_205::lseg<flted_5_207,p_206>@M&m_203=flted_5_207+1 & q_201!=self_lem_13 & 
p_206=q_201&{FLOW,(1,24)=__flow})[]


@16! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16! f:#DN# self_lem_13::node<v_204,q_205>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_205::lseg<flted_5_207,p_206>@M
@16! f:#DN# self_lem_13::node<v_204,q_205>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_205::lseg<flted_5_207,p_206>@M
@16!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: IMP #148
@16!:0: 0: imply_timeout: ante:  true
@16!:0: 0: imply_timeout: conseq:  ((q_201!=q_205 & q_205!=null & 2<=m_203) | (q_201=q_205 & m_203=1))
@16!:0: 0: res: :false
@16!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: IMP #149
@16!:0: 0: imply_timeout: ante:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@16!:0: 0: imply_timeout: conseq:  q_201!=self_lem_13
@16!:0: 0: res: :false
@16!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: IMP #150
@16!:0: 0: imply_timeout: ante:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@16!:0: 0: imply_timeout: conseq:  self_lem_13!=null
@16!:0: 0: res: :true
@16! lhs(orig): : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16! rhs(orig): : exists(flted_5_207:exists(p_206:p_206=q_201 & (((1<=flted_5_207 & 
q_205!=null & p_206!=q_205) | (p_206=q_205 & flted_5_207=0)))) & 
m_203=flted_5_207+1) & q_201!=self_lem_13
@16! lhs (after filter_ante): : n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@16! fml: : n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null & 
exists(flted_5_207:exists(p_206:p_206=q_201 & (((1<=flted_5_207 & 
q_205!=null & p_206!=q_205) | (p_206=q_205 & flted_5_207=0)))) & 
m_203=flted_5_207+1) & q_201!=self_lem_13
@16!:0: 0: SAT #151
@16!:0: 0:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null & 
exists(flted_5_207:(((1<=flted_5_207 & q_205!=null & q_201!=q_205) | 
(q_201=q_205 & flted_5_207=0))) & m_203=flted_5_207+1) & q_201!=self_lem_13
@16! early contra detect:false
@16!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 {2}->(exists p_206,flted_5_207: self_lem_13::node<v_204,q_205>@M * 
q_205::lseg<flted_5_207,p_206>@M&m_203=flted_5_207+1 & q_201!=self_lem_13 & 
p_206=q_201&{FLOW,(1,24)=__flow})[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!sh-rev.slk:5: 2: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M&
m_203=flted_5_231+1 & q_201!=self_lem_13 & p_230=q_201&{FLOW,(1,24)=__flow}[]
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! heap(helper): self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M
@16! pure(helper): m_203=flted_5_231+1 & q_201!=self_lem_13 & p_230=q_201
@16! BRANCH2:?
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M&
{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! new_ctx: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M&
{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M&
{FLOW,(1,24)=__flow}[]
@17! ctx0.es_heap bef: emp
@17! ctx0.es_heap after: emp
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! h1: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
q_140::node<_,r>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! h2: self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M
@17! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142
@17! p2: true
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M&
{FLOW,(1,24)=__flow}[]
@17! estate.es_heap match_: emp
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! ctx0 match_: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M&
{FLOW,(1,24)=__flow}[]
@17! vars:[n,p]
@17! args:[n,r]
@17! lmv: [(self,full,[lseg])]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! l:[(lhs_rest: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M,lhs_node: self_lem_13::node<v_138,q_139>@M,holes:[],match_type: Root)]
@17! vars:[n,p]
@17! args:[n,r]
@17! lmv: [(self,full,[lseg])]
@17! l:[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! r:[([ 
  Type: Root
  LHS: self_lem_13::node<v_138,q_139>@M
  RHS: self_lem_13::node<v_204,q_205>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M
 rhs_rest: q_205::lseg<flted_5_231,p_230>@M],?),([],?)]
@17! **** sel_hp_rel **********************
@17! hp_rel:[]
@17! sel_hp_rel:[]
@17! sel_post_hp_rel:[]
@17! **** sel_hp_rel **********************
@17! hp_rel:[]
@17! sel_hp_rel:[]
@17! sel_post_hp_rel:[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: self_lem_13::node<v_138,q_139>@M
                        RHS: self_lem_13::node<v_204,q_205>@M
         ],
(2): Prio:-1COND =>[Prio:2BaseCaseFold =>
                                      LHS: emp
                                      RHS: q_205::lseg<flted_5_231,p_230>@M;Prio:2UnmatchedRHSData =>  q_205::lseg<flted_5_231,p_230>@M]]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! sorted action:[(1): Prio:0Match =>
                LHS: self_lem_13::node<v_138,q_139>@M
                RHS: self_lem_13::node<v_204,q_205>@M,
(2): Prio:2COND =>[Prio:2BaseCaseFold =>
                                     LHS: emp
                                     RHS: q_205::lseg<flted_5_231,p_230>@M;Prio:2UnmatchedRHSData =>  q_205::lseg<flted_5_231,p_230>@M]]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! estate: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: process_action :
 ### action =  Match =>
          Type: Root
          LHS: self_lem_13::node<v_138,q_139>@M
          RHS: self_lem_13::node<v_204,q_205>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
          q_140::node<_,r>@M
 rhs_rest: q_205::lseg<flted_5_231,p_230>@M
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M&
{FLOW,(1,24)=__flow}[]


@17! lhs_node: self_lem_13::node<v_138,q_139>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! lhs_rest: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@17! rhs_node: self_lem_13::node<v_204,q_205>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! rhs_rest: q_205::lseg<flted_5_231,p_230>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! new_estate(M_match): es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! subst:[]
@17!sh-rev.slk:5: 2: do_match: using  self_lem_13::node<v_138,q_139>@M to prove  self_lem_13::node<v_204,q_205>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: do_match: source LHS:  es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: do_match: source RHS:  q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]
@17! add_to_lhs:[]
@17! add_to_rhs:[]
@17! Imm annotation mismatch (node lvl):false
@17! param_ann_lhs:[]
@17! param_ann_rhs:[]
@17! Imm annotation mismatch (field lvl):false
@17! l_args_ann:[]
@17! r_args_ann:[]
@17! view_param_ann_lhs:None
@17! view_param_ann_rhs:None
@17! Imm annotation mismatch (view param):false
@17! ann_lhs:None
@17! ann_rhs:None
@17! Imm annotation mismatch:false
@17! restore_hole_b:true
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! l_h: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! estate: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! r_h: q_205::lseg<flted_5_231,p_230>@M
@17! new_l_args:[#,#]
@17! new_r_args:[#,#]
@17! new_l_holes:[0,1]
@17! new_r_holes:[0,1]
@17! rem_l_node: emp
@17! rem_r_node: emp
@17!  impl_vars: :[v_204,q_205]
@17! other subs:[((v_204,v_138),?),((q_205,q_139),?)]
@17! other subs:[((v_204,v_138),?),((q_205,q_139),?)]
@17! ext_subst(bef filter out ann):[]
@17! to_rhs(bef ann): true
@17! to_lhs(bef ann): v_138=v_204 & q_139=q_205
@17! ext_subst(bef ann):[]
@17! to_rhs: true
@17! to_lhs: v_138=v_204 & q_139=q_205
@17! new_ante_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_204 & q_139=q_205
@17! new_conseq_p: true
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! l_h: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! tmp_conseq: q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]
@17! r_ann:@M
@17! consumed_h: self_lem_13::node<v_138,q_139>@M
@17! new_consumed: self_lem_13::node<v_138,q_139>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! new_ante: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & 
q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&
{FLOW,(21,22)=__norm}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! new_conseq: q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! new_es: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & 
  q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: do_match (after): LHS:  es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & 
  q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: do_match (after): RHS: q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & 
  q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & 
  q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]
@17! ctx0.es_heap bef: self_lem_13::node<v_138,q_139>@M
@17! ctx0.es_heap after: self_lem_13::node<v_138,q_139>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! h1: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! h2: q_205::lseg<flted_5_231,p_230>@M
@17! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_204 & q_139=q_205
@17! p2: true
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & 
  q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]
@17! estate.es_heap match_: self_lem_13::node<v_138,q_139>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! ctx0 match_: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & 
  q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & 
  q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! l:[(lhs_rest: q_140::node<_,r>@M,lhs_node: q_139::lseg<flted_5_137,p_136>@M,holes:[],match_type: Root)]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! r:[([ 
  Type: Root
  LHS: q_139::lseg<flted_5_137,p_136>@M
  RHS: q_205::lseg<flted_5_231,p_230>@M
 lhs_rest: q_140::node<_,r>@M
 rhs_rest: emp],?)]
@17! **** sel_hp_rel **********************
@17! hp_rel:[]
@17! sel_hp_rel:[]
@17! sel_post_hp_rel:[]
@17! force_match:false
@17! s_eq:true
@17! vl_b:false
@17! vr_b:true
@17! vl_view_orig:true
@17! vr_view_orig:true
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:1COND =>[Prio:1BaseCaseUnfold =>
                                               LHS: q_139::lseg<flted_5_137,p_136>@M
                                               RHS: q_205::lseg<flted_5_231,p_230>@M;Prio:1Match =>
         
          LHS: q_139::lseg<flted_5_137,p_136>@M
          RHS: q_205::lseg<flted_5_231,p_230>@M];
         Prio:1(Lemma <== lem_13) =>
                                     LHS: q_139::lseg<flted_5_137,p_136>@M
                                     RHS: q_205::lseg<flted_5_231,p_230>@M
         ]]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! sorted action:[(1): Prio:1SEARCH =>[
        Prio:1COND =>[Prio:1BaseCaseUnfold =>
                                              LHS: q_139::lseg<flted_5_137,p_136>@M
                                              RHS: q_205::lseg<flted_5_231,p_230>@M;Prio:1Match =>
        
         LHS: q_139::lseg<flted_5_137,p_136>@M
         RHS: q_205::lseg<flted_5_231,p_230>@M];
        Prio:1(Lemma <== lem_13) =>
                                    LHS: q_139::lseg<flted_5_137,p_136>@M
                                    RHS: q_205::lseg<flted_5_231,p_230>@M
        ]]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! estate: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & 
  q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: process_action :
 ### action =  BaseCaseUnfold =>
                   Type: Root
                   LHS: q_139::lseg<flted_5_137,p_136>@M
                   RHS: q_205::lseg<flted_5_231,p_230>@M
 lhs_rest: q_140::node<_,r>@M
 rhs_rest: emp
 ### estate =  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M
 ### conseq =  q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]


@17! M_base_case_unfold:
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: do_base_case_unfold attempt for :  q_139::lseg<flted_5_137,p_136>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@17! f:#DN# q_140::node<_,r>@M
@17! f:#DN# self_lem_13::node<v_138,q_139>@M
@17!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@17! ante-a0l:[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_204 & q_139=q_205 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13]
@17! ante-a1l:[]
@17!:0: 0: ante: :[ m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_204 & q_139=q_205 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13]
@17!:0: 0: coseq : : (flted_5_137=0 | p_136=q_139)
@17!:0: 0: h : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_204 & q_139=q_205 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13
@17!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_204 & q_139=q_205 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13
@17!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_204 & q_139=q_205 & (((1<=flted_5_137 & q_139!=null & 
p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & q_140!=null & 
self_lem_13!=null & q_140!=self_lem_13
@17!:0: 0: ante 4: : m_142=flted_5_137+1 & p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205 & 
(((1<=flted_5_137 & q_139!=null & p_136!=q_139) | (p_136=q_139 & 
flted_5_137=0))) & q_140!=null & self_lem_13!=null & q_140!=self_lem_13
@17!:0: 0: IMP #152
@17!:0: 0: imply_timeout: ante:  self_lem_13!=null & q_140!=self_lem_13 & q_140!=null & n=1+m_142 & 
m_142=flted_5_137+1 & p_136=q_140 & q_139=q_205 & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0)))
@17!:0: 0: imply_timeout: conseq:  (flted_5_137=0 | p_136=q_139)
@17!:0: 0: res: :false
@17!:0: 0: res : :false
@17!:0: 0: asta5?
@17!:0: 0: IMP #18.0
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: do_base_case_unfold attempt : unsuccessful for :  q_139::lseg<flted_5_137,p_136>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: process_action :
 ### action =  Match =>
          Type: Root
          LHS: q_139::lseg<flted_5_137,p_136>@M
          RHS: q_205::lseg<flted_5_231,p_230>@M
 lhs_rest: q_140::node<_,r>@M
 rhs_rest: emp
 ### estate =  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M
 ### conseq =  q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]


@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! lhs_node: q_139::lseg<flted_5_137,p_136>@M
@17! lhs_rest: q_140::node<_,r>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! rhs_node: q_205::lseg<flted_5_231,p_230>@M
@17! rhs_rest: emp
@17! new_estate(M_match): es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! subst:[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: do_match: using  q_139::lseg<flted_5_137,p_136>@M to prove  q_205::lseg<flted_5_231,p_230>@M
@17!sh-rev.slk:5: 2: do_match: source LHS:  es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17!sh-rev.slk:5: 2: do_match: source RHS:  emp&{FLOW,(1,24)=__flow}[]
@17! add_to_lhs:[]
@17! add_to_rhs:[]
@17! Imm annotation mismatch (node lvl):false
@17! param_ann_lhs:[]
@17! param_ann_rhs:[]
@17! Imm annotation mismatch (field lvl):false
@17! l_args_ann:[]
@17! r_args_ann:[]
@17! view_param_ann_lhs:None
@17! view_param_ann_rhs:None
@17! Imm annotation mismatch (view param):false
@17! ann_lhs:None
@17! ann_rhs:None
@17! Imm annotation mismatch:false
@17! restore_hole_b:true
@17! l_h: q_140::node<_,r>@M
@17! estate: es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_230:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! r_h: emp
@17!  impl_vars: :[]
@17! other subs:[((flted_5_231,flted_5_137),?),((p_230,p_136),?)]
@17! other subs:[((flted_5_231,flted_5_137),?),((p_230,p_136),?)]
@17! ext_subst(bef filter out ann):[(flted_5_231,flted_5_137),(p_230,p_136)]
@17! to_rhs(bef ann): true
@17! to_lhs(bef ann): true
@17! ext_subst(bef ann):[(flted_5_231,flted_5_137),(p_230,p_136)]
@17! to_rhs: true
@17! to_lhs: true
@17! new_ante_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_204 & q_139=q_205
@17! new_conseq_p: true
@17! l_h: q_140::node<_,r>@M
@17! tmp_conseq: emp&{FLOW,(1,24)=__flow}[]
@17! r_ann:@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! consumed_h: q_139::lseg<flted_5_137,p_136>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! new_consumed: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@17! new_ante: q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & 
n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
@17! new_conseq: emp&{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! new_es: es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: do_match (after): LHS:  es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@17!sh-rev.slk:5: 2: do_match (after): RHS: emp&{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct:
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! ctx0.es_heap bef: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! ctx0.es_heap after: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
@17! h1: q_140::node<_,r>@M
@17! h2: emp
@17! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_204 & q_139=q_205
@17! p2: true
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
 es_heap: q_139::lseg<flted_5_137,p_136>@M * self_lem_13::node<v_138,q_139>@M
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [p_136:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(1,24)=__flow}[]
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: process_action :
 ### action =  (Lemma <== lem_13) =>
                       Type: Root
                       LHS: q_139::lseg<flted_5_137,p_136>@M
                       RHS: q_205::lseg<flted_5_231,p_230>@M
 lhs_rest: 
                       q_140::node<_,r>@M
 rhs_rest: emp
 ### estate =  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M
 ### conseq =  q_205::lseg<flted_5_231,p_230>@M&{FLOW,(1,24)=__flow}[]


@17! annot: 2
@17! annot: [0,0]
@17! p: 1
@17! i: 0
@17! i: 0
@17! p: 2
@17! i: 0
@17! i: 0
@17! view_args_pos: 2
@17! to_be_updated: 2
@17! hargs: 2
@17!sh-rev.slk:5: 2: do_coercion: estate : q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_204 & q_139=q_205&{FLOW,(21,22)=__norm}[]
  es_heap:self_lem_13::node<v_138,q_139>@M

@17!sh-rev.slk:5: 2: do_coercion: c1 = lseg, c2 = lseg

@17!do_right_coercion : c2 = lseg

@17!sh-rev.slk:5: 2: [rewrite_coercion]: Rewrite cannot be applied!
@17!do_right_coercion :  lsegfailed 

@17! ctx0_lst match_: 
MaybeErr Context: 
                   
                    fe_kind: MUST
                    fe_name: 
                    fe_locs: {
                              fc_message: classical separation logic
                              fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
                  FAIL_UNION 
                   
                    fe_kind: MUST
                    fe_name: separation entailment
                    fe_locs: {
                              fc_message: failed right coercion application
                              fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
                  

@17! ctx0_lst match_: 
MaybeErr Context: 
                   
                    fe_kind: MUST
                    fe_name: 
                    fe_locs: {
                              fc_message: classical separation logic
                              fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
                  FAIL_UNION 
                   
                    fe_kind: MUST
                    fe_name: separation entailment
                    fe_locs: {
                              fc_message: failed right coercion application
                              fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
                  

heap_n_pure_entail#1@17@16@11
heap_n_pure_entail#1 inp1 : es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [p_230; flted_5_231; q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_gen_impl_vars: [v_204; q_205]
 es_rhs_eqset: [p_230:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : self_lem_13::node<v_204,q_205>@M * q_205::lseg<flted_5_231,p_230>@M
heap_n_pure_entail#1 inp3 : m_203=flted_5_231+1 & q_201!=self_lem_13 & p_230=q_201
heap_n_pure_entail#1@17 EXIT:Not OK

@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: fold: process_one: rs1:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_pure: q_201=self_lem_13 & m_203=0
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: fold: context at beginning of fold: self_lem_13
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: fold: context at end of fold: self_lem_13
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_pure: q_201=self_lem_13 & m_203=0
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@16!:0: 0: fold: es.es_pure:  q_201=self_lem_13 & m_203=0
@16!:0: 0: split_universal: to_ante(after split):  true
@16!:0: 0: split_universal: to_ante(find_rel_constraint):  true
@16!:0: 0: split_universal: to_ante(aft wrapp):  exists(m_203:m_203=0) & exists(q_201:q_201=self_lem_13)
@16!:0: 0: split_universal: evars: q_201, Anon_202, m_203
@16!:0: 0: split_universal: expl_inst_vars: 
@16!:0: 0: split_universal: vvars: m_203, q_201
@16!:0: 0: split_universal: to_ante:  exists(m_203:m_203=0) & exists(q_201:q_201=self_lem_13)
@16!:0: 0: split_universal: to_conseq:  q_201=self_lem_13 & m_203=0
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: process_fold_result: old_ctx before folding: self_lem_13
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_pure: q_201=self_lem_13 & m_203=0
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: process_fold_result: new_ctx after folding: self_lem_13
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@16!:0: 0: process_fold_result: vs2: m_203, q_201
@16!:0: 0: process_fold_result: to_ante:  exists(m_203:m_203=0) & exists(q_201:q_201=self_lem_13)
@16!:0: 0: process_fold_result: to_conseq:  q_201=self_lem_13 & m_203=0
@16!:0: 0: process_fold_result: new_conseq:
 q_201::node<_,r>@M&q_201=self_lem_13 & m_203=0&{FLOW,(21,22)=__norm}[]
@16!:heap_entail_one_context
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16!:0: 0: SAT #153
@16!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null & q_140!=self_lem_13
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 q_201::node<_,r>@M&q_201=self_lem_13 & m_203=0&{FLOW,(21,22)=__norm}[]
@16!:heap_entail_conjunct_lhs
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  q_201::node<_,r>@M&q_201=self_lem_13 & m_203=0&{FLOW,(21,22)=__norm}[]


@16! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16! f:#DN# self_lem_13::node<v_138,q_139>@M
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@16! f:#DN# q_140::node<_,r>@M
@16! f:#DN# q_201::node<_,r>@M
@16! f:#DN# q_201::node<_,r>@M
@16!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: IMP #154
@16!:0: 0: imply_timeout: ante:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null
@16!:0: 0: imply_timeout: conseq:  q_201=self_lem_13
@16!:0: 0: res: :false
@16!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: IMP #155
@16!:0: 0: imply_timeout: ante:  true
@16!:0: 0: imply_timeout: conseq:  m_203=0
@16!:0: 0: res: :false
@16!:0: 0: ante 1: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 3: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: ante 4: : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16!:0: 0: IMP #156
@16!:0: 0: imply_timeout: ante:  true
@16!:0: 0: imply_timeout: conseq:  q_201!=null
@16!:0: 0: res: :false
@16! lhs(orig): : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
exists(m_203:m_203=0) & exists(q_201:q_201=self_lem_13) & 
self_lem_13!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & q_140!=null
@16! rhs(orig): : q_201=self_lem_13 & m_203=0 & q_201!=null
@16! lhs (after filter_ante): : n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & exists(q_201:q_201=self_lem_13) & 
self_lem_13!=null
@16! fml: : n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & exists(q_201:q_201=self_lem_13) & 
self_lem_13!=null & q_201=self_lem_13 & m_203=0 & q_201!=null
@16!:0: 0: SAT #157
@16!:0: 0:  n=1+m_142 & m_142=flted_5_137+1 & q_140!=null & (((1<=flted_5_137 & 
q_139!=null & p_136!=q_139) | (p_136=q_139 & flted_5_137=0))) & 
p_136=q_140 & q_140!=self_lem_13 & self_lem_13!=null & q_201=self_lem_13 & 
m_203=0 & q_201!=null
@16! early contra detect:false
@16!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 q_201::node<_,r>@M&q_201=self_lem_13 & m_203=0&{FLOW,(21,22)=__norm}[]
@16! heap(helper): q_201::node<_,r>@M
@16! pure(helper): q_201=self_lem_13 & m_203=0
@16! BRANCH2:?
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@16! annot: 2
@16! annot: [0,0]
@16! p: 1
@16! i: 0
@16! i: 0
@16! p: 2
@16! i: 0
@16! i: 0
@16! view_args_pos: 2
@16! to_be_updated: 2
@16! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
conseq:
 q_201::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! new_ctx: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_201::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_201::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@18! ctx0.es_heap bef: emp
@18! ctx0.es_heap after: emp
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! h1: self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
q_140::node<_,r>@M
@18! h2: q_201::node<_,r>@M
@18! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
exists(m_203:m_203=0) & exists(q_201:q_201=self_lem_13)
@18! p2: true
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_201::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@18! estate.es_heap match_: emp
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! ctx0 match_: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_201::node<_,r>@M&{FLOW,(21,22)=__norm}[]
@18! vars:[n,p]
@18! args:[n,r]
@18! lmv: [(self,full,[lseg])]
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! l:[(lhs_rest: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M,lhs_node: self_lem_13::node<v_138,q_139>@M,holes:[],match_type: Root)]
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! r:[([ 
  Type: Root
  LHS: self_lem_13::node<v_138,q_139>@M
  RHS: q_201::node<_,r>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M
 rhs_rest: emp],?)]
@18! **** sel_hp_rel **********************
@18! hp_rel:[]
@18! sel_hp_rel:[]
@18! sel_post_hp_rel:[]
@18! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: self_lem_13::node<v_138,q_139>@M
                        RHS: q_201::node<_,r>@M
         ]]
@18! sorted action:[(1): Prio:0Match =>
                LHS: self_lem_13::node<v_138,q_139>@M
                RHS: q_201::node<_,r>@M]
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! estate: es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: process_action :
 ### action =  Match =>
          Type: Root
          LHS: self_lem_13::node<v_138,q_139>@M
          RHS: q_201::node<_,r>@M
 lhs_rest: q_139::lseg<flted_5_137,p_136>@M * 
          q_140::node<_,r>@M
 rhs_rest: emp
 ### estate =  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  q_201::node<_,r>@M&{FLOW,(21,22)=__norm}[]


@18! lhs_node: self_lem_13::node<v_138,q_139>@M
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! lhs_rest: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@18! rhs_node: q_201::node<_,r>@M
@18! rhs_rest: emp
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! new_estate(M_match): es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@18! subst:[]
@18!:0: 0: do_match: using  self_lem_13::node<v_138,q_139>@M to prove  q_201::node<_,r>@M
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: do_match: source LHS:  es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@18!:0: 0: do_match: source RHS:  emp&{FLOW,(21,22)=__norm}[]
@18! add_to_lhs:[]
@18! add_to_rhs:[]
@18! Imm annotation mismatch (node lvl):false
@18! param_ann_lhs:[]
@18! param_ann_rhs:[]
@18! Imm annotation mismatch (field lvl):false
@18! l_args_ann:[]
@18! r_args_ann:[]
@18! view_param_ann_lhs:None
@18! view_param_ann_rhs:None
@18! Imm annotation mismatch (view param):false
@18! ann_lhs:None
@18! ann_rhs:None
@18! Imm annotation mismatch:false
@18! restore_hole_b:true
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! l_h: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! estate: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@18! r_h: emp
@18! new_l_args:[#,#]
@18! new_r_args:[#,#]
@18! new_l_holes:[0,1]
@18! new_r_holes:[0,1]
@18! rem_l_node: emp
@18! rem_r_node: emp
@18!  impl_vars: :[]
@18! other subs:[((Anon_202,v_138),?),((r,q_139),?)]
@18! other subs:[((Anon_202,v_138),?),((r,q_139),?)]
@18! ext_subst(bef filter out ann):[(Anon_202,v_138)]
@18! to_rhs(bef ann): true
@18! to_lhs(bef ann): q_139=r
@18! ext_subst(bef ann):[(Anon_202,v_138)]
@18! to_rhs: true
@18! to_lhs: q_139=r
@18! new_ante_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
exists(m_203:m_203=0) & exists(q_201:q_201=self_lem_13) & q_139=r
@18! new_conseq_p: true
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! l_h: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@18! tmp_conseq: emp&{FLOW,(21,22)=__norm}[]
@18! r_ann:@M
@18! consumed_h: self_lem_13::node<v_138,q_139>@M
@18! new_consumed: self_lem_13::node<v_138,q_139>@M
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! new_ante: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+1 & 
q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
exists(q_201:q_201=self_lem_13) & q_139=r&{FLOW,(21,22)=__norm}[]
@18! new_conseq: emp&{FLOW,(21,22)=__norm}[]
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! new_es: es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13) & q_139=r&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: do_match (after): LHS:  es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13) & q_139=r&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@18!:0: 0: do_match (after): RHS: emp&{FLOW,(21,22)=__norm}[]
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13) & q_139=r&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13) & q_139=r&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@18! ctx0.es_heap bef: self_lem_13::node<v_138,q_139>@M
@18! ctx0.es_heap after: self_lem_13::node<v_138,q_139>@M
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! h1: q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M
@18! h2: emp
@18! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
exists(m_203:m_203=0) & exists(q_201:q_201=self_lem_13) & q_139=r
@18! p2: true
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18!:0: 0: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  q_139::lseg<flted_5_137,p_136>@M * q_140::node<_,r>@M&m_142=flted_5_137+
  1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13) & q_139=r&{FLOW,(21,22)=__norm}[]
 es_heap: self_lem_13::node<v_138,q_139>@M
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace: 
   SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@18! f:#DN# q_140::node<_,r>@M
@18!:0: 0: SAT #158
@18!:0: 0:  p_136=q_139 & flted_5_137=0 & m_142=flted_5_137+1 & q_140!=self_lem_13 & 
p_136=q_140 & n=1+m_142 & q_139=r & q_140!=null
@18! f:#DN# q_139::node<v_254,q_255>@M
@18! annot: 2
@18! annot: [0,0]
@18! p: 1
@18! i: 0
@18! i: 0
@18! p: 2
@18! i: 0
@18! i: 0
@18! view_args_pos: 2
@18! to_be_updated: 2
@18! hargs: 2
@18! f:#VN# q_255::lseg<flted_5_253,p_252>@M
@18! f:#DN# q_140::node<_,r>@M
@18!:0: 0: SAT #159
@18!:0: 0:  flted_5_137=flted_5_253+1 & p_136!=q_139 & p_136=p_252 & m_142=flted_5_137+
1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & q_139=r & q_139!=null & 
(((1<=flted_5_253 & q_255!=null & p_252!=q_255) | (p_252=q_255 & 
flted_5_253=0))) & q_140!=null & q_139!=q_140
@18! ctx0_lst match_: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: 
                   fe_locs: {
                             fc_message: classical separation logic
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}

heap_n_pure_entail#1@18@16@11
heap_n_pure_entail#1 inp1 : es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142 & exists(m_203:m_203=0) & 
  exists(q_201:q_201=self_lem_13)&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_rhs_eqset: [self_lem_13:q_201]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==>  SEARCH ==>  Fold ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : q_201::node<_,r>@M
heap_n_pure_entail#1 inp3 : q_201=self_lem_13 & m_203=0
heap_n_pure_entail#1@18 EXIT:Not OK

@16!:0: 0: process_fold_result: context at end fold: self_lem_13
 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: 
                   fe_locs: {
                             fc_message: classical separation logic
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}

@16! ctx0_lst match_: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: 
                   fe_locs: {
                             fc_message: classical separation logic
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}

heap_n_pure_entail#1@16@11
heap_n_pure_entail#1 inp1 : es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_evars: [q_201; _; m_203]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace:  SEARCH ==>  RD_Lemma ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : self_lem_13::lseg<m_203,q_201>@M * q_201::node<_,r>@M
heap_n_pure_entail#1 inp3 : n=1+m_203
heap_n_pure_entail#1@16 EXIT:Not OK

@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144 & r=r & 
                 r!=self_lem_13 & n=1+flted_5_137+1&{FLOW,(21,22)=__norm}[]
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! cl:[ es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! cl after subs:[ es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! cl after restore:[ es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@11! annot: 2
@11! annot: [0,0]
@11! p: 1
@11! i: 0
@11! i: 0
@11! p: 2
@11! i: 0
@11! i: 0
@11! view_args_pos: 2
@11! to_be_updated: 2
@11! hargs: 2
@19! new_conseq one_ctx_entail: emp&{FLOW,(21,22)=__norm}[]
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19!:0: 0: heap_entail_conjunct:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19!:0: 0: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! ctx0.es_heap bef: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! ctx0.es_heap after: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@19! h1: emp
@19! h2: emp
@19! p1: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1
@19! p2: true
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19!:0: 0: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@19! es_infer_vars_hp_rel :[]
@19! es_infer_vars :[]
@19! es_infer_vars_rel :[]
@19! es_infer_vars_sel_hp_rel :[]
@19! lhs_h: emp
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! estate_orig.es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! curr_lhs_h: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@19! lhs_p: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! curr_lhs_h0: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
self_lem_13::node<v_138,q_139>@M
@19! f:#DN# q_140::node<_,r>@M
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@19! f:#DN# self_lem_13::node<v_138,q_139>@M
@19! f:#DN# q_140::node<_,r>@M
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! f:#VN# q_139::lseg<flted_5_137,p_136>@M
@19! f:#DN# self_lem_13::node<v_138,q_139>@M
@19! xpure_lhs_h1(bef merge): q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@19! xpure_lhs_h1: q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! es: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19!:0: 0: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@19!:0: 0: heap_entail_empty_heap: rhs:
 true
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! estate: es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@19! m_lhs: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1
@19! tmp3: m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1 & 
q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@19!:0: 0: rhs_p : : true
@19!:0: 0: conseq0 : : true
@19!:0: 0: conseq1 : : true
@19!:0: 0: >>>>>> entail_empty_heap: cp1 <<<<<<
@19!:0: 0: ante0 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1 & 
q_140!=null & 0<=flted_5_137 & self_lem_13!=null & q_140!=self_lem_13
@19!:0: 0: ante1 : : m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1 & 
q_140!=null & (((1<=flted_5_137 & q_139!=null & p_136!=q_139) | 
(p_136=q_139 & flted_5_137=0))) & self_lem_13!=null & q_140!=self_lem_13
@19!:0: 0: conseq : : true
@19!:0: 0: SAT #160
@19!:0: 0:  m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1
@19!:0: 0: heap_entail_empty_heap: formula is valid
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19!:0: 0: heap_entail_empty_heap: res_ctx:
 es_formula: 
  emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & 
  v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_trace: 
   SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@19! l_inst: true
@19! p2: true
@19! move_impl(l_inst):[]
@19! move_impl(to_elim_evars):[]
@19! move_impl(inst_to_keep):[]
@19! move_impl(f): true
@19! move_impl(new_to_elim):[]
@19! annot: 2
@19! annot: [0,0]
@19! p: 1
@19! i: 0
@19! i: 0
@19! p: 2
@19! i: 0
@19! i: 0
@19! view_args_pos: 2
@19! to_be_updated: 2
@19! hargs: 2
@19! new_ctx: 
Good Context: 1[es_formula: 
                 emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
                 p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144 & r=r & 
                 r!=self_lem_13 & n=1+flted_5_137+1&{FLOW,(21,22)=__norm}[]
                es_heap: q_140::node<_,r>@M * 
                          q_139::lseg<flted_5_137,p_136>@M * 
                          self_lem_13::node<v_138,q_139>@M
                es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; 
                                m_142]
                es_trace: 
                  SEARCH ==>  Fold ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

one_ctx_entail@19@11
one_ctx_entail inp1 : emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&{FLOW,(21,22)=__norm}[]
 es_heap: q_140::node<_,r>@M * q_139::lseg<flted_5_137,p_136>@M * 
           self_lem_13::node<v_138,q_139>@M
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]

one_ctx_entail inp2 : self_lem_13::lseg<n,r>@M&{FLOW,(21,22)=__norm}[]
one_ctx_entail inp3 : true
one_ctx_entail@19 EXIT: 1[
   emp&m_142=flted_5_137+1 & q_140!=self_lem_13 & p_136=q_140 & n=1+m_142 & v_138=v_143 & q_139=q_144 & r=r & r!=self_lem_13 & n=1+flted_5_137+1&{FLOW,(21,22)=__norm}[]
   ]

heap_n_pure_entail#1@11
heap_n_pure_entail#1 inp1 : es_formula: 
  self_lem_13::node<v_138,q_139>@M * q_139::lseg<flted_5_137,p_136>@M * 
  q_140::node<_,r>@M&m_142=flted_5_137+1 & q_140!=self_lem_13 & 
  p_136=q_140 & n=1+m_142&{FLOW,(21,22)=__norm}[]
 es_ante_evars: [p_136; flted_5_137; v_138; q_139; q_140; _; m_142]
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : self_lem_13::lseg<n,r>@M
heap_n_pure_entail#1 inp3 : true
heap_n_pure_entail#1@11 EXIT:OK

Entailing lemma lem_13: Valid.

Valid Lemmas : [lem_13:<==] added to lemma store.

@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_infer_vars_rel: []
conseq:
 res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! new_ctx: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct:
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct_helper:
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M&{FLOW,(21,22)=__norm}[]
@20! ctx0.es_heap bef: emp
@20! ctx0.es_heap after: emp
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! h1: res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * l::node<_,flted_10_282>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! h2: res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M
@20! p1: flted_10_282=null & n=1+n_1296 & 1<n_1296
@20! p2: true
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M&{FLOW,(21,22)=__norm}[]
@20! estate.es_heap match_: emp
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! ctx0 match_: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! l:[(lhs_rest: q_1286::node<_,l>@M * l::node<_,flted_10_282>@M,lhs_node: res::lseg<n_1296,q_1286>@M,holes:[],match_type: Root)]
@20! vars:[n,p]
@20! args:[n,r]
@20! lmv: [(self,full,[lseg])]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! l:[(lhs_rest: res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M,lhs_node: l::node<_,flted_10_282>@M,holes:[],match_type: Root)]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! r:[([ 
  Type: Root
  LHS: res::lseg<n_1296,q_1286>@M
  RHS: res::lseg<n_283,l_284>@M
 lhs_rest: q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M
 rhs_rest: l::node<_,flted_11_285>@M],?),([ 
  Type: Root
  LHS: l::node<_,flted_10_282>@M
  RHS: l::node<_,flted_11_285>@M
 lhs_rest: res::lseg<n_1296,q_1286>@M * 
  q_1286::node<_,l>@M
 rhs_rest: res::lseg<n_283,l_284>@M],?)]
@20! **** sel_hp_rel **********************
@20! hp_rel:[]
@20! sel_hp_rel:[]
@20! sel_post_hp_rel:[]
@20! force_match:false
@20! s_eq:true
@20! vl_b:false
@20! vr_b:false
@20! vl_view_orig:true
@20! vr_view_orig:true
@20! **** sel_hp_rel **********************
@20! hp_rel:[]
@20! sel_hp_rel:[]
@20! sel_post_hp_rel:[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:1COND =>[Prio:1BaseCaseUnfold =>
                                               LHS: res::lseg<n_1296,q_1286>@M
                                               RHS: res::lseg<n_283,l_284>@M;Prio:1Match =>
         
          LHS: res::lseg<n_1296,q_1286>@M
          RHS: res::lseg<n_283,l_284>@M];
         Prio:1(Lemma <== lem_13) =>
                                     LHS: res::lseg<n_1296,q_1286>@M
                                     RHS: res::lseg<n_283,l_284>@M
         ],
(2): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: l::node<_,flted_10_282>@M
                        RHS: l::node<_,flted_11_285>@M
         ]]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! sorted action:[(1): Prio:0Match =>
                LHS: l::node<_,flted_10_282>@M
                RHS: l::node<_,flted_11_285>@M,
(2): Prio:1SEARCH =>[
        Prio:1COND =>[Prio:1BaseCaseUnfold =>
                                              LHS: res::lseg<n_1296,q_1286>@M
                                              RHS: res::lseg<n_283,l_284>@M;Prio:1Match =>
        
         LHS: res::lseg<n_1296,q_1286>@M
         RHS: res::lseg<n_283,l_284>@M];
        Prio:1(Lemma <== lem_13) =>
                                    LHS: res::lseg<n_1296,q_1286>@M
                                    RHS: res::lseg<n_283,l_284>@M
        ]]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! estate: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: process_action :
 ### action =  Match =>
          Type: Root
          LHS: l::node<_,flted_10_282>@M
          RHS: l::node<_,flted_11_285>@M
 lhs_rest: res::lseg<n_1296,q_1286>@M * 
          q_1286::node<_,l>@M
 rhs_rest: res::lseg<n_283,l_284>@M
 ### estate =  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&{FLOW,(21,22)=__norm}[]
  es_heap:emp
 ### conseq =  res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M&{FLOW,(21,22)=__norm}[]


@20! lhs_node: l::node<_,flted_10_282>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! lhs_rest: res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M
@20! rhs_node: l::node<_,flted_11_285>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! rhs_rest: res::lseg<n_283,l_284>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! new_estate(M_match): es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296&{FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! subst:[]
@20!sh-rev.slk:11: 27: do_match: using  l::node<_,flted_10_282>@M to prove  l::node<_,flted_11_285>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: do_match: source LHS:  es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296&{FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: do_match: source RHS:  res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]
@20! add_to_lhs:[]
@20! add_to_rhs:[]
@20! Imm annotation mismatch (node lvl):false
@20! param_ann_lhs:[]
@20! param_ann_rhs:[]
@20! Imm annotation mismatch (field lvl):false
@20! l_args_ann:[]
@20! r_args_ann:[]
@20! view_param_ann_lhs:None
@20! view_param_ann_rhs:None
@20! Imm annotation mismatch (view param):false
@20! ann_lhs:None
@20! ann_rhs:None
@20! Imm annotation mismatch:false
@20! restore_hole_b:true
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! l_h: res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! estate: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296&{FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! r_h: res::lseg<n_283,l_284>@M
@20! new_l_args:[#,#]
@20! new_r_args:[#,#]
@20! new_l_holes:[0,1]
@20! new_r_holes:[0,1]
@20! rem_l_node: emp
@20! rem_r_node: emp
@20!  impl_vars: :[Anon_16]
@20! other subs:[((Anon_16,Anon_15),?),((flted_11_285,flted_10_282),?)]
@20! other subs:[((Anon_16,Anon_15),?),((flted_11_285,flted_10_282),?)]
@20! ext_subst(bef filter out ann):[(flted_11_285,flted_10_282)]
@20! to_rhs(bef ann): true
@20! to_lhs(bef ann): Anon_15=Anon_16
@20! ext_subst(bef ann):[(flted_11_285,flted_10_282)]
@20! to_rhs: true
@20! to_lhs: Anon_15=Anon_16
@20! new_ante_p: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@20! new_conseq_p: true
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! l_h: res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! tmp_conseq: res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]
@20! r_ann:@M
@20! consumed_h: l::node<_,flted_10_282>@M
@20! new_consumed: l::node<_,flted_10_282>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! new_ante: res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! new_conseq: res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! new_es: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: do_match (after): LHS:  es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: do_match (after): RHS: res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct:
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct_helper:
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]
@20! ctx0.es_heap bef: l::node<_,flted_10_282>@M
@20! ctx0.es_heap after: l::node<_,flted_10_282>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! h1: res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! h2: res::lseg<n_283,l_284>@M
@20! p1: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@20! p2: true
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]
@20! estate.es_heap match_: l::node<_,flted_10_282>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! ctx0 match_: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! l:[(lhs_rest: q_1286::node<_,l>@M,lhs_node: res::lseg<n_1296,q_1286>@M,holes:[],match_type: Root)]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! r:[([ 
  Type: Root
  LHS: res::lseg<n_1296,q_1286>@M
  RHS: res::lseg<n_283,l_284>@M
 lhs_rest: q_1286::node<_,l>@M
 rhs_rest: emp],?)]
@20! **** sel_hp_rel **********************
@20! hp_rel:[]
@20! sel_hp_rel:[]
@20! sel_post_hp_rel:[]
@20! force_match:false
@20! s_eq:true
@20! vl_b:false
@20! vr_b:false
@20! vl_view_orig:true
@20! vr_view_orig:true
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:1COND =>[Prio:1BaseCaseUnfold =>
                                               LHS: res::lseg<n_1296,q_1286>@M
                                               RHS: res::lseg<n_283,l_284>@M;Prio:1Match =>
         
          LHS: res::lseg<n_1296,q_1286>@M
          RHS: res::lseg<n_283,l_284>@M];
         Prio:1(Lemma <== lem_13) =>
                                     LHS: res::lseg<n_1296,q_1286>@M
                                     RHS: res::lseg<n_283,l_284>@M
         ]]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! sorted action:[(1): Prio:1SEARCH =>[
        Prio:1COND =>[Prio:1BaseCaseUnfold =>
                                              LHS: res::lseg<n_1296,q_1286>@M
                                              RHS: res::lseg<n_283,l_284>@M;Prio:1Match =>
        
         LHS: res::lseg<n_1296,q_1286>@M
         RHS: res::lseg<n_283,l_284>@M];
        Prio:1(Lemma <== lem_13) =>
                                    LHS: res::lseg<n_1296,q_1286>@M
                                    RHS: res::lseg<n_283,l_284>@M
        ]]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! estate: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: process_action :
 ### action =  BaseCaseUnfold =>
                   Type: Root
                   LHS: res::lseg<n_1296,q_1286>@M
                   RHS: res::lseg<n_283,l_284>@M
 lhs_rest: q_1286::node<_,l>@M
 rhs_rest: emp
 ### estate =  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
  es_heap:l::node<_,flted_10_282>@M
 ### conseq =  res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]


@20! M_base_case_unfold:
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: do_base_case_unfold attempt for :  res::lseg<n_1296,q_1286>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! f:#VN# res::lseg<n_1296,q_1286>@M
@20! f:#DN# q_1286::node<_,l>@M
@20! f:#DN# l::node<_,flted_10_282>@M
@20!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@20! ante-a0l:[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null & l!=null & l!=q_1286]
@20! ante-a1l:[]
@20!:0: 0: ante: :[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null & l!=null & l!=q_1286]
@20!:0: 0: coseq : : (n_1296=0 | q_1286=res)
@20!:0: 0: h : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null & l!=null & l!=q_1286
@20!:0: 0: ante 1: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null & l!=null & l!=q_1286
@20!:0: 0: ante 3: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null & l!=null & l!=q_1286
@20!:0: 0: ante 4: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null & l!=null & l!=q_1286
@20!:0: 0: IMP #165
@20!:0: 0: imply_timeout: ante:  l!=null & n=1+n_1296 & 1<n_1296 & (((1<=n_1296 & res!=null & q_1286!=res) | 
(q_1286=res & n_1296=0))) & q_1286!=null & l!=q_1286
@20!:0: 0: imply_timeout: conseq:  (n_1296=0 | q_1286=res)
@20! Ann Vars:[]
@20! Inv: l!=null & n=1+n_1296 & 1<n_1296 & (((1<=n_1296 & res!=null & q_1286!=res) | 
(q_1286=res & n_1296=0))) & q_1286!=null & l!=q_1286
@20!:0: 0: res: :false
@20!:0: 0: res : :false
@20!:0: 0: asta5?
@20!:0: 0: IMP #19.0
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: do_base_case_unfold attempt : unsuccessful for :  res::lseg<n_1296,q_1286>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: process_action :
 ### action =  Match =>
          Type: Root
          LHS: res::lseg<n_1296,q_1286>@M
          RHS: res::lseg<n_283,l_284>@M
 lhs_rest: q_1286::node<_,l>@M
 rhs_rest: emp
 ### estate =  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
  es_heap:l::node<_,flted_10_282>@M
 ### conseq =  res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]


@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! lhs_node: res::lseg<n_1296,q_1286>@M
@20! lhs_rest: q_1286::node<_,l>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! rhs_node: res::lseg<n_283,l_284>@M
@20! rhs_rest: emp
@20! new_estate(M_match): es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! subst:[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: do_match: using  res::lseg<n_1296,q_1286>@M to prove  res::lseg<n_283,l_284>@M
@20!sh-rev.slk:11: 27: do_match: source LHS:  es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20!sh-rev.slk:11: 27: do_match: source RHS:  emp&{FLOW,(21,22)=__norm}[]
@20! add_to_lhs:[]
@20! add_to_rhs:[]
@20! Imm annotation mismatch (node lvl):false
@20! param_ann_lhs:[]
@20! param_ann_rhs:[]
@20! Imm annotation mismatch (field lvl):false
@20! l_args_ann:[]
@20! r_args_ann:[]
@20! view_param_ann_lhs:None
@20! view_param_ann_rhs:None
@20! Imm annotation mismatch (view param):false
@20! ann_lhs:None
@20! ann_rhs:None
@20! Imm annotation mismatch:false
@20! restore_hole_b:true
@20! l_h: q_1286::node<_,l>@M
@20! estate: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! r_h: emp
@20!  impl_vars: :[]
@20! other subs:[((n_283,n_1296),?),((l_284,q_1286),?)]
@20! other subs:[((n_283,n_1296),?),((l_284,q_1286),?)]
@20! ext_subst(bef filter out ann):[(n_283,n_1296),(l_284,q_1286)]
@20! to_rhs(bef ann): true
@20! to_lhs(bef ann): true
@20! ext_subst(bef ann):[(n_283,n_1296),(l_284,q_1286)]
@20! to_rhs: true
@20! to_lhs: true
@20! new_ante_p: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@20! new_conseq_p: true
@20! l_h: q_1286::node<_,l>@M
@20! tmp_conseq: emp&{FLOW,(21,22)=__norm}[]
@20! r_ann:@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! consumed_h: res::lseg<n_1296,q_1286>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! new_consumed: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@20! new_ante: q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
@20! new_conseq: emp&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! new_es: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: do_match (after): LHS:  es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20!sh-rev.slk:11: 27: do_match (after): RHS: emp&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct:
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! ctx0.es_heap bef: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! ctx0.es_heap after: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@20! h1: q_1286::node<_,l>@M
@20! h2: emp
@20! p1: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@20! p2: true
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@20! es_infer_vars_hp_rel :[]
@20! es_infer_vars :[]
@20! es_infer_vars_rel :[]
@20! es_infer_vars_sel_hp_rel :[]
@20! lhs_h: q_1286::node<_,l>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! estate_orig.es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! curr_lhs_h: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@20! lhs_p: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! curr_lhs_h0: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@20! f:#DN# q_1286::node<_,l>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! f:#VN# res::lseg<n_1296,q_1286>@M
@20! f:#DN# l::node<_,flted_10_282>@M
@20! f:#DN# q_1286::node<_,l>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! f:#VN# res::lseg<n_1296,q_1286>@M
@20! f:#DN# l::node<_,flted_10_282>@M
@20! xpure_lhs_h1(bef merge): q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@20! xpure_lhs_h1: q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! es: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_empty_heap: ctx:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20!sh-rev.slk:11: 27: heap_entail_empty_heap: rhs:
 true
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! estate: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@20! m_lhs: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@20! tmp3: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@20!sh-rev.slk:11: 27: rhs_p : : true
@20!sh-rev.slk:11: 27: conseq0 : : true
@20!sh-rev.slk:11: 27: conseq1 : : true
@20!sh-rev.slk:11: 27: >>>>>> entail_empty_heap: cp1 <<<<<<
@20!sh-rev.slk:11: 27: ante0 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@20!sh-rev.slk:11: 27: ante1 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@20!sh-rev.slk:11: 27: conseq : : true
@20! f:#DN# q_1286::node<_,l>@M
@20!:0: 0: SAT #166
@20!:0: 0:  flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & q_1286!=null
@20!sh-rev.slk:11: 27: heap_entail_empty_heap: formula is valid
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_empty_heap: res_ctx:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
@20! l_inst: true
@20! p2: true
@20! move_impl(l_inst):[]
@20! move_impl(to_elim_evars):[n_283,l_284,flted_11_285]
@20! move_impl(inst_to_keep):[]
@20! move_impl(f): true
@20! move_impl(new_to_elim):[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! es: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! new_es: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! new_ctx: 
Good Context: 1[es_formula: 
                 q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 
                 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
                es_heap: res::lseg<n_1296,q_1286>@M * 
                          l::node<_,flted_10_282>@M
                es_evars: [n_283; l_284; flted_11_285]
                es_ante_evars: [flted_10_282]
                es_rhs_eqset: [n_1296:n; q_1286:l]
                es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                es_infer_vars_rel: []]

@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: process_action :
 ### action =  (Lemma <== lem_13) =>
                       Type: Root
                       LHS: res::lseg<n_1296,q_1286>@M
                       RHS: res::lseg<n_283,l_284>@M
 lhs_rest: q_1286::node<_,l>@M
 rhs_rest: emp
 ### estate =  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
  es_heap:l::node<_,flted_10_282>@M
 ### conseq =  res::lseg<n_283,l_284>@M&{FLOW,(21,22)=__norm}[]


@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: do_coercion: estate : res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
  es_heap:l::node<_,flted_10_282>@M

@20!sh-rev.slk:11: 27: do_coercion: c1 = lseg, c2 = lseg

@20!do_right_coercion : c2 = lseg

@20!:0: 0: asta6?
@20!:0: 0: IMP #20
@20!:heap_entail_one_context
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! f:#VN# res::lseg<n_1296,q_1286>@M
@20! f:#DN# q_1286::node<_,l>@M
@20!:0: 0: SAT #167
@20!:0: 0:  flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 (exists q_298,_,m_300: res::lseg<m_300,q_298>@M * q_298::node<_,l_284>@M&
n_283=1+m_300&{FLOW,(21,22)=__norm})[]
@20!:heap_entail_conjunct_lhs
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: process_action :
 ### action =  NothingToDo => No duplicated nodes!
 ### estate =  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
  es_heap:l::node<_,flted_10_282>@M
 ### conseq =  (exists q_298,_,m_300: res::lseg<m_300,q_298>@M * q_298::node<_,l_284>@M&
n_283=1+m_300&{FLOW,(21,22)=__norm})[]


@20! temp:( 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: No duplicated nodes!
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
,?)
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! f:#VN# res::lseg<n_1296,q_1286>@M
@20! f:#DN# q_1286::node<_,l>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! f:#VN# res::lseg<n_1296,q_1286>@M
@20! f:#DN# q_1286::node<_,l>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! f:#VN# res::lseg<m_300,q_298>@M
@20! f:#DN# q_298::node<_,l_284>@M
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! f:#VN# res::lseg<m_300,q_298>@M
@20! f:#DN# q_298::node<_,l_284>@M
@20!:0: 0: ante 1: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null
@20!:0: 0: ante 3: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null
@20!:0: 0: ante 4: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null
@20!:0: 0: IMP #169
@20!:0: 0: imply_timeout: ante:  q_1286!=null & 1<n_1296 & n=1+n_1296 & (((1<=n_1296 & res!=null & 
q_1286!=res) | (q_1286=res & n_1296=0)))
@20!:0: 0: imply_timeout: conseq:  res!=null & ((2<=n_283 | n_283=1))
@20! Ann Vars:[]
@20! Inv: q_1286!=null & 1<n_1296 & n=1+n_1296 & (((1<=n_1296 & res!=null & 
q_1286!=res) | (q_1286=res & n_1296=0)))
@20!:0: 0: res: :false
@20! lhs(orig): : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
(((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & n_1296=0))) & 
q_1286!=null
@20! rhs(orig): : exists(m_300:exists(q_298:(((1<=m_300 & res!=null & q_298!=res) | 
(q_298=res & m_300=0))) & q_298!=null) & n_283=1+m_300)
@20! lhs (after filter_ante): : q_1286!=null & 1<n_1296 & n=1+n_1296 & (((1<=n_1296 & res!=null & 
q_1286!=res) | (q_1286=res & n_1296=0)))
@20! fml: : q_1286!=null & 1<n_1296 & n=1+n_1296 & (((1<=n_1296 & res!=null & 
q_1286!=res) | (q_1286=res & n_1296=0))) & 
exists(m_300:exists(q_298:(((1<=m_300 & res!=null & q_298!=res) | 
(q_298=res & m_300=0))) & q_298!=null) & n_283=1+m_300)
@20!:0: 0: SAT #170
@20!:0: 0:  q_1286!=null & 1<n_1296 & n=1+n_1296 & (((1<=n_1296 & res!=null & 
q_1286!=res) | (q_1286=res & n_1296=0))) & 
exists(m_300:exists(q_298:(((1<=m_300 & res!=null & q_298!=res) | 
(q_298=res & m_300=0))) & q_298!=null) & n_283=1+m_300)
@20! early contra detect:false
@20!sh-rev.slk:11: 27: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 (exists q_298,_,m_300: res::lseg<m_300,q_298>@M * q_298::node<_,l_284>@M&
n_283=1+m_300&{FLOW,(21,22)=__norm})[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20!sh-rev.slk:11: 27: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M&n_283=1+m_303&
{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! heap(helper): res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M
@20! pure(helper): n_283=1+m_303
@20! BRANCH2:?
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_split_lhs_phases: 
ante:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
conseq:
 res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! new_ctx: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct:
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct_helper:
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! ctx0.es_heap bef: l::node<_,flted_10_282>@M
@21! ctx0.es_heap after: l::node<_,flted_10_282>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! h1: res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! h2: res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M
@21! p1: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@21! p2: true
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! estate.es_heap match_: l::node<_,flted_10_282>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! ctx0 match_: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! l:[(lhs_rest: q_1286::node<_,l>@M,lhs_node: res::lseg<n_1296,q_1286>@M,holes:[],match_type: Root)]
@21! vars:[n,p]
@21! args:[n,r]
@21! lmv: [(self,full,[lseg])]
@21! l:[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! r:[([ 
  Type: Root
  LHS: res::lseg<n_1296,q_1286>@M
  RHS: res::lseg<m_303,q_301>@M
 lhs_rest: q_1286::node<_,l>@M
 rhs_rest: 
  q_301::node<_,l_284>@M],?),([],?)]
@21! **** sel_hp_rel **********************
@21! hp_rel:[]
@21! sel_hp_rel:[]
@21! sel_post_hp_rel:[]
@21! force_match:true
@21! s_eq:true
@21! vl_b:false
@21! vr_b:true
@21! vl_view_orig:true
@21! vr_view_orig:false
@21! **** sel_hp_rel **********************
@21! hp_rel:[]
@21! sel_hp_rel:[]
@21! sel_post_hp_rel:[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: res::lseg<n_1296,q_1286>@M
                        RHS: res::lseg<m_303,q_301>@M;
         Prio:1(Lemma <== lem_13) =>
                                     LHS: res::lseg<n_1296,q_1286>@M
                                     RHS: res::lseg<m_303,q_301>@M
         ],
(2): Prio:-1COND =>[Prio:2UnmatchedRHSData =>  q_301::node<_,l_284>@M]]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! sorted action:[(1): Prio:0Match =>
                LHS: res::lseg<n_1296,q_1286>@M
                RHS: res::lseg<m_303,q_301>@M,
(2): Prio:2COND =>[Prio:2UnmatchedRHSData =>  q_301::node<_,l_284>@M]]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! estate: es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: process_action :
 ### action =  Match =>
          Type: Root
          LHS: res::lseg<n_1296,q_1286>@M
          RHS: res::lseg<m_303,q_301>@M
 lhs_rest: q_1286::node<_,l>@M
 rhs_rest: 
          q_301::node<_,l_284>@M
 ### estate =  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
  es_heap:l::node<_,flted_10_282>@M
 ### conseq =  res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]


@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! lhs_node: res::lseg<n_1296,q_1286>@M
@21! lhs_rest: q_1286::node<_,l>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! rhs_node: res::lseg<m_303,q_301>@M
@21! rhs_rest: q_301::node<_,l_284>@M
@21! new_estate(M_match): es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! subst:[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: do_match: using  res::lseg<n_1296,q_1286>@M to prove  res::lseg<m_303,q_301>@M
@21!sh-rev.slk:11: 27: do_match: source LHS:  es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21!sh-rev.slk:11: 27: do_match: source RHS:  q_301::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! add_to_lhs:[]
@21! add_to_rhs:[]
@21! Imm annotation mismatch (node lvl):false
@21! param_ann_lhs:[]
@21! param_ann_rhs:[]
@21! Imm annotation mismatch (field lvl):false
@21! l_args_ann:[]
@21! r_args_ann:[]
@21! view_param_ann_lhs:None
@21! view_param_ann_rhs:None
@21! Imm annotation mismatch (view param):false
@21! ann_lhs:None
@21! ann_rhs:None
@21! Imm annotation mismatch:false
@21! restore_hole_b:true
@21! l_h: q_1286::node<_,l>@M
@21! estate: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! r_h: q_301::node<_,l_284>@M
@21!  impl_vars: :[]
@21! other subs:[((m_303,n_1296),?),((q_301,q_1286),?)]
@21! other subs:[((m_303,n_1296),?),((q_301,q_1286),?)]
@21! ext_subst(bef filter out ann):[(m_303,n_1296),(q_301,q_1286)]
@21! to_rhs(bef ann): true
@21! to_lhs(bef ann): true
@21! ext_subst(bef ann):[(m_303,n_1296),(q_301,q_1286)]
@21! to_rhs: true
@21! to_lhs: true
@21! new_ante_p: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@21! new_conseq_p: true
@21! l_h: q_1286::node<_,l>@M
@21! tmp_conseq: q_301::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! r_ann:@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! consumed_h: res::lseg<n_1296,q_1286>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! new_consumed: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! new_ante: q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
@21! new_conseq: q_1286::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! new_es: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: do_match (after): LHS:  es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21!sh-rev.slk:11: 27: do_match (after): RHS: q_1286::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct:
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_1286::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_1286::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! ctx0.es_heap bef: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! ctx0.es_heap after: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! h1: q_1286::node<_,l>@M
@21! h2: q_1286::node<_,l_284>@M
@21! p1: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@21! p2: true
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_1286::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! estate.es_heap match_: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! ctx0 match_: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 q_1286::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]
@21! l:[(lhs_rest: emp,lhs_node: q_1286::node<_,l>@M,holes:[],match_type: Root)]
@21! r:[([ 
  Type: Root
  LHS: q_1286::node<_,l>@M
  RHS: q_1286::node<_,l_284>@M
 lhs_rest: emp
 rhs_rest: emp],?)]
@21! **** sel_hp_rel **********************
@21! hp_rel:[]
@21! sel_hp_rel:[]
@21! sel_post_hp_rel:[]
@21! weighted action:[(1): Prio:-1SEARCH =>[
         Prio:0Match =>
                        LHS: q_1286::node<_,l>@M
                        RHS: q_1286::node<_,l_284>@M
         ]]
@21! sorted action:[(1): Prio:0Match =>
                LHS: q_1286::node<_,l>@M
                RHS: q_1286::node<_,l_284>@M]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! estate: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: process_action :
 ### action =  Match =>
          Type: Root
          LHS: q_1286::node<_,l>@M
          RHS: q_1286::node<_,l_284>@M
 lhs_rest: emp
 rhs_rest: emp
 ### estate =  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
  es_heap:res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 ### conseq =  q_1286::node<_,l_284>@M&{FLOW,(21,22)=__norm}[]


@21! lhs_node: q_1286::node<_,l>@M
@21! lhs_rest: emp
@21! rhs_node: q_1286::node<_,l_284>@M
@21! rhs_rest: emp
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! new_estate(M_match): es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! subst:[]
@21!sh-rev.slk:11: 27: do_match: using  q_1286::node<_,l>@M to prove  q_1286::node<_,l_284>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: do_match: source LHS:  es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21!sh-rev.slk:11: 27: do_match: source RHS:  emp&{FLOW,(21,22)=__norm}[]
@21! add_to_lhs:[]
@21! add_to_rhs:[]
@21! Imm annotation mismatch (node lvl):false
@21! param_ann_lhs:[]
@21! param_ann_rhs:[]
@21! Imm annotation mismatch (field lvl):false
@21! l_args_ann:[]
@21! r_args_ann:[]
@21! view_param_ann_lhs:None
@21! view_param_ann_rhs:None
@21! Imm annotation mismatch (view param):false
@21! ann_lhs:None
@21! ann_rhs:None
@21! Imm annotation mismatch:false
@21! restore_hole_b:true
@21! l_h: emp
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! estate: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! r_h: emp
@21! new_l_args:[#,#]
@21! new_r_args:[#,#]
@21! new_l_holes:[0,1]
@21! new_r_holes:[0,1]
@21! rem_l_node: emp
@21! rem_r_node: emp
@21!  impl_vars: :[]
@21! other subs:[((Anon_302,Anon_14),?),((l_284,l),?)]
@21! other subs:[((Anon_302,Anon_14),?),((l_284,l),?)]
@21! ext_subst(bef filter out ann):[(Anon_302,Anon_14),(l_284,l)]
@21! to_rhs(bef ann): true
@21! to_lhs(bef ann): true
@21! ext_subst(bef ann):[(Anon_302,Anon_14),(l_284,l)]
@21! to_rhs: true
@21! to_lhs: true
@21! new_ante_p: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@21! new_conseq_p: true
@21! l_h: emp
@21! tmp_conseq: emp&{FLOW,(21,22)=__norm}[]
@21! r_ann:@M
@21! consumed_h: q_1286::node<_,l>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! new_consumed: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! new_ante: emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
{FLOW,(21,22)=__norm}[]
@21! new_conseq: emp&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! new_es: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: do_match (after): LHS:  es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21!sh-rev.slk:11: 27: do_match (after): RHS: emp&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct:
context:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! ctx0.es_heap bef: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! ctx0.es_heap after: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! h1: emp
@21! h2: emp
@21! p1: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@21! p2: true
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
conseq:
 emp&{FLOW,(21,22)=__norm}[]
@21! es_infer_vars_hp_rel :[]
@21! es_infer_vars :[]
@21! es_infer_vars_rel :[]
@21! es_infer_vars_sel_hp_rel :[]
@21! lhs_h: emp
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! estate_orig.es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! curr_lhs_h: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! lhs_p: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! curr_lhs_h0: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@21! f:#DN# q_1286::node<_,l>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! f:#VN# res::lseg<n_1296,q_1286>@M
@21! f:#DN# l::node<_,flted_10_282>@M
@21! f:#DN# q_1286::node<_,l>@M
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! f:#VN# res::lseg<n_1296,q_1286>@M
@21! f:#DN# l::node<_,flted_10_282>@M
@21! xpure_lhs_h1(bef merge): q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@21! xpure_lhs_h1: q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! es: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21!sh-rev.slk:11: 27: heap_entail_empty_heap: rhs:
 true
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! estate: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
@21! m_lhs: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@21! tmp3: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@21!sh-rev.slk:11: 27: rhs_p : : true
@21!sh-rev.slk:11: 27: conseq0 : : true
@21!sh-rev.slk:11: 27: conseq1 : : true
@21!sh-rev.slk:11: 27: >>>>>> entail_empty_heap: cp1 <<<<<<
@21!sh-rev.slk:11: 27: ante0 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@21!sh-rev.slk:11: 27: ante1 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@21!sh-rev.slk:11: 27: conseq : : true
@21!:0: 0: SAT #171
@21!:0: 0:  flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@21!sh-rev.slk:11: 27: heap_entail_empty_heap: formula is valid
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21!sh-rev.slk:11: 27: heap_entail_empty_heap: res_ctx:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@21! l_inst: true
@21! p2: true
@21! move_impl(l_inst):[]
@21! move_impl(to_elim_evars):[q_301,Anon_302,m_303,n_283,l_284,flted_11_285]
@21! move_impl(inst_to_keep):[]
@21! move_impl(f): true
@21! move_impl(new_to_elim):[]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! es: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! new_es: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! new_ctx: 
Good Context: 1[es_formula: 
                 emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
                 Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
                es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
                          l::node<_,flted_10_282>@M
                es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
                es_ante_evars: [flted_10_282]
                es_rhs_eqset: [n_283:n; l:l]
                es_trace: 
                  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
                 Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
                es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
                          l::node<_,flted_10_282>@M
                es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
                es_ante_evars: [flted_10_282]
                es_rhs_eqset: [n_283:n; l:l]
                es_subst (from): [_; l_284]
                es_subst (to): [_; l]
                es_trace: 
                  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! ctx0_lst match_: 
Good Context: 1[es_formula: 
                 emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
                 Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
                es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
                          l::node<_,flted_10_282>@M
                es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
                es_ante_evars: [flted_10_282]
                es_rhs_eqset: [n_283:n; l:l]
                es_subst (from): [_; l_284; m_303; q_301]
                es_subst (to): [_; l; n_1296; q_1286]
                es_trace: 
                  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! cl:[ es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! cl after subs:[ es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! cl after restore:[ es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@21! annot: 2
@21! annot: [0,0]
@21! p: 1
@21! i: 0
@21! i: 0
@21! p: 2
@21! i: 0
@21! i: 0
@21! view_args_pos: 2
@21! to_be_updated: 2
@21! hargs: 2
@22! new_conseq one_ctx_entail: emp&n_283=1+n_1296&{FLOW,(21,22)=__norm}[]
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22!sh-rev.slk:11: 27: heap_entail_conjunct:
context:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&n_283=1+n_1296&{FLOW,(21,22)=__norm}[]
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22!sh-rev.slk:11: 27: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&n_283=1+n_1296&{FLOW,(21,22)=__norm}[]
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! ctx0.es_heap bef: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! ctx0.es_heap after: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@22! h1: emp
@22! h2: emp
@22! p1: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@22! p2: n_283=1+n_1296
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22!sh-rev.slk:11: 27: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&n_283=1+n_1296&{FLOW,(21,22)=__norm}[]
@22! es_infer_vars_hp_rel :[]
@22! es_infer_vars :[]
@22! es_infer_vars_rel :[]
@22! es_infer_vars_sel_hp_rel :[]
@22! lhs_h: emp
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! estate_orig.es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! curr_lhs_h: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@22! lhs_p: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! curr_lhs_h0: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@22! f:#DN# q_1286::node<_,l>@M
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! f:#VN# res::lseg<n_1296,q_1286>@M
@22! f:#DN# l::node<_,flted_10_282>@M
@22! f:#DN# q_1286::node<_,l>@M
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! f:#VN# res::lseg<n_1296,q_1286>@M
@22! f:#DN# l::node<_,flted_10_282>@M
@22! xpure_lhs_h1(bef merge): q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@22! xpure_lhs_h1: q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! es: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22!sh-rev.slk:11: 27: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@22!sh-rev.slk:11: 27: heap_entail_empty_heap: rhs:
 n_283=1+n_1296
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! estate: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@22! m_lhs: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@22! tmp3: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@22!sh-rev.slk:11: 27: rhs_p : : n_283=1+n_1296
@22!sh-rev.slk:11: 27: conseq0 : : true
@22!sh-rev.slk:11: 27: conseq1 : : true
@22!sh-rev.slk:11: 27: >>>>>> entail_empty_heap: cp1 <<<<<<
@22!sh-rev.slk:11: 27: ante0 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@22!sh-rev.slk:11: 27: ante1 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@22!sh-rev.slk:11: 27: conseq : : true
@22!:0: 0: astaq?
@22!:0: 0: IMP #21
@22!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@22! ante-a0l:[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286]
@22! ante-a1l:[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286]
@22!:0: 0: ante: :[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286]
@22!:0: 0: coseq : : true
@22!:0: 0: h : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@22!:0: 0: res : :true
@22!:0: 0: ante: :[]
@22!:0: 0: coseq : : true
@22!:0: 0: SAT #172
@22!:0: 0:  flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@22!sh-rev.slk:11: 27: heap_entail_empty_heap: formula is valid
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22!sh-rev.slk:11: 27: heap_entail_empty_heap: res_ctx:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301]
 es_subst (to): [_; l; n_1296; q_1286]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@22! l_inst: true
@22! p2: n_283=1+n_1296
@22! move_impl(l_inst):[]
@22! move_impl(to_elim_evars):[q_301,Anon_302,m_303,n_283,l_284,flted_11_285]
@22! move_impl(inst_to_keep):[]
@22! move_impl(f): true
@22! move_impl(new_to_elim):[]
@22! annot: 2
@22! annot: [0,0]
@22! p: 1
@22! i: 0
@22! i: 0
@22! p: 2
@22! i: 0
@22! i: 0
@22! view_args_pos: 2
@22! to_be_updated: 2
@22! hargs: 2
@22! new_ctx: 
Good Context: 1[es_formula: 
                 emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
                 Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
                es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
                          l::node<_,flted_10_282>@M
                es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
                es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; 
                                flted_11_285]
                es_rhs_eqset: [n_283:n; l:l]
                es_subst (from): [_; l_284; m_303; q_301]
                es_subst (to): [_; l; n_1296; q_1286]
                es_trace: 
                  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

one_ctx_entail@22@21@20
one_ctx_entail inp1 : emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_ante_evars: [flted_10_282]

one_ctx_entail inp2 : res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M&n_283=1+m_303&
{FLOW,(21,22)=__norm}[]
one_ctx_entail inp3 : n_283=1+m_303
one_ctx_entail@22 EXIT: 1[
   emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
   ]

heap_n_pure_entail#1@21@20
heap_n_pure_entail#1 inp1 : es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M&flted_10_282=null & n=1+
  n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_trace:  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==> 
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : res::lseg<m_303,q_301>@M * q_301::node<_,l_284>@M
heap_n_pure_entail#1 inp3 : n_283=1+m_303
heap_n_pure_entail#1@21 EXIT:OK

@20! f(b4 elim_exists_es_his): emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
{FLOW,(21,22)=__norm}[]
@20! new_his(after elim_exists_es_his):[]
@20! f(after elim_exists_es_his): emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
{FLOW,(21,22)=__norm}[]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! ctx0_lst match_: 
Good Context: 2[es_formula: 
                 q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 
                 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
                es_heap: res::lseg<n_1296,q_1286>@M * 
                          l::node<_,flted_10_282>@M
                es_evars: [n_283; l_284; flted_11_285]
                es_ante_evars: [flted_10_282]
                es_rhs_eqset: [n_1296:n; q_1286:l]
                es_subst (from): [n_283; l_284]
                es_subst (to): [n_1296; q_1286]
                es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                es_infer_vars_rel: []; 
es_formula: 
 emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
 {FLOW,(21,22)=__norm}[]
es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
          l::node<_,flted_10_282>@M
es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
es_rhs_eqset: [n_283:n; l:l]
es_subst (from): [_; l_284; m_303; q_301]
es_subst (to): [_; l; n_1296; q_1286]
es_trace: 
  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
es_infer_vars_rel: []]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! ctx0_lst match_: 
Good Context: 2[es_formula: 
                 q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 
                 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
                es_heap: res::lseg<n_1296,q_1286>@M * 
                          l::node<_,flted_10_282>@M
                es_evars: [n_283; l_284; flted_11_285]
                es_ante_evars: [flted_10_282]
                es_rhs_eqset: [n_1296:n; q_1286:l]
                es_subst (from): [n_283; l_284; flted_11_285]
                es_subst (to): [n_1296; q_1286; flted_10_282]
                es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                es_infer_vars_rel: []; 
es_formula: 
 emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
 {FLOW,(21,22)=__norm}[]
es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
          l::node<_,flted_10_282>@M
es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
es_rhs_eqset: [n_283:n; l:l]
es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
es_trace: 
  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
es_infer_vars_rel: []]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! cl:[ es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_subst (from): [n_283; l_284; flted_11_285]
 es_subst (to): [n_1296; q_1286; flted_10_282]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: [], es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! cl after subs:[ es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_subst (from): [n_283; l_284; flted_11_285]
 es_subst (to): [n_1296; q_1286; flted_10_282]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: [], es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! cl after restore:[ es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_subst (from): [n_283; l_284; flted_11_285]
 es_subst (to): [n_1296; q_1286; flted_10_282]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: [], es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []]
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@23! new_conseq one_ctx_entail: emp&flted_10_282=null & n=n_1296 & l=q_1286&{FLOW,(21,22)=__norm}[]
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23!sh-rev.slk:11: 27: heap_entail_conjunct:
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_subst (from): [n_283; l_284; flted_11_285]
 es_subst (to): [n_1296; q_1286; flted_10_282]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&flted_10_282=null & n=n_1296 & l=q_1286&{FLOW,(21,22)=__norm}[]
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23!sh-rev.slk:11: 27: heap_entail_conjunct_helper:
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_subst (from): [n_283; l_284; flted_11_285]
 es_subst (to): [n_1296; q_1286; flted_10_282]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&flted_10_282=null & n=n_1296 & l=q_1286&{FLOW,(21,22)=__norm}[]
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23! ctx0.es_heap bef: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23! ctx0.es_heap after: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@23! h1: q_1286::node<_,l>@M
@23! h2: emp
@23! p1: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@23! p2: flted_10_282=null & n=n_1296 & l=q_1286
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23!sh-rev.slk:11: 27: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_subst (from): [n_283; l_284; flted_11_285]
 es_subst (to): [n_1296; q_1286; flted_10_282]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&flted_10_282=null & n=n_1296 & l=q_1286&{FLOW,(21,22)=__norm}[]
@23! es_infer_vars_hp_rel :[]
@23! es_infer_vars :[]
@23! es_infer_vars_rel :[]
@23! es_infer_vars_sel_hp_rel :[]
@23! lhs_h: q_1286::node<_,l>@M
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23! estate_orig.es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23! curr_lhs_h: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@23! lhs_p: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23! curr_lhs_h0: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@23! f:#DN# q_1286::node<_,l>@M
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23! f:#VN# res::lseg<n_1296,q_1286>@M
@23! f:#DN# l::node<_,flted_10_282>@M
@23! f:#DN# q_1286::node<_,l>@M
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23! f:#VN# res::lseg<n_1296,q_1286>@M
@23! f:#DN# l::node<_,flted_10_282>@M
@23! xpure_lhs_h1(bef merge): q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23! xpure_lhs_h1: q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23! es: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_subst (from): [n_283; l_284; flted_11_285]
 es_subst (to): [n_1296; q_1286; flted_10_282]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23!sh-rev.slk:11: 27: heap_entail_empty_heap: ctx:
 es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_subst (from): [n_283; l_284; flted_11_285]
 es_subst (to): [n_1296; q_1286; flted_10_282]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
@23!sh-rev.slk:11: 27: heap_entail_empty_heap: rhs:
 flted_10_282=null & n=n_1296 & l=q_1286
@23! annot: 2
@23! annot: [0,0]
@23! p: 1
@23! i: 0
@23! i: 0
@23! p: 2
@23! i: 0
@23! i: 0
@23! view_args_pos: 2
@23! to_be_updated: 2
@23! hargs: 2
@23! estate: es_formula: 
  q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
  Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_rhs_eqset: [n_1296:n; q_1286:l]
 es_subst (from): [n_283; l_284; flted_11_285]
 es_subst (to): [n_1296; q_1286; flted_10_282]
 es_trace:  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
@23! m_lhs: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@23! tmp3: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!sh-rev.slk:11: 27: rhs_p : : flted_10_282=null & n=n_1296 & l=q_1286
@23!sh-rev.slk:11: 27: conseq0 : : flted_10_282=null & n=n_1296 & l=q_1286
@23!sh-rev.slk:11: 27: conseq1 : : flted_10_282=null & n=n_1296 & l=q_1286
@23!sh-rev.slk:11: 27: >>>>>> entail_empty_heap: cp1 <<<<<<
@23!sh-rev.slk:11: 27: ante0 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@23!sh-rev.slk:11: 27: ante1 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!sh-rev.slk:11: 27: conseq : : flted_10_282=null & n=n_1296 & l=q_1286
@23!:0: 0: astaq?
@23!:0: 0: IMP #22
@23!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@23! ante-a0l:[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286]
@23! ante-a1l:[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286]
@23!:0: 0: ante: :[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286]
@23!:0: 0: coseq : : flted_10_282=null
@23!:0: 0: h : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@23!:0: 0: ante 1: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@23!:0: 0: ante 3: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@23!:0: 0: ante 4: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@23!:0: 0: IMP #173
@23!:0: 0: imply_timeout: ante:  flted_10_282=null
@23!:0: 0: imply_timeout: conseq:  flted_10_282=null
@23! Ann Vars:[]
@23! Inv: flted_10_282=null
@23!:0: 0: res: :true
@23!:0: 0: res : :true
@23!:0: 0: ante: :[]
@23!:0: 0: coseq : : flted_10_282=null
@23!:0: 0: ante: :[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286]
@23!:0: 0: coseq : : n=n_1296
@23!:0: 0: h : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@23!:0: 0: ante 1: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@23!:0: 0: ante 3: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@23!:0: 0: ante 4: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@23!:0: 0: IMP #174
@23!:0: 0: imply_timeout: ante:  n=1+n_1296 & 1<n_1296 & 0<=n_1296
@23!:0: 0: imply_timeout: conseq:  n=n_1296
@23! Ann Vars:[]
@23! Inv: n=1+n_1296 & 1<n_1296 & 0<=n_1296
@23!:0: 0: res: :false
@23!:0: 0: res : :false
@23!:0: 0: ante: :[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286]
@23!:0: 0: coseq : : n=n_1296
@23!:0: 0: h : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: ante 1: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: ante 3: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: ante 4: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: IMP #175
@23!:0: 0: imply_timeout: ante:  l!=null & l!=q_1286 & q_1286!=null & n=1+n_1296 & 1<n_1296 & (((1<=n_1296 & 
res!=null & q_1286!=res) | (q_1286=res & n_1296=0)))
@23!:0: 0: imply_timeout: conseq:  n=n_1296
@23! Ann Vars:[]
@23! Inv: l!=null & l!=q_1286 & q_1286!=null & n=1+n_1296 & 1<n_1296 & (((1<=n_1296 & 
res!=null & q_1286!=res) | (q_1286=res & n_1296=0)))
@23!:0: 0: res: :false
@23!:0: 0: res : :false
@23! finish_flag::false
@23!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@23! ante-a0l:[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286]
@23! ante-a1l:[]
@23!:0: 0: ante: :[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286]
@23!:0: 0: coseq : : flted_10_282=null
@23!:0: 0: h : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: ante 1: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: ante 3: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: ante 4: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: IMP #176
@23!:0: 0: imply_timeout: ante:  flted_10_282=null
@23!:0: 0: imply_timeout: conseq:  flted_10_282=null
@23!:0: 0: res: :true
@23!:0: 0: res : :true
@23!:0: 0: ante: :[]
@23!:0: 0: coseq : : flted_10_282=null
@23!:0: 0: ante: :[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286]
@23!:0: 0: coseq : : n=n_1296
@23!:0: 0: h : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: ante 1: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: ante 3: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: ante 4: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@23!:0: 0: IMP #177
@23!:0: 0: imply_timeout: ante:  l!=null & l!=q_1286 & q_1286!=null & n=1+n_1296 & 1<n_1296 & (((1<=n_1296 & 
res!=null & q_1286!=res) | (q_1286=res & n_1296=0)))
@23!:0: 0: imply_timeout: conseq:  n=n_1296
@23!:0: 0: res: :false
@23!:0: 0: res : :false
@23!:0: 0: SAT #178
@23!:0: 0:  l=q_1286
@23!:0: 0: SAT #179
@23!:0: 0:  n=n_1296
@23!:0: 0: SAT #180
@23!:0: 0:  flted_10_282=null
@23!:0: 0: SAT #181
@23!:0: 0:  l!=q_1286 & l!=null & q_1286!=null & l=q_1286
@23!:0: 0: SAT #182
@23!:0: 0:  0<=n_1296 & 1<n_1296 & n=1+n_1296 & n=n_1296
@23!:0: 0: SAT #183
@23!:0: 0:  flted_10_282=null & flted_10_282=null
@23!:0: 0: SAT #184
@23!:0: 0:  l!=q_1286 & l!=null & q_1286!=null & l=q_1286
@23!:0: 0: SAT #185
@23!:0: 0:  0<=n_1296 & 1<n_1296 & n=1+n_1296 & n=n_1296
@23!:0: 0: SAT #186
@23!:0: 0:  flted_10_282=null & flted_10_282!=null
@23!sh-rev.slk:11: 27: heap_entail_empty_rhs_heap: formula is not valid

@23! new_ctx: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: logical bug
                   fe_locs: {
                             fc_message: 
                              AndR[ l!=q_1286 & l!=null & q_1286!=null |-  l=q_1286. LOCS:[0;10;11];  0<=n_1296 & 1<n_1296 & n=1+n_1296 |-  n=n_1296. LOCS:[6;11] (must-bug).]
                             fc_current_lhs_flow: {FLOW,(3,4)=__Error}}

one_ctx_entail@23@20
one_ctx_entail inp1 : q_1286::node<_,l>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
 es_ante_evars: [flted_10_282]

one_ctx_entail inp2 : res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M&flted_11_285=null & 
n=n_283 & l=l_284&{FLOW,(21,22)=__norm}[]
one_ctx_entail inp3 : flted_11_285=null & n=n_283 & l=l_284
one_ctx_entail@23 EXIT: failctx
         fe_kind: MUST
         fe_name: logical bug
         fe_locs: {
                   fc_message: 
                    AndR[ l!=q_1286 & l!=null & q_1286!=null |-  l=q_1286. LOCS:[0;10;11];  0<=n_1296 & 1<n_1296 & n=1+n_1296 |-  n=n_1296. LOCS:[6;11] (must-bug).]
                   fc_current_lhs_flow: {FLOW,(3,4)=__Error}}

@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@20! annot: 2
@20! annot: [0,0]
@20! p: 1
@20! i: 0
@20! i: 0
@20! p: 2
@20! i: 0
@20! i: 0
@20! view_args_pos: 2
@20! to_be_updated: 2
@20! hargs: 2
@24! new_conseq one_ctx_entail: emp&flted_10_282=null & n=n_283 & l=l&{FLOW,(21,22)=__norm}[]
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24!sh-rev.slk:11: 27: heap_entail_conjunct:
context:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&flted_10_282=null & n=n_283 & l=l&{FLOW,(21,22)=__norm}[]
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24!sh-rev.slk:11: 27: heap_entail_conjunct_helper:
context:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&flted_10_282=null & n=n_283 & l=l&{FLOW,(21,22)=__norm}[]
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! ctx0.es_heap bef: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! ctx0.es_heap after: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@24! h1: emp
@24! h2: emp
@24! p1: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@24! p2: flted_10_282=null & n=n_283 & l=l
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24!sh-rev.slk:11: 27: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
conseq:
 emp&flted_10_282=null & n=n_283 & l=l&{FLOW,(21,22)=__norm}[]
@24! es_infer_vars_hp_rel :[]
@24! es_infer_vars :[]
@24! es_infer_vars_rel :[]
@24! es_infer_vars_sel_hp_rel :[]
@24! lhs_h: emp
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! estate_orig.es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! curr_lhs_h: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@24! lhs_p: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! curr_lhs_h0: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * l::node<_,flted_10_282>@M
@24! f:#DN# q_1286::node<_,l>@M
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! f:#VN# res::lseg<n_1296,q_1286>@M
@24! f:#DN# l::node<_,flted_10_282>@M
@24! f:#DN# q_1286::node<_,l>@M
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! f:#VN# res::lseg<n_1296,q_1286>@M
@24! f:#DN# l::node<_,flted_10_282>@M
@24! xpure_lhs_h1(bef merge): q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@24! xpure_lhs_h1: q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! es: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24!sh-rev.slk:11: 27: heap_entail_empty_heap: ctx:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@24!sh-rev.slk:11: 27: heap_entail_empty_heap: rhs:
 flted_10_282=null & n=n_283 & l=l
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! estate: es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@24! m_lhs: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@24! tmp3: flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@24!sh-rev.slk:11: 27: rhs_p : : flted_10_282=null & n=n_283 & l=l
@24!sh-rev.slk:11: 27: conseq0 : : l=l & flted_10_282=null
@24!sh-rev.slk:11: 27: conseq1 : : l=l & flted_10_282=null
@24!sh-rev.slk:11: 27: >>>>>> entail_empty_heap: cp1 <<<<<<
@24!sh-rev.slk:11: 27: ante0 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@24!sh-rev.slk:11: 27: ante1 : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286
@24!sh-rev.slk:11: 27: conseq : : l=l & flted_10_282=null
@24!:0: 0: astaq?
@24!:0: 0: IMP #23
@24!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
@24! ante-a0l:[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286]
@24! ante-a1l:[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & (((1<=n_1296 & res!=null & q_1286!=res) | (q_1286=res & 
n_1296=0))) & l!=null & l!=q_1286]
@24!:0: 0: ante: :[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286]
@24!:0: 0: coseq : : l=l
@24!:0: 0: h : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@24!:0: 0: ante 1: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@24!:0: 0: ante 3: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@24!:0: 0: ante 4: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@24!:0: 0: IMP #187
@24!:0: 0: imply_timeout: ante:  q_1286!=null & l!=null & l!=q_1286
@24!:0: 0: imply_timeout: conseq:  l=l
@24! Ann Vars:[]
@24! Inv: q_1286!=null & l!=null & l!=q_1286
@24!:0: 0: res: :true
@24!:0: 0: res : :true
@24!:0: 0: ante: :[]
@24!:0: 0: coseq : : l=l
@24!:0: 0: ante: :[ flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286]
@24!:0: 0: coseq : : flted_10_282=null
@24!:0: 0: h : : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@24!:0: 0: ante 1: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@24!:0: 0: ante 3: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@24!:0: 0: ante 4: : flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16 & 
q_1286!=null & 0<=n_1296 & l!=null & l!=q_1286
@24!:0: 0: IMP #188
@24!:0: 0: imply_timeout: ante:  flted_10_282=null
@24!:0: 0: imply_timeout: conseq:  flted_10_282=null
@24!:0: 0: res: :true
@24!:0: 0: res : :true
@24!:0: 0: ante: :[]
@24!:0: 0: coseq : : flted_10_282=null
@24!:0: 0: SAT #189
@24!:0: 0:  flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16
@24!sh-rev.slk:11: 27: heap_entail_empty_heap: formula is valid
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24!sh-rev.slk:11: 27: heap_entail_empty_heap: res_ctx:
 es_formula: 
  emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&
  {FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]
 es_rhs_eqset: [n_283:n; l:l]
 es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
 es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
 es_trace: 
   Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
 es_infer_vars_rel: []
@24! l_inst: true
@24! p2: flted_10_282=null & n=n_283 & l=l
@24! move_impl(l_inst):[]
@24! move_impl(to_elim_evars):[q_301,Anon_302,m_303,n_283,l_284,flted_11_285]
@24! move_impl(inst_to_keep):[]
@24! move_impl(f): true
@24! move_impl(new_to_elim):[]
@24! annot: 2
@24! annot: [0,0]
@24! p: 1
@24! i: 0
@24! i: 0
@24! p: 2
@24! i: 0
@24! i: 0
@24! view_args_pos: 2
@24! to_be_updated: 2
@24! hargs: 2
@24! new_ctx: 
Good Context: 1[es_formula: 
                 emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & 
                 Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
                es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
                          l::node<_,flted_10_282>@M
                es_evars: [q_301; _; m_303; n_283; l_284; flted_11_285]
                es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; 
                                flted_11_285; q_301; _; m_303; n_283; l_284; 
                                flted_11_285]
                es_rhs_eqset: [n_283:n; l:l]
                es_subst (from): [_; l_284; m_303; q_301; flted_11_285]
                es_subst (to): [_; l; n_1296; q_1286; flted_10_282]
                es_trace: 
                  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> 
                es_infer_vars_rel: []]

one_ctx_entail@24@20
one_ctx_entail inp1 : emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
 es_heap: q_1286::node<_,l>@M * res::lseg<n_1296,q_1286>@M * 
           l::node<_,flted_10_282>@M
 es_ante_evars: [flted_10_282; q_301; _; m_303; n_283; l_284; flted_11_285]

one_ctx_entail inp2 : res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M&flted_11_285=null & 
n=n_283 & l=l_284&{FLOW,(21,22)=__norm}[]
one_ctx_entail inp3 : flted_11_285=null & n=n_283 & l=l_284
one_ctx_entail@24 EXIT: 1[
   emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm}[]
   ]

heap_n_pure_entail#1@20
heap_n_pure_entail#1 inp1 : es_formula: 
  res::lseg<n_1296,q_1286>@M * q_1286::node<_,l>@M * 
  l::node<_,flted_10_282>@M&flted_10_282=null & n=1+n_1296 & 1<n_1296&
  {FLOW,(21,22)=__norm}[]
 es_evars: [n_283; l_284; flted_11_285]
 es_ante_evars: [flted_10_282]
 es_gen_impl_vars: [_]
 es_rhs_eqset: [n_283:n; l_284:l]
 es_infer_vars_rel: []
heap_n_pure_entail#1 inp2 : res::lseg<n_283,l_284>@M * l::node<_,flted_11_285>@M
heap_n_pure_entail#1 inp3 : flted_11_285=null & n=n_283 & l=l_284
heap_n_pure_entail#1@20 EXIT:OK

Entail 1: Valid. 

 <1>(exists flted_10_282: emp&flted_10_282=null & n=1+n_1296 & 1<n_1296 & Anon_15=Anon_16&{FLOW,(21,22)=__norm})[]
[[ Match ==>  SEARCH ==>  (Lemma <== lem_13) ==> (right: lem_13) ==>  Match ==>  Match ==> ]]

Stop Omega... 108 invocations 
SAT Count   : 107
IMPLY Count : 64

