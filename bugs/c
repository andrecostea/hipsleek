Starting z3... 

fold_context_left#4@1
fold_context_left#4 inp1 : 1[
   emp&(self=yyy | (self!=yyy & self!=null))&{FLOW,(1,24)=__flow}[]
   ]
fold_context_left#4@1 EXIT: 1[
   emp&(self=yyy | (self!=yyy & self!=null))&{FLOW,(1,24)=__flow}[]
   ]
Starting Omega...oc

!!! 
Updated lemma store with unsafe repo::[lem_11]
do_base_case_unfold_only@2
do_base_case_unfold_only inp1 :ante:: x::ls<y> * y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&
{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp2 :conseq:: x::ls<z_69> * z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp3 :LHS node: x::ls<y>
do_base_case_unfold_only inp4 :RHS node: x::ls<z_69>
do_base_case_unfold_only@2 EXIT:None

subtype_ann_pair@4@3
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@4 EXIT:(true,None)

subtype_ann_gen@3
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@3 EXIT:(true,[],[],[])

do_base_case_unfold_only@5
do_base_case_unfold_only inp1 :ante:: y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp2 :conseq:: z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp3 :LHS node: y::ls<z>
do_base_case_unfold_only inp4 :RHS node: z::ls<flted_19_70>
do_base_case_unfold_only@5 EXIT:None

subtype_ann_pair@7@6
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@7 EXIT:(true,None)

subtype_ann_gen@6
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@6 EXIT:(true,[],[],[])

fold_fun_impt@8
fold_fun_impt inp1 : true
fold_fun_impt@8 EXIT:true

vdef_lemma_fold@9
vdef_lemma_fold inp1 :None
vdef_lemma_fold@9 EXIT:Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){13}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)

!!! do_fold: form: EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula: EBase (exists z_73,flted_13_74,u_75: self::ls<u_75> * u_75::ls<z_73> * 
       yyy::ls<flted_13_74>@L&flted_13_74=null & z_73=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula 2: EBase (exists z_73,flted_13_74,u_75: self::ls<u_75> * u_75::ls<z_73> * 
       yyy::ls<flted_13_74>@L&flted_13_74=null & z_73=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 2: EBase (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
       flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 21: EBase (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
       flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 22: EBase (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
       flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 23: EBase (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
       flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 24: EBase (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
       flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 25: EBase (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
       flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@18@17@16@15@14@13@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@18 EXIT:(true,None)

subtype_ann#4@17@16@15@14@13@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@17 EXIT:true

subtype_ann_pair@20@19@16@15@14@13@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@20 EXIT:(true,None)

subtype_ann#4@19@16@15@14@13@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@19 EXIT:true

propagate_imm_h_formula@16@15@14@13@12@11@10
propagate_imm_h_formula inp1 : z::ls<u_75>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@16 EXIT: z::ls<u_75>

subtype_ann_pair@23@22@21@15@14@13@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@23 EXIT:(true,None)

subtype_ann#4@22@21@15@14@13@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@22 EXIT:true

subtype_ann_pair@25@24@21@15@14@13@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@25 EXIT:(true,None)

subtype_ann#4@24@21@15@14@13@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@24 EXIT:true

propagate_imm_h_formula@21@15@14@13@12@11@10
propagate_imm_h_formula inp1 : u_75::ls<z_73>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@21 EXIT: u_75::ls<z_73>

propagate_imm_h_formula@15@14@13@12@11@10
propagate_imm_h_formula inp1 : z::ls<u_75> * u_75::ls<z_73>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@15 EXIT: z::ls<u_75> * u_75::ls<z_73>

subtype_ann_pair@28@27@26@14@13@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@28 EXIT:(true,None)

subtype_ann#4@27@26@14@13@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@27 EXIT:true

subtype_ann_pair@30@29@26@14@13@12@11@10
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@30 EXIT:(true,None)

subtype_ann#4@29@26@14@13@12@11@10
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@29 EXIT:true

propagate_imm_h_formula@26@14@13@12@11@10
propagate_imm_h_formula inp1 : flted_19_70::ls<flted_13_74>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@26 EXIT: flted_19_70::ls<flted_13_74>@L

propagate_imm_h_formula@14@13@12@11@10
propagate_imm_h_formula inp1 : z::ls<u_75> * u_75::ls<z_73> * flted_19_70::ls<flted_13_74>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@14 EXIT: z::ls<u_75> * u_75::ls<z_73> * flted_19_70::ls<flted_13_74>@L

propagate_imm_formula@13@12@11@10
propagate_imm_formula inp1 :formula: (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
{FLOW,(21,22)=__norm})[]
propagate_imm_formula inp2 :view_name:ls
propagate_imm_formula inp3 :imm:
propagate_imm_formula inp4 :map:[(,)]
propagate_imm_formula@13 EXIT: (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
{FLOW,(21,22)=__norm})[]

!!! do_fold: view_form 26: EBase (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
       flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 3: EBase (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
       flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 4: EBase (exists z_73,flted_13_74,u_75: z::ls<u_75> * u_75::ls<z_73> * 
       flted_19_70::ls<flted_13_74>@L&flted_13_74=null & z_73=flted_19_70&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@32@31@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@32 EXIT:(true,None)

subtype_ann_gen@31@12@11@10
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_78,flted_13_79,u_80,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@31 EXIT:(true,[],[],[])

do_base_case_unfold_only@33@12@11@10
do_base_case_unfold_only inp1 :ante:: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp2 :conseq:: z::ls<z_78> * flted_19_70::ls<flted_13_79>@L&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp3 :LHS node: z::ls<flted_18_53>
do_base_case_unfold_only inp4 :RHS node: z::ls<z_78>
do_base_case_unfold_only@33 EXIT:None

subtype_ann_pair@35@34@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@35 EXIT:(true,None)

subtype_ann_gen@34@12@11@10
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_78,flted_13_79,u_80,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@34 EXIT:(true,[],[],[])

vdef_lemma_fold@36@12@11@10
vdef_lemma_fold inp1 :Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){13}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)
vdef_lemma_fold@36 EXIT:Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){14}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)

!!! do_fold: form: EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula: EBase (exists z_83,flted_13_84,u_85: self::ls<u_85> * u_85::ls<z_83> * 
       yyy::ls<flted_13_84>@L&flted_13_84=null & z_83=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula 2: EBase (exists z_83,flted_13_84,u_85: self::ls<u_85> * u_85::ls<z_83> * 
       yyy::ls<flted_13_84>@L&flted_13_84=null & z_83=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 2: EBase (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
       z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 21: EBase (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
       z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 22: EBase (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
       z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 23: EBase (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
       z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 24: EBase (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
       z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 25: EBase (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
       z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@45@44@43@42@41@40@39@38@37@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@45 EXIT:(true,None)

subtype_ann#4@44@43@42@41@40@39@38@37@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@44 EXIT:true

subtype_ann_pair@47@46@43@42@41@40@39@38@37@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@47 EXIT:(true,None)

subtype_ann#4@46@43@42@41@40@39@38@37@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@46 EXIT:true

propagate_imm_h_formula@43@42@41@40@39@38@37@12@11@10
propagate_imm_h_formula inp1 : z::ls<u_85>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@43 EXIT: z::ls<u_85>

subtype_ann_pair@50@49@48@42@41@40@39@38@37@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@50 EXIT:(true,None)

subtype_ann#4@49@48@42@41@40@39@38@37@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@49 EXIT:true

subtype_ann_pair@52@51@48@42@41@40@39@38@37@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@52 EXIT:(true,None)

subtype_ann#4@51@48@42@41@40@39@38@37@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@51 EXIT:true

propagate_imm_h_formula@48@42@41@40@39@38@37@12@11@10
propagate_imm_h_formula inp1 : u_85::ls<z_83>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@48 EXIT: u_85::ls<z_83>

propagate_imm_h_formula@42@41@40@39@38@37@12@11@10
propagate_imm_h_formula inp1 : z::ls<u_85> * u_85::ls<z_83>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@42 EXIT: z::ls<u_85> * u_85::ls<z_83>

subtype_ann_pair@55@54@53@41@40@39@38@37@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@55 EXIT:(true,None)

subtype_ann#4@54@53@41@40@39@38@37@12@11@10
subtype_ann#4 inp1 : <: ?
subtype_ann#4@54 EXIT:true

subtype_ann_pair@57@56@53@41@40@39@38@37@12@11@10
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@57 EXIT:(true,None)

subtype_ann#4@56@53@41@40@39@38@37@12@11@10
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@56 EXIT:true

propagate_imm_h_formula@53@41@40@39@38@37@12@11@10
propagate_imm_h_formula inp1 : z_78::ls<flted_13_84>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@53 EXIT: z_78::ls<flted_13_84>@L

propagate_imm_h_formula@41@40@39@38@37@12@11@10
propagate_imm_h_formula inp1 : z::ls<u_85> * u_85::ls<z_83> * z_78::ls<flted_13_84>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@41 EXIT: z::ls<u_85> * u_85::ls<z_83> * z_78::ls<flted_13_84>@L

propagate_imm_formula@40@39@38@37@12@11@10
propagate_imm_formula inp1 :formula: (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&{FLOW,(21,22)=__norm})[]
propagate_imm_formula inp2 :view_name:ls
propagate_imm_formula inp3 :imm:
propagate_imm_formula inp4 :map:[(,)]
propagate_imm_formula@40 EXIT: (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&{FLOW,(21,22)=__norm})[]

!!! do_fold: view_form 26: EBase (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
       z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 3: EBase (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
       z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 4: EBase (exists z_83,flted_13_84,u_85: z::ls<u_85> * u_85::ls<z_83> * 
       z_78::ls<flted_13_84>@L&flted_13_84=null & z_83=z_78&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@59@58@39@38@37@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@59 EXIT:(true,None)

subtype_ann_gen@58@39@38@37@12@11@10
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_88,flted_13_89,u_90,z_78,flted_13_79,u_80,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@58 EXIT:(true,[],[],[])

fold_op@39@38@37@12@11@10
fold_op inp1 : EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
fold_op inp2 :
 context: es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_78; flted_13_79; u_80; z_69; flted_19_70]
 es_rhs_eqset: [y:z; z_78:flted_19_70]
 es_trace: 
   COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 rhs view : z::ls<z_78>
 rhs view annot :[]
 rhs_p (pure) : true
fold_op@39 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold_w_ctx@38@37@12@11@10
do_fold_w_ctx inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_78; flted_13_79; u_80; z_69; flted_19_70]
 es_rhs_eqset: [y:z; z_78:flted_19_70]
 es_trace: 
   COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold_w_ctx inp2 :
 conseq =  z::ls<z_78> * flted_19_70::ls<flted_13_79>@L&{FLOW,(21,22)=__norm}[]
 rhs_node =  z::ls<z_78>
 vd =  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
 rhs_rest =  flted_19_70::ls<flted_13_79>@L
 rhs_b =  z::ls<z_78> * flted_19_70::ls<flted_13_79>@L&{FLOW,(21,22)=__norm}[]
do_fold_w_ctx inp3 :true
do_fold_w_ctx@38 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold@37@12@11@10
do_fold inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_78; flted_13_79; u_80; z_69; flted_19_70]
 es_rhs_eqset: [y:z; z_78:flted_19_70]
 es_trace: 
   COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold inp2 :Some(([],[], view ls[]<yyy:node>= 
  view_domains: view ls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  view vars: yyy
  ann vars (0 - not a posn): (,0)
  cont vars: yyy
  inv: true
  inv_lock: None
  unstructured formula: 
   (* lbl: *){14}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * (emp)&(((yyy!=null & flted_13_50!=yyy) | 
   flted_13_50=yyy)) & flted_13_50=null & z_49=yyy&{FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  is_primitive?: false
  is_touching?: false
  is_segmented?: true
  is_tail_recursive?: false
  forward_ptrs: yyy
  backward_ptrs: 
  forward_fields: node.f0
  backward_fields: 
  aux formula: emp&{FLOW,(1,24)=__flow}[]|| emp&self!=yyy&{FLOW,(1,24)=__flow}[]
  same_xpure?: NO
  view_data_name: node
  self preds: []
  materialized vars: [(self,partial,[])]
  addr vars: self
  uni_vars: []
  bag of addr: 
  raw base case: (* lbl: *){1}->emp&self=yyy&{FLOW,(1,24)=__flow}[]
  base case: self=yyy->self=yyy
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]))
do_fold@37 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


fold_context_left#14@60@12@11@10
fold_context_left#14 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#14@60 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#15@61@12@11@10
fold_context_left#15 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#15@61 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#13@62@12@11@10
fold_context_left#13 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]
 failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#13@62 EXIT: failctx
         
          fe_kind: MUST
          fe_name: separation entailment
          fe_locs: {
                    fc_message: infer_heap_node
                    fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]
        FAIL_UNION 
         
          fe_kind: MUST
          fe_name: separation entailment
          fe_locs: {
                    fc_message: infer_heap_node
                    fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
        

subtype_ann_pair@64@63@12@11@10
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@64 EXIT:(true,None)

subtype_ann_gen@63@12@11@10
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_78,flted_13_79,u_80,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@63 EXIT:(true,[],[],[])

fold_op@12@11@10
fold_op inp1 : EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
fold_op inp2 :
 context: es_formula: 
  y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: x::ls<y>
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [y:z]
 es_trace: 
   COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 rhs view : z::ls<flted_19_70>
 rhs view annot :[]
 rhs_p (pure) : true
fold_op@12 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold_w_ctx@11@10
do_fold_w_ctx inp1 : es_formula: 
  y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: x::ls<y>
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [y:z]
 es_trace: 
   COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold_w_ctx inp2 :
 conseq =  z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
 rhs_node =  z::ls<flted_19_70>
 vd =  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
 rhs_rest =  emp
 rhs_b =  z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
do_fold_w_ctx inp3 :false
do_fold_w_ctx@11 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold@10
do_fold inp1 : es_formula: 
  y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: x::ls<y>
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [y:z]
 es_trace: 
   COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold inp2 :Some(([],[], view ls[]<yyy:node>= 
  view_domains: view ls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  view vars: yyy
  ann vars (0 - not a posn): (,0)
  cont vars: yyy
  inv: true
  inv_lock: None
  unstructured formula: 
   (* lbl: *){13}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * (emp)&(((yyy!=null & flted_13_50!=yyy) | 
   flted_13_50=yyy)) & flted_13_50=null & z_49=yyy&{FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  is_primitive?: false
  is_touching?: false
  is_segmented?: true
  is_tail_recursive?: false
  forward_ptrs: yyy
  backward_ptrs: 
  forward_fields: node.f0
  backward_fields: 
  aux formula: emp&{FLOW,(1,24)=__flow}[]|| emp&self!=yyy&{FLOW,(1,24)=__flow}[]
  same_xpure?: NO
  view_data_name: node
  self preds: []
  materialized vars: [(self,partial,[])]
  addr vars: self
  uni_vars: []
  bag of addr: 
  raw base case: (* lbl: *){1}->emp&self=yyy&{FLOW,(1,24)=__flow}[]
  base case: self=yyy->self=yyy
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]))
do_fold@10 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


fold_context_left#14@65
fold_context_left#14 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#14@65 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#15@66
fold_context_left#15 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#15@66 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#13@67
fold_context_left#13 inp1 : 1[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
 failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  COND ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#13@67 EXIT: 1[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

vdef_lemma_fold@68
vdef_lemma_fold inp1 :Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){14}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)
vdef_lemma_fold@68 EXIT:Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){15}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)

!!! do_fold: form: EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula: EBase (exists z_93,flted_13_94,u_95: self::ls<u_95> * u_95::ls<z_93> * 
       yyy::ls<flted_13_94>@L&flted_13_94=null & z_93=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula 2: EBase (exists z_93,flted_13_94,u_95: self::ls<u_95> * u_95::ls<z_93> * 
       yyy::ls<flted_13_94>@L&flted_13_94=null & z_93=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 2: EBase (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
       z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 21: EBase (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
       z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 22: EBase (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
       z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 23: EBase (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
       z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 24: EBase (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
       z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 25: EBase (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
       z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@77@76@75@74@73@72@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@77 EXIT:(true,None)

subtype_ann#4@76@75@74@73@72@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@76 EXIT:true

subtype_ann_pair@79@78@75@74@73@72@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@79 EXIT:(true,None)

subtype_ann#4@78@75@74@73@72@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@78 EXIT:true

propagate_imm_h_formula@75@74@73@72@71@70@69
propagate_imm_h_formula inp1 : x::ls<u_95>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@75 EXIT: x::ls<u_95>

subtype_ann_pair@82@81@80@74@73@72@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@82 EXIT:(true,None)

subtype_ann#4@81@80@74@73@72@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@81 EXIT:true

subtype_ann_pair@84@83@80@74@73@72@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@84 EXIT:(true,None)

subtype_ann#4@83@80@74@73@72@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@83 EXIT:true

propagate_imm_h_formula@80@74@73@72@71@70@69
propagate_imm_h_formula inp1 : u_95::ls<z_93>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@80 EXIT: u_95::ls<z_93>

propagate_imm_h_formula@74@73@72@71@70@69
propagate_imm_h_formula inp1 : x::ls<u_95> * u_95::ls<z_93>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@74 EXIT: x::ls<u_95> * u_95::ls<z_93>

subtype_ann_pair@87@86@85@73@72@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@87 EXIT:(true,None)

subtype_ann#4@86@85@73@72@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@86 EXIT:true

subtype_ann_pair@89@88@85@73@72@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@89 EXIT:(true,None)

subtype_ann#4@88@85@73@72@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@88 EXIT:true

propagate_imm_h_formula@85@73@72@71@70@69
propagate_imm_h_formula inp1 : z_69::ls<flted_13_94>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@85 EXIT: z_69::ls<flted_13_94>@L

propagate_imm_h_formula@73@72@71@70@69
propagate_imm_h_formula inp1 : x::ls<u_95> * u_95::ls<z_93> * z_69::ls<flted_13_94>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@73 EXIT: x::ls<u_95> * u_95::ls<z_93> * z_69::ls<flted_13_94>@L

propagate_imm_formula@72@71@70@69
propagate_imm_formula inp1 :formula: (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&{FLOW,(21,22)=__norm})[]
propagate_imm_formula inp2 :view_name:ls
propagate_imm_formula inp3 :imm:
propagate_imm_formula inp4 :map:[(,)]
propagate_imm_formula@72 EXIT: (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&{FLOW,(21,22)=__norm})[]

!!! do_fold: view_form 26: EBase (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
       z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 3: EBase (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
       z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 4: EBase (exists z_93,flted_13_94,u_95: x::ls<u_95> * u_95::ls<z_93> * 
       z_69::ls<flted_13_94>@L&flted_13_94=null & z_93=z_69&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@91@90@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@91 EXIT:(true,None)

subtype_ann_gen@90@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@90 EXIT:(true,[],[],[])

do_base_case_unfold_only@92@71@70@69
do_base_case_unfold_only inp1 :ante:: y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp2 :conseq:: y::ls<z_98> * z_69::ls<flted_13_99>@L&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp3 :LHS node: y::ls<z>
do_base_case_unfold_only inp4 :RHS node: y::ls<z_98>
do_base_case_unfold_only@92 EXIT:None

subtype_ann_pair@94@93@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@94 EXIT:(true,None)

subtype_ann_gen@93@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@93 EXIT:(true,[],[],[])

do_base_case_unfold_only@95@71@70@69
do_base_case_unfold_only inp1 :ante:: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp2 :conseq:: z_69::ls<flted_13_99>@L&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp3 :LHS node: z::ls<flted_18_53>
do_base_case_unfold_only inp4 :RHS node: z_69::ls<flted_13_99>@L
do_base_case_unfold_only@95 EXIT:None

subtype_ann_pair@97@96@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@97 EXIT:(true,None)

subtype_ann_gen@96@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :@L
subtype_ann_gen@96 EXIT:(true,[],[],[])

fold_fun_impt@98@71@70@69
fold_fun_impt inp1 : true
fold_fun_impt@98 EXIT:true

vdef_lemma_fold@99@71@70@69
vdef_lemma_fold inp1 :Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){15}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)
vdef_lemma_fold@99 EXIT:Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){16}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)

!!! do_fold: form: EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula: EBase (exists z_109,flted_13_110,u_111: self::ls<u_111> * 
       u_111::ls<z_109> * yyy::ls<flted_13_110>@L&flted_13_110=null & 
       z_109=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula 2: EBase (exists z_109,flted_13_110,u_111: self::ls<u_111> * 
       u_111::ls<z_109> * yyy::ls<flted_13_110>@L&flted_13_110=null & 
       z_109=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 2: EBase (exists z_109,flted_13_110,u_111: z_69::ls<u_111> * 
       u_111::ls<z_109> * flted_13_99::ls<flted_13_110>@L&
       flted_13_110=null & z_109=flted_13_99&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 21: EBase (exists z_109,flted_13_110,u_111: z_69::ls<u_111> * 
       u_111::ls<z_109> * flted_13_99::ls<flted_13_110>@L&
       flted_13_110=null & z_109=flted_13_99&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 22: EBase (exists z_109,flted_13_110,u_111: z_69::ls<u_111> * 
       u_111::ls<z_109> * flted_13_99::ls<flted_13_110>@L&
       flted_13_110=null & z_109=flted_13_99&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 23: EBase (exists z_109,flted_13_110,u_111: z_69::ls<u_111> * 
       u_111::ls<z_109> * flted_13_99::ls<flted_13_110>@L&
       flted_13_110=null & z_109=flted_13_99&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 24: EBase (exists z_109,flted_13_110,u_111: z_69::ls<u_111> * 
       u_111::ls<z_109> * flted_13_99::ls<flted_13_110>@L&
       flted_13_110=null & z_109=flted_13_99&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 25: EBase (exists z_109,flted_13_110,u_111: z_69::ls<u_111> * 
       u_111::ls<z_109> * flted_13_99::ls<flted_13_110>@L&
       flted_13_110=null & z_109=flted_13_99&{FLOW,(21,22)=__norm})[]
subtype_ann_pair@108@107@106@105@104@103@102@101@100@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@108 EXIT:(true,None)

subtype_ann#4@107@106@105@104@103@102@101@100@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@107 EXIT:true

subtype_ann_pair@110@109@106@105@104@103@102@101@100@71@70@69
subtype_ann_pair inp1 :@L <: ?
subtype_ann_pair@110 EXIT:(false,None)

subtype_ann#4@109@106@105@104@103@102@101@100@71@70@69
subtype_ann#4 inp1 :@L <: ?
subtype_ann#4@109 EXIT:false

propagate_imm_h_formula@106@105@104@103@102@101@100@71@70@69
propagate_imm_h_formula inp1 : z_69::ls<u_111>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@106 EXIT: z_69::ls<u_111>@L

subtype_ann_pair@113@112@111@105@104@103@102@101@100@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@113 EXIT:(true,None)

subtype_ann#4@112@111@105@104@103@102@101@100@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@112 EXIT:true

subtype_ann_pair@115@114@111@105@104@103@102@101@100@71@70@69
subtype_ann_pair inp1 :@L <: ?
subtype_ann_pair@115 EXIT:(false,None)

subtype_ann#4@114@111@105@104@103@102@101@100@71@70@69
subtype_ann#4 inp1 :@L <: ?
subtype_ann#4@114 EXIT:false

propagate_imm_h_formula@111@105@104@103@102@101@100@71@70@69
propagate_imm_h_formula inp1 : u_111::ls<z_109>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@111 EXIT: u_111::ls<z_109>@L

propagate_imm_h_formula@105@104@103@102@101@100@71@70@69
propagate_imm_h_formula inp1 : z_69::ls<u_111> * u_111::ls<z_109>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@105 EXIT: z_69::ls<u_111>@L * u_111::ls<z_109>@L

subtype_ann_pair@118@117@116@104@103@102@101@100@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@118 EXIT:(true,None)

subtype_ann#4@117@116@104@103@102@101@100@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@117 EXIT:true

subtype_ann_pair@120@119@116@104@103@102@101@100@71@70@69
subtype_ann_pair inp1 :@L <: @L?
subtype_ann_pair@120 EXIT:(true,None)

subtype_ann#4@119@116@104@103@102@101@100@71@70@69
subtype_ann#4 inp1 :@L <: @L?
subtype_ann#4@119 EXIT:true

propagate_imm_h_formula@116@104@103@102@101@100@71@70@69
propagate_imm_h_formula inp1 : flted_13_99::ls<flted_13_110>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@116 EXIT: flted_13_99::ls<flted_13_110>@L

propagate_imm_h_formula@104@103@102@101@100@71@70@69
propagate_imm_h_formula inp1 : z_69::ls<u_111> * u_111::ls<z_109> * flted_13_99::ls<flted_13_110>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@104 EXIT: z_69::ls<u_111>@L * u_111::ls<z_109>@L * flted_13_99::ls<flted_13_110>@L

propagate_imm_formula@103@102@101@100@71@70@69
propagate_imm_formula inp1 :formula: (exists z_109,flted_13_110,u_111: z_69::ls<u_111> * u_111::ls<z_109> * 
flted_13_99::ls<flted_13_110>@L&flted_13_110=null & z_109=flted_13_99&
{FLOW,(21,22)=__norm})[]
propagate_imm_formula inp2 :view_name:ls
propagate_imm_formula inp3 :imm:@L
propagate_imm_formula inp4 :map:[(,)]
propagate_imm_formula@103 EXIT: (exists z_109,flted_13_110,u_111: z_69::ls<u_111>@L * u_111::ls<z_109>@L * 
flted_13_99::ls<flted_13_110>@L&flted_13_110=null & z_109=flted_13_99&
{FLOW,(21,22)=__norm})[]

!!! do_fold: view_form 26: EBase (exists z_109,flted_13_110,u_111: z_69::ls<u_111>@L * 
       u_111::ls<z_109>@L * flted_13_99::ls<flted_13_110>@L&
       flted_13_110=null & z_109=flted_13_99&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 3: EBase (exists z_109,flted_13_110,u_111: z_69::ls<u_111>@L * 
       u_111::ls<z_109>@L * flted_13_99::ls<flted_13_110>@L&
       flted_13_110=null & z_109=flted_13_99&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 4: EBase (exists z_109,flted_13_110,u_111: z_69::ls<u_111>@L * 
       u_111::ls<z_109>@L * flted_13_99::ls<flted_13_110>@L&
       flted_13_110=null & z_109=flted_13_99&{FLOW,(21,22)=__norm})[]
subtype_ann_pair@122@121@102@101@100@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@122 EXIT:(true,None)

subtype_ann_gen@121@102@101@100@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_114,flted_13_115,u_116,z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :@L
subtype_ann_gen@121 EXIT:(true,[],[],[])

fold_op@102@101@100@71@70@69
fold_op inp1 : EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
fold_op inp2 :
 context: es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 rhs view : z_69::ls<flted_13_99>@L
 rhs view annot :[]
 rhs_p (pure) : true
fold_op@102 EXIT: 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: 
                               
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L ==> ]]


do_fold_w_ctx@101@100@71@70@69
do_fold_w_ctx inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold_w_ctx inp2 :
 conseq =  z_69::ls<flted_13_99>@L&{FLOW,(21,22)=__norm}[]
 rhs_node =  z_69::ls<flted_13_99>@L
 vd =  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
 rhs_rest =  emp
 rhs_b =  z_69::ls<flted_13_99>@L&{FLOW,(21,22)=__norm}[]
do_fold_w_ctx inp3 :true
do_fold_w_ctx@101 EXIT: 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: 
                               
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L ==> ]]


do_fold@100@71@70@69
do_fold inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold inp2 :Some(([],[], view ls[]<yyy:node>= 
  view_domains: view ls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  view vars: yyy
  ann vars (0 - not a posn): (,0)
  cont vars: yyy
  inv: true
  inv_lock: None
  unstructured formula: 
   (* lbl: *){16}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * (emp)&(((yyy!=null & flted_13_50!=yyy) | 
   flted_13_50=yyy)) & flted_13_50=null & z_49=yyy&{FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  is_primitive?: false
  is_touching?: false
  is_segmented?: true
  is_tail_recursive?: false
  forward_ptrs: yyy
  backward_ptrs: 
  forward_fields: node.f0
  backward_fields: 
  aux formula: emp&{FLOW,(1,24)=__flow}[]|| emp&self!=yyy&{FLOW,(1,24)=__flow}[]
  same_xpure?: NO
  view_data_name: node
  self preds: []
  materialized vars: [(self,partial,[])]
  addr vars: self
  uni_vars: []
  bag of addr: 
  raw base case: (* lbl: *){1}->emp&self=yyy&{FLOW,(1,24)=__flow}[]
  base case: self=yyy->self=yyy
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]))
do_fold@100 EXIT: 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: 
                               
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L ==> ]]


fold_context_left#14@123@71@70@69
fold_context_left#14 inp1 : failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L ==> ]]
fold_context_left#14@123 EXIT: failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L ==> ]]

fold_context_left#15@124@71@70@69
fold_context_left#15 inp1 : failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L ==> ]]
fold_context_left#15@124 EXIT: failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L ==> ]]

fold_context_left#13@125@71@70@69
fold_context_left#13 inp1 : 1[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
 failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_114>@L
 lhs_rest: Hole[119]
 rhs_rest: flted_13_99::ls<flted_13_115>@L ==> ]]
fold_context_left#13@125 EXIT: 1[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

vdef_lemma_fold@126@71@70@69
vdef_lemma_fold inp1 :Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){16}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)
vdef_lemma_fold@126 EXIT:Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){17}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)

!!! do_fold: form: EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula: EBase (exists z_120,flted_13_121,u_122: self::ls<u_122> * 
       u_122::ls<z_120> * yyy::ls<flted_13_121>@L&flted_13_121=null & 
       z_120=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula 2: EBase (exists z_120,flted_13_121,u_122: self::ls<u_122> * 
       u_122::ls<z_120> * yyy::ls<flted_13_121>@L&flted_13_121=null & 
       z_120=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 2: EBase (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
       z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 21: EBase (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
       z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 22: EBase (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
       z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 23: EBase (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
       z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 24: EBase (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
       z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 25: EBase (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
       z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@135@134@133@132@131@130@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@135 EXIT:(true,None)

subtype_ann#4@134@133@132@131@130@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@134 EXIT:true

subtype_ann_pair@137@136@133@132@131@130@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@137 EXIT:(true,None)

subtype_ann#4@136@133@132@131@130@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@136 EXIT:true

propagate_imm_h_formula@133@132@131@130@129@128@127@71@70@69
propagate_imm_h_formula inp1 : y::ls<u_122>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@133 EXIT: y::ls<u_122>

subtype_ann_pair@140@139@138@132@131@130@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@140 EXIT:(true,None)

subtype_ann#4@139@138@132@131@130@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@139 EXIT:true

subtype_ann_pair@142@141@138@132@131@130@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@142 EXIT:(true,None)

subtype_ann#4@141@138@132@131@130@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@141 EXIT:true

propagate_imm_h_formula@138@132@131@130@129@128@127@71@70@69
propagate_imm_h_formula inp1 : u_122::ls<z_120>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@138 EXIT: u_122::ls<z_120>

propagate_imm_h_formula@132@131@130@129@128@127@71@70@69
propagate_imm_h_formula inp1 : y::ls<u_122> * u_122::ls<z_120>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@132 EXIT: y::ls<u_122> * u_122::ls<z_120>

subtype_ann_pair@145@144@143@131@130@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@145 EXIT:(true,None)

subtype_ann#4@144@143@131@130@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@144 EXIT:true

subtype_ann_pair@147@146@143@131@130@129@128@127@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@147 EXIT:(true,None)

subtype_ann#4@146@143@131@130@129@128@127@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@146 EXIT:true

propagate_imm_h_formula@143@131@130@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z_98::ls<flted_13_121>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@143 EXIT: z_98::ls<flted_13_121>@L

propagate_imm_h_formula@131@130@129@128@127@71@70@69
propagate_imm_h_formula inp1 : y::ls<u_122> * u_122::ls<z_120> * z_98::ls<flted_13_121>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@131 EXIT: y::ls<u_122> * u_122::ls<z_120> * z_98::ls<flted_13_121>@L

propagate_imm_formula@130@129@128@127@71@70@69
propagate_imm_formula inp1 :formula: (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
{FLOW,(21,22)=__norm})[]
propagate_imm_formula inp2 :view_name:ls
propagate_imm_formula inp3 :imm:
propagate_imm_formula inp4 :map:[(,)]
propagate_imm_formula@130 EXIT: (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
{FLOW,(21,22)=__norm})[]

!!! do_fold: view_form 26: EBase (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
       z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 3: EBase (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
       z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 4: EBase (exists z_120,flted_13_121,u_122: y::ls<u_122> * u_122::ls<z_120> * 
       z_98::ls<flted_13_121>@L&flted_13_121=null & z_120=z_98&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@149@148@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@149 EXIT:(true,None)

subtype_ann_gen@148@129@128@127@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_125,flted_13_126,u_127,z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@148 EXIT:(true,[],[],[])

do_base_case_unfold_only@150@129@128@127@71@70@69
do_base_case_unfold_only inp1 :ante:: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp2 :conseq:: z::ls<z_125> * z_98::ls<flted_13_126>@L&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp3 :LHS node: z::ls<flted_18_53>
do_base_case_unfold_only inp4 :RHS node: z::ls<z_125>
do_base_case_unfold_only@150 EXIT:None

subtype_ann_pair@152@151@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@152 EXIT:(true,None)

subtype_ann_gen@151@129@128@127@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_125,flted_13_126,u_127,z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@151 EXIT:(true,[],[],[])

vdef_lemma_fold@153@129@128@127@71@70@69
vdef_lemma_fold inp1 :Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){17}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)
vdef_lemma_fold@153 EXIT:Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){18}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)

!!! do_fold: form: EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula: EBase (exists z_133,flted_13_134,u_135: self::ls<u_135> * 
       u_135::ls<z_133> * yyy::ls<flted_13_134>@L&flted_13_134=null & 
       z_133=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula 2: EBase (exists z_133,flted_13_134,u_135: self::ls<u_135> * 
       u_135::ls<z_133> * yyy::ls<flted_13_134>@L&flted_13_134=null & 
       z_133=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 2: EBase (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
       z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 21: EBase (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
       z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 22: EBase (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
       z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 23: EBase (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
       z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 24: EBase (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
       z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 25: EBase (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
       z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@162@161@160@159@158@157@156@155@154@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@162 EXIT:(true,None)

subtype_ann#4@161@160@159@158@157@156@155@154@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@161 EXIT:true

subtype_ann_pair@164@163@160@159@158@157@156@155@154@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@164 EXIT:(true,None)

subtype_ann#4@163@160@159@158@157@156@155@154@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@163 EXIT:true

propagate_imm_h_formula@160@159@158@157@156@155@154@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z::ls<u_135>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@160 EXIT: z::ls<u_135>

subtype_ann_pair@167@166@165@159@158@157@156@155@154@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@167 EXIT:(true,None)

subtype_ann#4@166@165@159@158@157@156@155@154@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@166 EXIT:true

subtype_ann_pair@169@168@165@159@158@157@156@155@154@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@169 EXIT:(true,None)

subtype_ann#4@168@165@159@158@157@156@155@154@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@168 EXIT:true

propagate_imm_h_formula@165@159@158@157@156@155@154@129@128@127@71@70@69
propagate_imm_h_formula inp1 : u_135::ls<z_133>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@165 EXIT: u_135::ls<z_133>

propagate_imm_h_formula@159@158@157@156@155@154@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z::ls<u_135> * u_135::ls<z_133>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@159 EXIT: z::ls<u_135> * u_135::ls<z_133>

subtype_ann_pair@172@171@170@158@157@156@155@154@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@172 EXIT:(true,None)

subtype_ann#4@171@170@158@157@156@155@154@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@171 EXIT:true

subtype_ann_pair@174@173@170@158@157@156@155@154@129@128@127@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@174 EXIT:(true,None)

subtype_ann#4@173@170@158@157@156@155@154@129@128@127@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@173 EXIT:true

propagate_imm_h_formula@170@158@157@156@155@154@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z_125::ls<flted_13_134>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@170 EXIT: z_125::ls<flted_13_134>@L

propagate_imm_h_formula@158@157@156@155@154@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z::ls<u_135> * u_135::ls<z_133> * z_125::ls<flted_13_134>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@158 EXIT: z::ls<u_135> * u_135::ls<z_133> * z_125::ls<flted_13_134>@L

propagate_imm_formula@157@156@155@154@129@128@127@71@70@69
propagate_imm_formula inp1 :formula: (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
{FLOW,(21,22)=__norm})[]
propagate_imm_formula inp2 :view_name:ls
propagate_imm_formula inp3 :imm:
propagate_imm_formula inp4 :map:[(,)]
propagate_imm_formula@157 EXIT: (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
{FLOW,(21,22)=__norm})[]

!!! do_fold: view_form 26: EBase (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
       z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 3: EBase (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
       z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 4: EBase (exists z_133,flted_13_134,u_135: z::ls<u_135> * u_135::ls<z_133> * 
       z_125::ls<flted_13_134>@L&flted_13_134=null & z_133=z_125&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@176@175@156@155@154@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@176 EXIT:(true,None)

subtype_ann_gen@175@156@155@154@129@128@127@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_138,flted_13_139,u_140,z_125,flted_13_126,u_127,z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@175 EXIT:(true,[],[],[])

fold_op@156@155@154@129@128@127@71@70@69
fold_op inp1 : EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
fold_op inp2 :
 context: es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; z_125:z_98]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 rhs view : z::ls<z_125>
 rhs view annot :[]
 rhs_p (pure) : true
fold_op@156 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold_w_ctx@155@154@129@128@127@71@70@69
do_fold_w_ctx inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; z_125:z_98]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold_w_ctx inp2 :
 conseq =  z::ls<z_125> * z_98::ls<flted_13_126>@L&{FLOW,(21,22)=__norm}[]
 rhs_node =  z::ls<z_125>
 vd =  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
 rhs_rest =  z_98::ls<flted_13_126>@L
 rhs_b =  z::ls<z_125> * z_98::ls<flted_13_126>@L&{FLOW,(21,22)=__norm}[]
do_fold_w_ctx inp3 :true
do_fold_w_ctx@155 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold@154@129@128@127@71@70@69
do_fold inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; z_125:z_98]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold inp2 :Some(([],[], view ls[]<yyy:node>= 
  view_domains: view ls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  view vars: yyy
  ann vars (0 - not a posn): (,0)
  cont vars: yyy
  inv: true
  inv_lock: None
  unstructured formula: 
   (* lbl: *){18}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * (emp)&(((yyy!=null & flted_13_50!=yyy) | 
   flted_13_50=yyy)) & flted_13_50=null & z_49=yyy&{FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  is_primitive?: false
  is_touching?: false
  is_segmented?: true
  is_tail_recursive?: false
  forward_ptrs: yyy
  backward_ptrs: 
  forward_fields: node.f0
  backward_fields: 
  aux formula: emp&{FLOW,(1,24)=__flow}[]|| emp&self!=yyy&{FLOW,(1,24)=__flow}[]
  same_xpure?: NO
  view_data_name: node
  self preds: []
  materialized vars: [(self,partial,[])]
  addr vars: self
  uni_vars: []
  bag of addr: 
  raw base case: (* lbl: *){1}->emp&self=yyy&{FLOW,(1,24)=__flow}[]
  base case: self=yyy->self=yyy
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]))
do_fold@154 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


fold_context_left#14@177@129@128@127@71@70@69
fold_context_left#14 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#14@177 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#15@178@129@128@127@71@70@69
fold_context_left#15 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#15@178 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#13@179@129@128@127@71@70@69
fold_context_left#13 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]
 failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#13@179 EXIT: failctx
         
          fe_kind: MUST
          fe_name: separation entailment
          fe_locs: {
                    fc_message: infer_heap_node
                    fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]
        FAIL_UNION 
         
          fe_kind: MUST
          fe_name: separation entailment
          fe_locs: {
                    fc_message: infer_heap_node
                    fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
        

do_base_case_unfold_only@180@129@128@127@71@70@69
do_base_case_unfold_only inp1 :ante:: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp2 :conseq:: z::ls<z_125> * z_98::ls<flted_13_126>@L&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp3 :LHS node: z::ls<flted_18_53>
do_base_case_unfold_only inp4 :RHS node: z_98::ls<flted_13_126>@L
do_base_case_unfold_only@180 EXIT:None

subtype_ann_pair@182@181@129@128@127@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@182 EXIT:(true,None)

subtype_ann_gen@181@129@128@127@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_125,flted_13_126,u_127,z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :@L
subtype_ann_gen@181 EXIT:(true,[],[],[])

do_base_case_unfold_only@183@129@128@127@71@70@69
do_base_case_unfold_only inp1 :ante:: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp2 :conseq:: z::ls<z_125>&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp3 :LHS node: z::ls<flted_18_53>
do_base_case_unfold_only inp4 :RHS node: z::ls<z_125>
do_base_case_unfold_only@183 EXIT:None

subtype_ann_pair@185@184@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@185 EXIT:(true,None)

subtype_ann_gen@184@129@128@127@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_125,flted_13_126,u_127,z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@184 EXIT:(true,[],[],[])

fold_fun_impt@186@129@128@127@71@70@69
fold_fun_impt inp1 : true
fold_fun_impt@186 EXIT:true

vdef_lemma_fold@187@129@128@127@71@70@69
vdef_lemma_fold inp1 :Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){18}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)
vdef_lemma_fold@187 EXIT:Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){19}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)

!!! do_fold: form: EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula: EBase (exists z_145,flted_13_146,u_147: self::ls<u_147> * 
       u_147::ls<z_145> * yyy::ls<flted_13_146>@L&flted_13_146=null & 
       z_145=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula 2: EBase (exists z_145,flted_13_146,u_147: self::ls<u_147> * 
       u_147::ls<z_145> * yyy::ls<flted_13_146>@L&flted_13_146=null & 
       z_145=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 2: EBase (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
       z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 21: EBase (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
       z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 22: EBase (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
       z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 23: EBase (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
       z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 24: EBase (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
       z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 25: EBase (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
       z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@196@195@194@193@192@191@190@189@188@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@196 EXIT:(true,None)

subtype_ann#4@195@194@193@192@191@190@189@188@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@195 EXIT:true

subtype_ann_pair@198@197@194@193@192@191@190@189@188@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@198 EXIT:(true,None)

subtype_ann#4@197@194@193@192@191@190@189@188@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@197 EXIT:true

propagate_imm_h_formula@194@193@192@191@190@189@188@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z::ls<u_147>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@194 EXIT: z::ls<u_147>

subtype_ann_pair@201@200@199@193@192@191@190@189@188@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@201 EXIT:(true,None)

subtype_ann#4@200@199@193@192@191@190@189@188@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@200 EXIT:true

subtype_ann_pair@203@202@199@193@192@191@190@189@188@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@203 EXIT:(true,None)

subtype_ann#4@202@199@193@192@191@190@189@188@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@202 EXIT:true

propagate_imm_h_formula@199@193@192@191@190@189@188@129@128@127@71@70@69
propagate_imm_h_formula inp1 : u_147::ls<z_145>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@199 EXIT: u_147::ls<z_145>

propagate_imm_h_formula@193@192@191@190@189@188@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z::ls<u_147> * u_147::ls<z_145>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@193 EXIT: z::ls<u_147> * u_147::ls<z_145>

subtype_ann_pair@206@205@204@192@191@190@189@188@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@206 EXIT:(true,None)

subtype_ann#4@205@204@192@191@190@189@188@129@128@127@71@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@205 EXIT:true

subtype_ann_pair@208@207@204@192@191@190@189@188@129@128@127@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@208 EXIT:(true,None)

subtype_ann#4@207@204@192@191@190@189@188@129@128@127@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@207 EXIT:true

propagate_imm_h_formula@204@192@191@190@189@188@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z_125::ls<flted_13_146>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@204 EXIT: z_125::ls<flted_13_146>@L

propagate_imm_h_formula@192@191@190@189@188@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z::ls<u_147> * u_147::ls<z_145> * z_125::ls<flted_13_146>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@192 EXIT: z::ls<u_147> * u_147::ls<z_145> * z_125::ls<flted_13_146>@L

propagate_imm_formula@191@190@189@188@129@128@127@71@70@69
propagate_imm_formula inp1 :formula: (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
{FLOW,(21,22)=__norm})[]
propagate_imm_formula inp2 :view_name:ls
propagate_imm_formula inp3 :imm:
propagate_imm_formula inp4 :map:[(,)]
propagate_imm_formula@191 EXIT: (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
{FLOW,(21,22)=__norm})[]

!!! do_fold: view_form 26: EBase (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
       z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 3: EBase (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
       z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 4: EBase (exists z_145,flted_13_146,u_147: z::ls<u_147> * u_147::ls<z_145> * 
       z_125::ls<flted_13_146>@L&flted_13_146=null & z_145=z_125&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@210@209@190@189@188@129@128@127@71@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@210 EXIT:(true,None)

subtype_ann_gen@209@190@189@188@129@128@127@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_150,flted_13_151,u_152,z_125,flted_13_126,u_127,z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@209 EXIT:(true,[],[],[])

fold_op@190@189@188@129@128@127@71@70@69
fold_op inp1 : EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
fold_op inp2 :
 context: es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; z_125:z_98]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 rhs view : z::ls<z_125>
 rhs view annot :[]
 rhs_p (pure) : true
fold_op@190 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold_w_ctx@189@188@129@128@127@71@70@69
do_fold_w_ctx inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; z_125:z_98]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold_w_ctx inp2 :
 conseq =  z::ls<z_125>&{FLOW,(21,22)=__norm}[]
 rhs_node =  z::ls<z_125>
 vd =  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
 rhs_rest =  emp
 rhs_b =  z::ls<z_125>&{FLOW,(21,22)=__norm}[]
do_fold_w_ctx inp3 :true
do_fold_w_ctx@189 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold@188@129@128@127@71@70@69
do_fold inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; z_125:z_98]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold inp2 :Some(([],[], view ls[]<yyy:node>= 
  view_domains: view ls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  view vars: yyy
  ann vars (0 - not a posn): (,0)
  cont vars: yyy
  inv: true
  inv_lock: None
  unstructured formula: 
   (* lbl: *){19}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * (emp)&(((yyy!=null & flted_13_50!=yyy) | 
   flted_13_50=yyy)) & flted_13_50=null & z_49=yyy&{FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  is_primitive?: false
  is_touching?: false
  is_segmented?: true
  is_tail_recursive?: false
  forward_ptrs: yyy
  backward_ptrs: 
  forward_fields: node.f0
  backward_fields: 
  aux formula: emp&{FLOW,(1,24)=__flow}[]|| emp&self!=yyy&{FLOW,(1,24)=__flow}[]
  same_xpure?: NO
  view_data_name: node
  self preds: []
  materialized vars: [(self,partial,[])]
  addr vars: self
  uni_vars: []
  bag of addr: 
  raw base case: (* lbl: *){1}->emp&self=yyy&{FLOW,(1,24)=__flow}[]
  base case: self=yyy->self=yyy
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]))
do_fold@188 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


fold_context_left#14@211@129@128@127@71@70@69
fold_context_left#14 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#14@211 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#15@212@129@128@127@71@70@69
fold_context_left#15 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#15@212 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#13@213@129@128@127@71@70@69
fold_context_left#13 inp1 : 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
 failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#13@213 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

vdef_lemma_fold@214@129@128@127@71@70@69
vdef_lemma_fold inp1 :Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){19}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)
vdef_lemma_fold@214 EXIT:Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){20}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)

!!! do_fold: form: EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula: EBase (exists z_155,flted_13_156,u_157: self::ls<u_157> * 
       u_157::ls<z_155> * yyy::ls<flted_13_156>@L&flted_13_156=null & 
       z_155=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula 2: EBase (exists z_155,flted_13_156,u_157: self::ls<u_157> * 
       u_157::ls<z_155> * yyy::ls<flted_13_156>@L&flted_13_156=null & 
       z_155=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 2: EBase (exists z_155,flted_13_156,u_157: z_98::ls<u_157> * 
       u_157::ls<z_155> * flted_13_126::ls<flted_13_156>@L&
       flted_13_156=null & z_155=flted_13_126&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 21: EBase (exists z_155,flted_13_156,u_157: z_98::ls<u_157> * 
       u_157::ls<z_155> * flted_13_126::ls<flted_13_156>@L&
       flted_13_156=null & z_155=flted_13_126&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 22: EBase (exists z_155,flted_13_156,u_157: z_98::ls<u_157> * 
       u_157::ls<z_155> * flted_13_126::ls<flted_13_156>@L&
       flted_13_156=null & z_155=flted_13_126&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 23: EBase (exists z_155,flted_13_156,u_157: z_98::ls<u_157> * 
       u_157::ls<z_155> * flted_13_126::ls<flted_13_156>@L&
       flted_13_156=null & z_155=flted_13_126&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 24: EBase (exists z_155,flted_13_156,u_157: z_98::ls<u_157> * 
       u_157::ls<z_155> * flted_13_126::ls<flted_13_156>@L&
       flted_13_156=null & z_155=flted_13_126&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 25: EBase (exists z_155,flted_13_156,u_157: z_98::ls<u_157> * 
       u_157::ls<z_155> * flted_13_126::ls<flted_13_156>@L&
       flted_13_156=null & z_155=flted_13_126&{FLOW,(21,22)=__norm})[]
subtype_ann_pair@223@222@221@220@219@218@217@216@215@129@128@127@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@223 EXIT:(true,None)

subtype_ann#4@222@221@220@219@218@217@216@215@129@128@127@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@222 EXIT:true

subtype_ann_pair@225@224@221@220@219@218@217@216@215@129@128@127@71@70@69
subtype_ann_pair inp1 :@L <: ?
subtype_ann_pair@225 EXIT:(false,None)

subtype_ann#4@224@221@220@219@218@217@216@215@129@128@127@71@70@69
subtype_ann#4 inp1 :@L <: ?
subtype_ann#4@224 EXIT:false

propagate_imm_h_formula@221@220@219@218@217@216@215@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z_98::ls<u_157>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@221 EXIT: z_98::ls<u_157>@L

subtype_ann_pair@228@227@226@220@219@218@217@216@215@129@128@127@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@228 EXIT:(true,None)

subtype_ann#4@227@226@220@219@218@217@216@215@129@128@127@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@227 EXIT:true

subtype_ann_pair@230@229@226@220@219@218@217@216@215@129@128@127@71@70@69
subtype_ann_pair inp1 :@L <: ?
subtype_ann_pair@230 EXIT:(false,None)

subtype_ann#4@229@226@220@219@218@217@216@215@129@128@127@71@70@69
subtype_ann#4 inp1 :@L <: ?
subtype_ann#4@229 EXIT:false

propagate_imm_h_formula@226@220@219@218@217@216@215@129@128@127@71@70@69
propagate_imm_h_formula inp1 : u_157::ls<z_155>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@226 EXIT: u_157::ls<z_155>@L

propagate_imm_h_formula@220@219@218@217@216@215@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z_98::ls<u_157> * u_157::ls<z_155>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@220 EXIT: z_98::ls<u_157>@L * u_157::ls<z_155>@L

subtype_ann_pair@233@232@231@219@218@217@216@215@129@128@127@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@233 EXIT:(true,None)

subtype_ann#4@232@231@219@218@217@216@215@129@128@127@71@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@232 EXIT:true

subtype_ann_pair@235@234@231@219@218@217@216@215@129@128@127@71@70@69
subtype_ann_pair inp1 :@L <: @L?
subtype_ann_pair@235 EXIT:(true,None)

subtype_ann#4@234@231@219@218@217@216@215@129@128@127@71@70@69
subtype_ann#4 inp1 :@L <: @L?
subtype_ann#4@234 EXIT:true

propagate_imm_h_formula@231@219@218@217@216@215@129@128@127@71@70@69
propagate_imm_h_formula inp1 : flted_13_126::ls<flted_13_156>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@231 EXIT: flted_13_126::ls<flted_13_156>@L

propagate_imm_h_formula@219@218@217@216@215@129@128@127@71@70@69
propagate_imm_h_formula inp1 : z_98::ls<u_157> * u_157::ls<z_155> * flted_13_126::ls<flted_13_156>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:@L
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@219 EXIT: z_98::ls<u_157>@L * u_157::ls<z_155>@L * flted_13_126::ls<flted_13_156>@L

propagate_imm_formula@218@217@216@215@129@128@127@71@70@69
propagate_imm_formula inp1 :formula: (exists z_155,flted_13_156,u_157: z_98::ls<u_157> * u_157::ls<z_155> * 
flted_13_126::ls<flted_13_156>@L&flted_13_156=null & z_155=flted_13_126&
{FLOW,(21,22)=__norm})[]
propagate_imm_formula inp2 :view_name:ls
propagate_imm_formula inp3 :imm:@L
propagate_imm_formula inp4 :map:[(,)]
propagate_imm_formula@218 EXIT: (exists z_155,flted_13_156,u_157: z_98::ls<u_157>@L * u_157::ls<z_155>@L * 
flted_13_126::ls<flted_13_156>@L&flted_13_156=null & z_155=flted_13_126&
{FLOW,(21,22)=__norm})[]

!!! do_fold: view_form 26: EBase (exists z_155,flted_13_156,u_157: z_98::ls<u_157>@L * 
       u_157::ls<z_155>@L * flted_13_126::ls<flted_13_156>@L&
       flted_13_156=null & z_155=flted_13_126&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 3: EBase (exists z_155,flted_13_156,u_157: z_98::ls<u_157>@L * 
       u_157::ls<z_155>@L * flted_13_126::ls<flted_13_156>@L&
       flted_13_156=null & z_155=flted_13_126&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 4: EBase (exists z_155,flted_13_156,u_157: z_98::ls<u_157>@L * 
       u_157::ls<z_155>@L * flted_13_126::ls<flted_13_156>@L&
       flted_13_156=null & z_155=flted_13_126&{FLOW,(21,22)=__norm})[]
subtype_ann_pair@237@236@217@216@215@129@128@127@71@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@237 EXIT:(true,None)

subtype_ann_gen@236@217@216@215@129@128@127@71@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_160,flted_13_161,u_162,z_125,flted_13_126,u_127,z_98,flted_13_99,u_100,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :@L
subtype_ann_gen@236 EXIT:(true,[],[],[])

fold_op@217@216@215@129@128@127@71@70@69
fold_op inp1 : EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
fold_op inp2 :
 context: es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; z_125:z_98]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 rhs view : z_98::ls<flted_13_126>@L
 rhs view annot :[]
 rhs_p (pure) : true
fold_op@217 EXIT: 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: 
                               
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L ==> ]]


do_fold_w_ctx@216@215@129@128@127@71@70@69
do_fold_w_ctx inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; z_125:z_98]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold_w_ctx inp2 :
 conseq =  z::ls<z_125> * z_98::ls<flted_13_126>@L&{FLOW,(21,22)=__norm}[]
 rhs_node =  z_98::ls<flted_13_126>@L
 vd =  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
 rhs_rest =  z::ls<z_125>
 rhs_b =  z::ls<z_125> * z_98::ls<flted_13_126>@L&{FLOW,(21,22)=__norm}[]
do_fold_w_ctx inp3 :true
do_fold_w_ctx@216 EXIT: 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: 
                               
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L ==> ]]


do_fold@215@129@128@127@71@70@69
do_fold inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; z_125:z_98]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold inp2 :Some(([],[], view ls[]<yyy:node>= 
  view_domains: view ls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  view vars: yyy
  ann vars (0 - not a posn): (,0)
  cont vars: yyy
  inv: true
  inv_lock: None
  unstructured formula: 
   (* lbl: *){20}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * (emp)&(((yyy!=null & flted_13_50!=yyy) | 
   flted_13_50=yyy)) & flted_13_50=null & z_49=yyy&{FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  is_primitive?: false
  is_touching?: false
  is_segmented?: true
  is_tail_recursive?: false
  forward_ptrs: yyy
  backward_ptrs: 
  forward_fields: node.f0
  backward_fields: 
  aux formula: emp&{FLOW,(1,24)=__flow}[]|| emp&self!=yyy&{FLOW,(1,24)=__flow}[]
  same_xpure?: NO
  view_data_name: node
  self preds: []
  materialized vars: [(self,partial,[])]
  addr vars: self
  uni_vars: []
  bag of addr: 
  raw base case: (* lbl: *){1}->emp&self=yyy&{FLOW,(1,24)=__flow}[]
  base case: self=yyy->self=yyy
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]))
do_fold@215 EXIT: 
MaybeErr Context: 
                   fe_kind: MAY
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: 
                               
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L ==> ]]


fold_context_left#14@238@129@128@127@71@70@69
fold_context_left#14 inp1 : failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L ==> ]]
fold_context_left#14@238 EXIT: failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L ==> ]]

fold_context_left#15@239@129@128@127@71@70@69
fold_context_left#15 inp1 : failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L ==> ]]
fold_context_left#15@239 EXIT: failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L ==> ]]

fold_context_left#13@240@129@128@127@71@70@69
fold_context_left#13 inp1 : 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
 failctx
         fe_kind: MAY
         fe_name: separation entailment
         fe_locs: {
                   fc_message: 
                     
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  NothingToDo 
  Type: WArg
  LHS: z::ls<flted_18_53>
  RHS: flted_18_53::ls<z_160>@L
 lhs_rest: Hole[165]
 rhs_rest: flted_13_126::ls<flted_13_161>@L ==> ]]
fold_context_left#13@240 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_fun_impt@241@129@128@127@71@70@69
fold_fun_impt inp1 : flted_18_53=null & flted_18_53=z_98
fold_fun_impt@241 EXIT:true

fold_context_left#6@242@129@128@127@71@70@69
fold_context_left#6 inp1 : 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
fold_context_left#6@242 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_op: process_one@243@129@128@127@71@70@69
fold_op: process_one inp1 : es_formula: emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_pure: flted_18_53=null & flted_18_53=z_98
 es_heap: z::ls<flted_18_53> * y::ls<z> * x::ls<y>
 es_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
            flted_19_70]
 es_ante_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
                 flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; flted_18_53:z_98]
 es_subst (from): [z_125; flted_13_126; u_127]
 es_subst (to): [flted_18_53; flted_18_53; z]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
fold_op: process_one@243 EXIT: es_formula: emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_pure: flted_18_53=null & flted_18_53=z_98
 es_heap: z::ls<flted_18_53> * y::ls<z> * x::ls<y>
 es_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_ante_evars: [z_125; flted_13_126; u_127; z_98; flted_13_99; u_100; z_69; 
                 flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69; flted_18_53:z_98]
 es_subst (from): [z_125; flted_13_126; u_127]
 es_subst (to): [flted_18_53; flted_18_53; z]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []

fold_op@129@128@127@71@70@69
fold_op inp1 : EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
fold_op inp2 :
 context: es_formula: 
  y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: x::ls<y>
 es_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 rhs view : y::ls<z_98>
 rhs view annot :[]
 rhs_p (pure) : true
fold_op@129 EXIT: 
Good Context: length= 1 [es_formula: emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
                         es_pure: flted_18_53=null & flted_18_53=z_98
                         es_heap: z::ls<flted_18_53> * y::ls<z> * x::ls<y>
                         es_evars: [z_98; flted_13_99; u_100; z_69; 
                                    flted_19_70]
                         es_ante_evars: [z_125; flted_13_126; u_127; z_98; 
                                         flted_13_99; u_100; z_69; 
                                         flted_19_70]
                         es_rhs_eqset: [z_69:z; z_98:z_69; flted_18_53:z_98]
                         es_subst (from): [z_125; flted_13_126; u_127]
                         es_subst (to): [flted_18_53; flted_18_53; z]
                         es_trace: 
                           COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                         es_infer_vars_rel: []] <1>emp&flted_18_53=null & flted_18_53=z_98 & flted_18_53=null&{FLOW,(21,22)=__norm}[]
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> ]]



fold_context_left#1@245@244@128@127@71@70@69
fold_context_left#1 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#1@245 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]

process_fold_result@244@128@127@71@70@69
process_fold_result inp1 : es_formula: 
  y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: x::ls<y>
 es_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
process_fold_result inp2 : 
Good Context: length= 1 [es_formula: emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
                         es_pure: flted_18_53=null & flted_18_53=z_98
                         es_heap: z::ls<flted_18_53> * y::ls<z> * x::ls<y>
                         es_evars: [z_98; flted_13_99; u_100; z_69; 
                                    flted_19_70]
                         es_ante_evars: [z_125; flted_13_126; u_127; z_98; 
                                         flted_13_99; u_100; z_69; 
                                         flted_19_70]
                         es_rhs_eqset: [z_69:z; z_98:z_69; flted_18_53:z_98]
                         es_subst (from): [z_125; flted_13_126; u_127]
                         es_subst (to): [flted_18_53; flted_18_53; z]
                         es_trace: 
                           COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                         es_infer_vars_rel: []] <1>emp&flted_18_53=null & flted_18_53=z_98 & flted_18_53=null&{FLOW,(21,22)=__norm}[]
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> ]]


process_fold_result inp3 :[y,z_98]
process_fold_result inp4 : z_69::ls<flted_13_99>@L&{FLOW,(21,22)=__norm}[]
process_fold_result@244 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold_w_ctx@128@127@71@70@69
do_fold_w_ctx inp1 : es_formula: 
  y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: x::ls<y>
 es_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold_w_ctx inp2 :
 conseq =  y::ls<z_98> * z_69::ls<flted_13_99>@L&{FLOW,(21,22)=__norm}[]
 rhs_node =  y::ls<z_98>
 vd =  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
 rhs_rest =  z_69::ls<flted_13_99>@L
 rhs_b =  y::ls<z_98> * z_69::ls<flted_13_99>@L&{FLOW,(21,22)=__norm}[]
do_fold_w_ctx inp3 :true
do_fold_w_ctx@128 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold@127@71@70@69
do_fold inp1 : es_formula: 
  y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: x::ls<y>
 es_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z_98:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold inp2 :Some(([],[], view ls[]<yyy:node>= 
  view_domains: view ls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  view vars: yyy
  ann vars (0 - not a posn): (,0)
  cont vars: yyy
  inv: true
  inv_lock: None
  unstructured formula: 
   (* lbl: *){17}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * (emp)&(((yyy!=null & flted_13_50!=yyy) | 
   flted_13_50=yyy)) & flted_13_50=null & z_49=yyy&{FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  is_primitive?: false
  is_touching?: false
  is_segmented?: true
  is_tail_recursive?: false
  forward_ptrs: yyy
  backward_ptrs: 
  forward_fields: node.f0
  backward_fields: 
  aux formula: emp&{FLOW,(1,24)=__flow}[]|| emp&self!=yyy&{FLOW,(1,24)=__flow}[]
  same_xpure?: NO
  view_data_name: node
  self preds: []
  materialized vars: [(self,partial,[])]
  addr vars: self
  uni_vars: []
  bag of addr: 
  raw base case: (* lbl: *){1}->emp&self=yyy&{FLOW,(1,24)=__flow}[]
  base case: self=yyy->self=yyy
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]))
do_fold@127 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]


fold_context_left#14@246@71@70@69
fold_context_left#14 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#14@246 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#15@247@71@70@69
fold_context_left#15 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#15@247 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#13@248@71@70@69
fold_context_left#13 inp1 : 1[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
 failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#13@248 EXIT: 1[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_fun_impt@249@71@70@69
fold_fun_impt inp1 : flted_18_53=null & z=z_69
fold_fun_impt@249 EXIT:true

fold_context_left#6@250@71@70@69
fold_context_left#6 inp1 : 1[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
fold_context_left#6@250 EXIT: 1[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_op: process_one@251@71@70@69
fold_op: process_one inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_pure: flted_18_53=null & z=z_69
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_ante_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z:z_69]
 es_subst (from): [flted_13_99; z_98; u_100]
 es_subst (to): [flted_18_53; z; y]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []
fold_op: process_one@251 EXIT: es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_pure: flted_18_53=null & z=z_69
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_69; flted_19_70]
 es_ante_evars: [z_98; flted_13_99; u_100; z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z:z_69]
 es_subst (from): [flted_13_99; z_98; u_100]
 es_subst (to): [flted_18_53; z; y]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
 es_infer_vars_rel: []

fold_op@71@70@69
fold_op inp1 : EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
fold_op inp2 :
 context: es_formula: 
  x::ls<y> * y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&
  {FLOW,(21,22)=__norm}[]
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [z_69:z]
 es_trace:  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 rhs view : x::ls<z_69>
 rhs view annot :[]
 rhs_p (pure) : true
fold_op@71 EXIT: 
Good Context: length= 1 [es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
                         es_pure: flted_18_53=null & z=z_69
                         es_heap: y::ls<z> * x::ls<y>
                         es_evars: [z_69; flted_19_70]
                         es_ante_evars: [z_98; flted_13_99; u_100; z_69; 
                                         flted_19_70]
                         es_rhs_eqset: [z_69:z; z:z_69]
                         es_subst (from): [flted_13_99; z_98; u_100]
                         es_subst (to): [flted_18_53; z; y]
                         es_trace: 
                           COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                         es_infer_vars_rel: []] <1>z::ls<flted_18_53>&flted_18_53=null & z=z_69 & flted_18_53=null&{FLOW,(21,22)=__norm}[]
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> ]]



do_base_case_unfold_only@253@252@70@69
do_base_case_unfold_only inp1 :ante:: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp2 :conseq:: z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
do_base_case_unfold_only inp3 :LHS node: z::ls<flted_18_53>
do_base_case_unfold_only inp4 :RHS node: z::ls<flted_19_70>
do_base_case_unfold_only@253 EXIT:None

subtype_ann_pair@255@254@252@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@255 EXIT:(true,None)

subtype_ann_gen@254@252@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@254 EXIT:(true,[],[],[])

fold_fun_impt@256@252@70@69
fold_fun_impt inp1 : true
fold_fun_impt@256 EXIT:true

vdef_lemma_fold@257@252@70@69
vdef_lemma_fold inp1 :Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){20}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)
vdef_lemma_fold@257 EXIT:Some( viewls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  cont vars: yyy
  inv: true
  unstructured formula: 
   (* lbl: *){21}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
   {FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  view_data_name: node)

!!! do_fold: form: EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula: EBase (exists z_179,flted_13_180,u_181: self::ls<u_181> * 
       u_181::ls<z_179> * yyy::ls<flted_13_180>@L&flted_13_180=null & 
       z_179=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: renamed_view_formula 2: EBase (exists z_179,flted_13_180,u_181: self::ls<u_181> * 
       u_181::ls<z_179> * yyy::ls<flted_13_180>@L&flted_13_180=null & 
       z_179=yyy&{FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 2: EBase (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
       flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 21: EBase (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
       flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 22: EBase (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
       flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 23: EBase (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
       flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 24: EBase (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
       flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 25: EBase (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
       flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@266@265@264@263@262@261@260@259@258@252@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@266 EXIT:(true,None)

subtype_ann#4@265@264@263@262@261@260@259@258@252@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@265 EXIT:true

subtype_ann_pair@268@267@264@263@262@261@260@259@258@252@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@268 EXIT:(true,None)

subtype_ann#4@267@264@263@262@261@260@259@258@252@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@267 EXIT:true

propagate_imm_h_formula@264@263@262@261@260@259@258@252@70@69
propagate_imm_h_formula inp1 : z::ls<u_181>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@264 EXIT: z::ls<u_181>

subtype_ann_pair@271@270@269@263@262@261@260@259@258@252@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@271 EXIT:(true,None)

subtype_ann#4@270@269@263@262@261@260@259@258@252@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@270 EXIT:true

subtype_ann_pair@273@272@269@263@262@261@260@259@258@252@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@273 EXIT:(true,None)

subtype_ann#4@272@269@263@262@261@260@259@258@252@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@272 EXIT:true

propagate_imm_h_formula@269@263@262@261@260@259@258@252@70@69
propagate_imm_h_formula inp1 : u_181::ls<z_179>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@269 EXIT: u_181::ls<z_179>

propagate_imm_h_formula@263@262@261@260@259@258@252@70@69
propagate_imm_h_formula inp1 : z::ls<u_181> * u_181::ls<z_179>
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@263 EXIT: z::ls<u_181> * u_181::ls<z_179>

subtype_ann_pair@276@275@274@262@261@260@259@258@252@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@276 EXIT:(true,None)

subtype_ann#4@275@274@262@261@260@259@258@252@70@69
subtype_ann#4 inp1 : <: ?
subtype_ann#4@275 EXIT:true

subtype_ann_pair@278@277@274@262@261@260@259@258@252@70@69
subtype_ann_pair inp1 : <: @L?
subtype_ann_pair@278 EXIT:(true,None)

subtype_ann#4@277@274@262@261@260@259@258@252@70@69
subtype_ann#4 inp1 : <: @L?
subtype_ann#4@277 EXIT:true

propagate_imm_h_formula@274@262@261@260@259@258@252@70@69
propagate_imm_h_formula inp1 : flted_19_70::ls<flted_13_180>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@274 EXIT: flted_19_70::ls<flted_13_180>@L

propagate_imm_h_formula@262@261@260@259@258@252@70@69
propagate_imm_h_formula inp1 : z::ls<u_181> * u_181::ls<z_179> * flted_19_70::ls<flted_13_180>@L
propagate_imm_h_formula inp2 :view_name:ls
propagate_imm_h_formula inp3 :imm:
propagate_imm_h_formula inp4 :map:[(,)]
propagate_imm_h_formula@262 EXIT: z::ls<u_181> * u_181::ls<z_179> * flted_19_70::ls<flted_13_180>@L

propagate_imm_formula@261@260@259@258@252@70@69
propagate_imm_formula inp1 :formula: (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
{FLOW,(21,22)=__norm})[]
propagate_imm_formula inp2 :view_name:ls
propagate_imm_formula inp3 :imm:
propagate_imm_formula inp4 :map:[(,)]
propagate_imm_formula@261 EXIT: (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
{FLOW,(21,22)=__norm})[]

!!! do_fold: view_form 26: EBase (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
       flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 3: EBase (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
       flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
       {FLOW,(21,22)=__norm})[]
!!! do_fold: view_form 4: EBase (exists z_179,flted_13_180,u_181: z::ls<u_181> * u_181::ls<z_179> * 
       flted_19_70::ls<flted_13_180>@L&flted_13_180=null & z_179=flted_19_70&
       {FLOW,(21,22)=__norm})[]
subtype_ann_pair@280@279@260@259@258@252@70@69
subtype_ann_pair inp1 : <: ?
subtype_ann_pair@280 EXIT:(true,None)

subtype_ann_gen@279@260@259@258@252@70@69
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :[z_184,flted_13_185,u_186,z_69,flted_19_70]
subtype_ann_gen inp3 :
subtype_ann_gen inp4 :
subtype_ann_gen@279 EXIT:(true,[],[],[])

fold_op@260@259@258@252@70@69
fold_op inp1 : EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
fold_op inp2 :
 context: es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
 rhs view : z::ls<flted_19_70>
 rhs view annot :[]
 rhs_p (pure) : true
fold_op@260 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold_w_ctx@259@258@252@70@69
do_fold_w_ctx inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold_w_ctx inp2 :
 conseq =  z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
 rhs_node =  z::ls<flted_19_70>
 vd =  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
 rhs_rest =  emp
 rhs_b =  z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
do_fold_w_ctx inp3 :false
do_fold_w_ctx@259 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


do_fold@258@252@70@69
do_fold inp1 : es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
 es_heap: y::ls<z> * x::ls<y>
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [z_69:z; z:z_69]
 es_trace: 
   COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold inp2 :Some(([],[], view ls[]<yyy:node>= 
  view_domains: view ls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  view vars: yyy
  ann vars (0 - not a posn): (,0)
  cont vars: yyy
  inv: true
  inv_lock: None
  unstructured formula: 
   (* lbl: *){21}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * (emp)&(((yyy!=null & flted_13_50!=yyy) | 
   flted_13_50=yyy)) & flted_13_50=null & z_49=yyy&{FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  is_primitive?: false
  is_touching?: false
  is_segmented?: true
  is_tail_recursive?: false
  forward_ptrs: yyy
  backward_ptrs: 
  forward_fields: node.f0
  backward_fields: 
  aux formula: emp&{FLOW,(1,24)=__flow}[]|| emp&self!=yyy&{FLOW,(1,24)=__flow}[]
  same_xpure?: NO
  view_data_name: node
  self preds: []
  materialized vars: [(self,partial,[])]
  addr vars: self
  uni_vars: []
  bag of addr: 
  raw base case: (* lbl: *){1}->emp&self=yyy&{FLOW,(1,24)=__flow}[]
  base case: self=yyy->self=yyy
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]))
do_fold@258 EXIT: 
MaybeErr Context: 
                   fe_kind: MUST
                   fe_name: separation entailment
                   fe_locs: {
                             fc_message: infer_heap_node
                             fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]


fold_context_left#14@281@252@70@69
fold_context_left#14 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#14@281 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#15@282@252@70@69
fold_context_left#15 inp1 : failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#15@282 EXIT: failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]

fold_context_left#13@283@252@70@69
fold_context_left#13 inp1 : 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
 failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(21,22)=__norm}}
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  COND ==>  UnmatchedRHSData ==> ]]
fold_context_left#13@283 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_fun_impt@284@252@70@69
fold_fun_impt inp1 : z=z_69
fold_fun_impt@284 EXIT:true

fold_context_left#6@285@252@70@69
fold_context_left#6 inp1 : 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
fold_context_left#6@285 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_context_left#1@286@252@70@69
fold_context_left#1 inp1 : 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
fold_context_left#1@286 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

process_fold_result@252@70@69
process_fold_result inp1 : es_formula: 
  x::ls<y> * y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&
  {FLOW,(21,22)=__norm}[]
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [z_69:z]
 es_trace:  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
process_fold_result inp2 : 
Good Context: length= 1 [es_formula: z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
                         es_pure: flted_18_53=null & z=z_69
                         es_heap: y::ls<z> * x::ls<y>
                         es_evars: [z_69; flted_19_70]
                         es_ante_evars: [z_98; flted_13_99; u_100; z_69; 
                                         flted_19_70]
                         es_rhs_eqset: [z_69:z; z:z_69]
                         es_subst (from): [flted_13_99; z_98; u_100]
                         es_subst (to): [flted_18_53; z; y]
                         es_trace: 
                           COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                         es_infer_vars_rel: []] <1>z::ls<flted_18_53>&flted_18_53=null & z=z_69 & flted_18_53=null&{FLOW,(21,22)=__norm}[]
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> ]]


process_fold_result inp3 :[x,z_69]
process_fold_result inp4 : z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
process_fold_result@252 EXIT: 
Good Context: length= 1 [es_formula: emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
                         es_heap: z::ls<flted_18_53> * y::ls<z> * x::ls<y>
                         es_evars: [z_69; flted_19_70]
                         es_ante_evars: [z_69; flted_19_70]
                         es_rhs_eqset: [z_69:z; z:z_69]
                         es_subst (from): [flted_19_70]
                         es_subst (to): [flted_18_53]
                         es_aux_conseq: z=z_69
                         es_trace: 
                           COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                         es_infer_vars_rel: []] <1>emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> ]]



do_fold_w_ctx@70@69
do_fold_w_ctx inp1 : es_formula: 
  x::ls<y> * y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&
  {FLOW,(21,22)=__norm}[]
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [z_69:z]
 es_trace:  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold_w_ctx inp2 :
 conseq =  x::ls<z_69> * z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
 rhs_node =  x::ls<z_69>
 vd =  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
       yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
       {FLOW,(21,22)=__norm})[]
 rhs_rest =  z::ls<flted_19_70>
 rhs_b =  x::ls<z_69> * z::ls<flted_19_70>&{FLOW,(21,22)=__norm}[]
do_fold_w_ctx inp3 :false
do_fold_w_ctx@70 EXIT: 
Good Context: length= 1 [es_formula: emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
                         es_heap: z::ls<flted_18_53> * y::ls<z> * x::ls<y>
                         es_evars: [z_69; flted_19_70]
                         es_ante_evars: [z_69; flted_19_70]
                         es_rhs_eqset: [z_69:z; z:z_69]
                         es_subst (from): [flted_19_70]
                         es_subst (to): [flted_18_53]
                         es_aux_conseq: z=z_69
                         es_trace: 
                           COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                         es_infer_vars_rel: []] <1>emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> ]]



do_fold@69
do_fold inp1 : es_formula: 
  x::ls<y> * y::ls<z> * z::ls<flted_18_53>&flted_18_53=null&
  {FLOW,(21,22)=__norm}[]
 es_evars: [z_69; flted_19_70]
 es_rhs_eqset: [z_69:z]
 es_trace:  COND ==>  SEARCH ==>  (Lemma <== lem_11) ==> 
 es_infer_vars_rel: []
 es_unsat_flag: false
do_fold inp2 :Some(([],[], view ls[]<yyy:node>= 
  view_domains: view ls<yyy:node>= 
  EBase (exists z_49,flted_13_50,u_51: self::ls<u_51> * u_51::ls<z_49> * 
        yyy::ls<flted_13_50>@L&flted_13_50=null & z_49=yyy&
        {FLOW,(21,22)=__norm})[]
  view vars: yyy
  ann vars (0 - not a posn): (,0)
  cont vars: yyy
  inv: true
  inv_lock: None
  unstructured formula: 
   (* lbl: *){15}->(exists z_49,flted_13_50,u_51: self::ls<u_51> * 
   u_51::ls<z_49> * (emp)&(((yyy!=null & flted_13_50!=yyy) | 
   flted_13_50=yyy)) & flted_13_50=null & z_49=yyy&{FLOW,(21,22)=__norm})[]
  xform: ((self!=null & yyy!=self) | yyy=self)
  is_recursive?: true
  is_primitive?: false
  is_touching?: false
  is_segmented?: true
  is_tail_recursive?: false
  forward_ptrs: yyy
  backward_ptrs: 
  forward_fields: node.f0
  backward_fields: 
  aux formula: emp&{FLOW,(1,24)=__flow}[]|| emp&self!=yyy&{FLOW,(1,24)=__flow}[]
  same_xpure?: NO
  view_data_name: node
  self preds: []
  materialized vars: [(self,partial,[])]
  addr vars: self
  uni_vars: []
  bag of addr: 
  raw base case: (* lbl: *){1}->emp&self=yyy&{FLOW,(1,24)=__flow}[]
  base case: self=yyy->self=yyy
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]))
do_fold@69 EXIT: 
Good Context: length= 1 [es_formula: emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
                         es_heap: z::ls<flted_18_53> * y::ls<z> * x::ls<y>
                         es_evars: [z_69; flted_19_70]
                         es_ante_evars: [z_69; flted_19_70]
                         es_rhs_eqset: [z_69:z; z:z_69]
                         es_subst (from): [flted_19_70]
                         es_subst (to): [flted_18_53]
                         es_aux_conseq: z=z_69
                         es_trace: 
                           COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> 
                         es_infer_vars_rel: []] <1>emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
[[ COND ==>  SEARCH ==>  (Lemma <== lem_11) ==>  Match ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==> ]]



fold_context_left#14@287
fold_context_left#14 inp1 : 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
fold_context_left#14@287 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_context_left#15@288
fold_context_left#15 inp1 : 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
fold_context_left#15@288 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_context_left#13@289
fold_context_left#13 inp1 : 1[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
fold_context_left#13@289 EXIT: 2[
   z::ls<flted_18_53>&flted_18_53=null&{FLOW,(21,22)=__norm}[];
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_fun_impt@290
fold_fun_impt inp1 : z=null & y=z
fold_fun_impt@290 EXIT:false

fold_fun_impt@291
fold_fun_impt inp1 : flted_18_53=null & z_69=z & z=z_69
fold_fun_impt@291 EXIT:true

fold_context_left#6@292
fold_context_left#6 inp1 : failctx
         fe_kind: MAY
         fe_name: logical bug
         fe_locs: {
                   fc_message: 
                    AndR[ (((x!=null & y!=x) | y=x)) & (((y!=null & z!=y) | z=y)) & (((z!=null & 
null!=z) | null=z)) |-  y=z. LOCS:[18;1;0;19];  (((x!=null & y!=x) | y=x)) & (((y!=null & z!=y) | z=y)) & (((z!=null & 
null!=z) | null=z)) |-  z=null. LOCS:[18;1;0;19] (may-bug).]
                   fc_current_lhs_flow: {FLOW,(1,24)=__flow}}
[[ COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  SEARCH ==>  COND ==>  Match ==> ]]
 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
fold_context_left#6@292 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

fold_context_left#20@293
fold_context_left#20 inp1 : 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]
fold_context_left#20@293 EXIT: 1[
   emp&flted_18_53=null&{FLOW,(21,22)=__norm}[]
   ]

Entail 1: Valid. 

Validate 1: Expected.


Stop z3... 46 invocations Stop Omega... 13 invocations 
SAT Count   : 56
SAT % Hit   : 60.71%
IMPLY Count : 68
IMPLY % Hit : 64.7%
Time(cache overhead) : 0.019287 (seconds)

!!! log(small):(0.725172,174)
Total verification time: 0.309257 second(s)
	Time spent in main process: 0.26769 second(s)
	Time spent in child processes: 0.041567 second(s)

