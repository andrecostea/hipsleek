Starting Omega...oc

!!!:0: 0: 
run_entail_check:
 ### iante0 = IFORM:(emp ; (emp ; (x::node<a>@M[HeapNode1])))*(true)( FLOW __norm)
 ### iconseq0 = IFORMStruc:EBase: [][](EX w . (emp ; (emp ; (x::node<w>@M[HeapNode1])))*(w = a)( FLOW __norm)) 


!!!:0: 0: 
run_entail_check:
 ### ivars = []
 ### ante =  x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 ### conseq =  EBase EXISTS(w_14: x::node<w_14@M>@M[Orig]&@M<:@M & a=w_14&
       {FLOW,(19,20)=__norm})[]


!!!:0: 0: 
run_entail_check: after normalization
 ### ante =  x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 ### conseq =  EBase EXISTS(w_14: x::node<w_14@M>@M[Orig]&@M<:@M & a=w_14&
       {FLOW,(19,20)=__norm})[]


!!!:0: 0: SAT #1
!!!:0: 0:  @M<:@M & x!=null
!!!:0: 0: heap_entail_struc_init:
ctx:
 
Good Context: [es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
               es_pure: true
               es_orig_ante: None
               es_heap: emp
               es_aux_conseq: true
               es_must_error: None
               es_var_measures: None
               es_term_err: None
               es_unsat_flag: true]

conseq:
 EBase EXISTS(w_14: x::node<w_14@M>@M[Orig]&@M<:@M & a=w_14&
       {FLOW,(19,20)=__norm})[]
!!!:0: 0: heap_entail_one_context_struc:
ctx:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: true
conseq:
 EBase EXISTS(w_14: x::node<w_14@M>@M[Orig]&@M<:@M & a=w_14&
       {FLOW,(19,20)=__norm})[]
!!!:0: 0: heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
tid:None
delayed_f:None
context:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: true
conseq:
 EBase EXISTS(w_14: x::node<w_14@M>@M[Orig]&@M<:@M & a=w_14&
       {FLOW,(19,20)=__norm})[]
!!!:0: 0: heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: true
conseq:
 EXISTS(w_14: x::node<w_14@M>@M[Orig]&@M<:@M & a=w_14&
{FLOW,(19,20)=__norm})[]
!!!:0: 0: process_action :
 ### action =  NothingToDo: No duplicated nodes!
 ### estate =  x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 ### conseq =  EXISTS(w_14: x::node<w_14@M>@M[Orig]&@M<:@M & a=w_14&
{FLOW,(19,20)=__norm})[]


!!!:0: 0: heap_entail_conjunct_lhs: invoking heap_entail_split_rhs_phases
!!!:0: 0: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: true
conseq:
 EXISTS(w_14: x::node<w_14@M>@M[Orig]&@M<:@M & a=w_14&
{FLOW,(19,20)=__norm})[]
!!!ann-sleek04.slk:51: 26: heap_entail_split_rhs_phases: 
                            
ante:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_evars: [w_17]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: true
conseq:
 x::node<w_17@M>@M[Orig]&@M<:@M & a=w_17&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_split_lhs_phases: 
ante:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: true
conseq:
 x::node<w_17@M>@M[Orig]&true&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_conjunct:
context:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: false
conseq:
 x::node<w_17@M>@M[Orig]&true&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_conjunct_helper:
context:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: false
conseq:
 x::node<w_17@M>@M[Orig]&true&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: false
conseq:
 x::node<w_17@M>@M[Orig]&true&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_conjunct_non_empty_rhs_heap:
context:
 es_formula: x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_unsat_flag: false
conseq:
 x::node<w_17@M>@M[Orig]&true&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: process_action :
 ### action =  
  Type: Root
  LHS: x::node<a@M>@M[Orig]
  RHS: x::node<w_17@M>@M[Orig]
 lhs_rest: x::node<a@A>@M[Orig]
 rhs_rest: emp=>Match
 ### estate =  x::node<a@M>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 ### conseq =  x::node<w_17@M>@M[Orig]&true&{FLOW,(19,20)=__norm}[]


@1!ann-sleek04.slk:51: 26: do_match: using  x::node<a@M>@M[Orig] to prove  x::node<w_17@M>@M[Orig]
@1!ann-sleek04.slk:51: 26: do_match: source LHS:  es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
@1!ann-sleek04.slk:51: 26: do_match: source RHS:  emp&true&{FLOW,(19,20)=__norm}[]
@1! add_to_lhs:None
@1! add_to_rhs:None
@1! param_ann_lhs:[None]
@1! param_ann_rhs:[None]
@1! view_param_ann_lhs:None
@1! view_param_ann_rhs:None
@1! ann_lhs:None
@1! ann_rhs:None
@1! Imm annotation mismatch:false
@1! l_h: x::node<a@A>@M[Orig]
@1! estate: es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
@1! r_h: emp
@1! new_l_args:[#]
@1! new_r_args:[#]
@1! new_l_holes:[0]
@1! new_r_holes:[0]
@1! rem_l_node: emp
@1! rem_r_node: emp
@1! new_l_args:[a]
@1! new_r_args:[w_17]
@1! l_param_ann:[@M]
@1! r_param_ann:[@M]
@1! to_rhs(bef ann): true
@1! to_lhs(bef ann): true
@1! ext_subst(bef ann):[(w_17,a)]
@1! to_rhs: true
@1! to_lhs: true
@1! new_ante_p: @M<:@M
@1! new_conseq_p: true
@1! l_h: x::node<a@A>@M[Orig]
@1! tmp_conseq: emp&true&{FLOW,(19,20)=__norm}[]
@1! tmp_conseq': emp&true&{FLOW,(19,20)=__norm}[]
@1! l_node inside consumed_h: x::node<a@M>@M[Orig]
@1! r_ann:@M
@1! consumed_h: x::node<a@M>@M[Orig]
@1! new_consumed: x::node<a@M>@M[Orig]
@1! new_ante: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
@1! new_conseq: emp&true&{FLOW,(19,20)=__norm}[]
@1! new_es: es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
@1!ann-sleek04.slk:51: 26: do_match (after): LHS:  es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
@1!ann-sleek04.slk:51: 26: do_match (after): RHS: emp&true&{FLOW,(19,20)=__norm}[]
@1!ann-sleek04.slk:51: 26: heap_entail_split_rhs: 
                            
ante:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
conseq:
 emp&true&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_conjunct:
context:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
conseq:
 emp&true&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_conjunct_helper:
context:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
conseq:
 emp&true&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
conseq:
 emp&true&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_empty_heap: ctx:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
!!!ann-sleek04.slk:51: 26: heap_entail_empty_heap: rhs:
 true
!!!ann-sleek04.slk:51: 26: rhs_p : : true
!!!ann-sleek04.slk:51: 26: conseq0 : : true
!!!ann-sleek04.slk:51: 26: >>>>>> entail_empty_heap: cp1 <<<<<<
!!!ann-sleek04.slk:51: 26: ante0 : : @M<:@M & x!=null & x!=null
!!!ann-sleek04.slk:51: 26: ante1 : : @M<:@M & x!=null & x!=null
!!!ann-sleek04.slk:51: 26: conseq : : true
!!!ann-sleek04.slk:51: 26: heap_entail_empty_heap: formula is valid
!!!ann-sleek04.slk:51: 26: heap_entail_empty_heap: res_ctx:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
do_match@1
do_match inp1 : x::node<a@M>@M[Orig]
do_match inp2 : x::node<w_17@M>@M[Orig]
do_match inp3 : es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: emp
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
do_match inp4 : emp&true&{FLOW,(19,20)=__norm}[]
do_match inp5 :[]
do_match@1 EXIT out : 
Good Context: [es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
               es_pure: true
               es_orig_ante: None
               es_heap: x::node<a@M>@M[Orig]
               es_evars: [w_17]
               es_rhs_eqset: [(w_17,a)]
               es_subst (from): [w_17]
               es_subst (to): [a]
               es_aux_conseq: true
               es_must_error: None
               es_var_measures: None
               es_term_err: None
               es_trace:  SEARCH ==>  Match ==> 
               es_unsat_flag: false]


!!!ann-sleek04.slk:51: 26: heap_entail_conjunct:
context:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_subst (from): [w_17]
 es_subst (to): [a]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
conseq:
 emp&@M<:@M & a=a&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_conjunct_helper:
context:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_subst (from): [w_17]
 es_subst (to): [a]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
conseq:
 emp&@M<:@M & a=a&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_subst (from): [w_17]
 es_subst (to): [a]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
conseq:
 emp&@M<:@M & a=a&{FLOW,(19,20)=__norm}[]
!!!ann-sleek04.slk:51: 26: heap_entail_empty_heap: ctx:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_subst (from): [w_17]
 es_subst (to): [a]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
!!!ann-sleek04.slk:51: 26: heap_entail_empty_heap: rhs:
 @M<:@M & a=a
!!!ann-sleek04.slk:51: 26: rhs_p : : @M<:@M & a=a
!!!ann-sleek04.slk:51: 26: conseq0 : : @M<:@M & a=a
!!!ann-sleek04.slk:51: 26: >>>>>> entail_empty_heap: cp1 <<<<<<
!!!ann-sleek04.slk:51: 26: ante0 : : @M<:@M & x!=null & x!=null
!!!ann-sleek04.slk:51: 26: ante1 : : @M<:@M & x!=null & x!=null
!!!ann-sleek04.slk:51: 26: conseq : : @M<:@M & a=a
!!!:0: 0: IMP #2
!!!:0: 0: >>>>>> imply_mix_formula: pure <<<<<<
!!!:0: 0: ante: :[ @M<:@M & x!=null & x!=null]
!!!:0: 0: coseq : : @M<:@M
!!!:0: 0: h : : @M<:@M & x!=null & x!=null
!!!:0: 0: IMP #2
!!!:0: 0: imply_timeout: ante:  @M<:@M & x!=null & x!=null
!!!:0: 0: imply_timeout: conseq:  @M<:@M
!!!:0: 0: ante 1: : @M<:@M & x!=null & x!=null
!!!:0: 0: ante 3: : @M<:@M & x!=null & x!=null
!!!:0: 0: ante 4: : @M<:@M & x!=null
!!!:0: 0: res: :true
!!!:0: 0: res : :true
!!!:0: 0: ante: :[]
!!!:0: 0: coseq : : @M<:@M
!!!:0: 0: ante: :[ @M<:@M & x!=null & x!=null]
!!!:0: 0: coseq : : a=a
!!!:0: 0: h : : @M<:@M & x!=null & x!=null
!!!:0: 0: IMP #3
!!!:0: 0: imply_timeout: ante:  @M<:@M & x!=null & x!=null
!!!:0: 0: imply_timeout: conseq:  a=a
!!!:0: 0: ante 1: : @M<:@M & x!=null & x!=null
!!!:0: 0: ante 3: : @M<:@M & x!=null & x!=null
!!!:0: 0: ante 4: : @M<:@M & x!=null
!!!:0: 0: res: :true
!!!:0: 0: res : :true
!!!:0: 0: ante: :[]
!!!:0: 0: coseq : : a=a
!!!ann-sleek04.slk:51: 26: heap_entail_empty_heap: formula is valid
!!!ann-sleek04.slk:51: 26: heap_entail_empty_heap: res_ctx:
 es_formula: x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: x::node<a@M>@M[Orig]
 es_evars: [w_17]
 es_rhs_eqset: [(w_17,a)]
 es_subst (from): [w_17]
 es_subst (to): [a]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_trace:  SEARCH ==>  Match ==> 
 es_unsat_flag: false
Entail (1) : Valid. 

 <1>x::node<a@A>@M[Orig]&@M<:@M&{FLOW,(19,20)=__norm}[]

Stop Omega... 3 invocations 
SAT Count   : 1
SAT % Hit   : 0.%
IMPLY Count : 2
IMPLY % Hit : 0.%
Time(cache overhead) : 0. (seconds)

Total verification time: 0.07 second(s)
	Time spent in main process: 0.06 second(s)
	Time spent in child processes: 0.01 second(s)

