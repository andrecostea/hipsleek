===============================================================
# ex6a.slk

@A should be treated as zero permission.

The way to handle this is to convert each of them to its
pure counterpart and then removing them from the heap state.
Is this being done?

checkentail x::node<_,_>@A * y::node<_,_> |- x!=y.
expect Fail_May.
//Got Valid, @A is the same as zero permission

checkentail x::node<_,_>@A * y::node<_,_>@A |- x!=y.
expect Fail_May.
//Got Valid, @A is the same as zero permission

checkentail x::node<_,_>@A * x::node<_,_>@A |- false.
expect Fail_May.
//Got Fail_Must, should be Fail_May.

checkentail_exact x::node<_,_>@A |- emp.
expect Valid.
// Got Fail_Must
//Entail 6: Fail.(must) cause: x::node<Anon_30,Anon_31>@A&{FLOW,(20,21)=__norm#E}[]:memory leak failure : residue is forbidden.
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================

