data node {
	int val; 
	node next; //#REC;	
}.


HeapPred H(node x,node@NI y).
HeapPred H2(node x,node@NI y,node@NI z).
HeapPred H3(node x,node@NI y,node@NI z).

lemma_unsafe "compl" H(self,y) * y::node<_,ss> -> self::node<_,q>*H(q,ss).

infer [H,H2,@classic] H2(q1,y,_) * y::node<_,ss>  |- H(q1,ss).
print residue.

/*
# ex20e9f5.slk

lemma_unsafe "compl" H(self,y) * y::node<_,ss> -> self::node<_,q>*H(q,ss).

infer [H,H2,@classic] H2(q1,y,_) * y::node<_,ss>  |- H(q1,ss).
print residue.

# How should we trigger complex --> lemma?

  Do a quick test to see if LHS of complex lemma can be entailed, 
  if so we allow it to be scheduled.

  Signature of LHS Lemma: [H,node]
  Signature of RHS Lemma: [node,H]

  As LHS has our signature [H2,node], we scedule a -> for "compl"


*/