// must bug via predicates?
data node { int val ; node next }.

pred pos_ll<n> == self = null & n = 0
	or self::node<d,r> * r::pos_ll<n - 1> & d>0
	inv n >= 0.

pred neg_ll<n> == self = null & n = 0
	or self::node<d,r> * r::neg_ll<n - 1> & d<0
	inv n >= 0.

lemma self::pos_ll<n> & n>0 -> self::neg_ll<n>.
//lemma self::neg_ll<n>  & n>0 ->- self::pos_ll<n> & flow __Error.

//1. VALID
checkentail x::pos_ll<n> & n<=0 |- x::neg_ll<n> .

//2. should be a must failure
checkentail x::pos_ll<n> & n<=0 |- x::neg_ll<n> & x!=null.

//3. should be a must failure (not may)
checkentail x::pos_ll<n> & n<=0 |- x::neg_ll<m> & m>0.

//4. should be a must failure; 
checkentail x::pos_ll<n> & n>0 |- x=null.

// TODO
//5. should be a must failure; but needs an unfold of RHS
checkentail x::pos_ll<n> & n>0 |- x::neg_ll<m> & m=0.

//6. VALID
checkentail x::pos_ll<n>  |- x::pos_ll<m> .

//7. should be a may failure;
checkentail x::pos_ll<n>  |- x::neg_ll<m> .

// TODO
//8. should be a must failure; but detected as May failure (needs an unfold of LHS)
checkentail x::pos_ll<n> |- x::neg_ll<n> & n>0.

// 9. OK Valid
checkentail x::pos_ll<n> & n=0|- x::neg_ll<n>.

//10. must failure ; but detected as a May failure (needs lemma)
checkentail x::pos_ll<m> & m> 0|- x::neg_ll<n> & n>0.


//11. OK must fail
//checkentail x::pos_ll<m> & m=0 |- x::neg_ll<n> & n>0.



/*
no unfold it seems:
Entail(15)=Fail.(must) cause:12
printing here:  
Good Context: [es_formula: SS 59:x::pos_ll<n>@M[Orig] & true & {FLOW,(27,27)=__norm,}
               es_pure: true
               es_heap: true
               es_evars: [n_240]
               es_aux_conseq: true
               es_must_error: Some(12)

*/

//2. VALID but detected as MAY
//checkentail x::pos_ll<n> |- x::neg_ll<n> & n>0 & flow __Error.
/*
Good Context: [es_formula: SS 42:x::pos_ll<n>@M[Orig] & true & {FLOW,(27,27)=__norm,}
               es_pure: true
               es_heap: true
               es_evars: [n_172]
               es_aux_conseq: true
               es_must_error: Some(12)
               es_var_label: None]

*/




