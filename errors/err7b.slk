// must bug via predicates?
data node { int val ; node next }.

pred pos_ll<n> == self = null & n = 0
	or self::node<d,r> * r::pos_ll<n - 1> & d>0
	inv n >= 0.

pred neg_ll<n> == self = null & n = 0
	or self::node<d,r> * r::neg_ll<n - 1> & d<0
	inv n >= 0.

lemma self::pos_ll<n> & n>0 -> self::neg_ll<n> & flow __Error.
lemma self::neg_ll<n>  & n>0 -> self::pos_ll<n> & flow __Error.

//todo: better error message?
//1. Entail(10)=Fail.(must)  cause:1 Expecting Failure but Success instead
checkentail x::pos_ll<m> & m> 0|- x::neg_ll<n> & n>0.


//2. Entail(10)=Fail. cause:1 Expecting Failure but Success instead
checkentail x::pos_ll<m> & m> 0|- x::neg_ll<n>.
