data node { int val ; node next }.

pred ll<n> == self = null & n = 0
	or self::node<next = r> * r::ll<n - 1>
	inv n >= 0.

/*
// 1. sat
checksat x::node<a,_> & a >0.

//2. unsat
checksat x::node<a,_> & x=null.

//3. sat
checksat x::ll<n> & n =1.

//4. unsat
checksat x::ll<n> & n =1 & x=null.

//5. unsat.
checksat x::ll<n>*x::node<a,_> & n >=1.

//6a. unsat.
checksat x::ll<n> & x!=null & n =0.

//6. unsat. FAIL
checksat x::ll<n> & y=x & y!=null & n =0.

//7. unsat
checksat x::ll<n> & y=x & y=null & n =1.

//8. unsat.
checksat x::ll<n>*x::node<a,_> & n =0.

//9. unsat.
checksat y::node<_,_>*x::node<a,_> & x=y.
*/

checksat x::node<a,_> * y::node<_,_>& x=y & a>3.

checkentail x::node<a,_> * y::node<_,_>& x=y & a>3 |- x::node<b,_> & b < 0.
