(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun n2 () Int)
(declare-fun s2 () Int)
(declare-fun b2 () Int)
(declare-fun v_bool_96_1413_primed () Int)
(declare-fun v_bool_92_1414_primed () Int)
(declare-fun x2 () Int)
(declare-fun sm_2037 () Int)
(declare-fun n1 () Int)
(declare-fun s1 () Int)
(declare-fun b1 () Int)
(declare-fun x1 () Int)
(declare-fun v_int_100_1390_primed () Int)
(declare-fun n () Int)
(declare-fun xs () Int)
(declare-fun xl () Int)
(declare-fun x1_primed () Int)
(declare-fun qs_2041 () Int)
(declare-fun lg_2038 () Int)
(declare-fun flted_22_2039 () Int)
(declare-fun sres_2053 () Int)
(declare-fun lres_2054 () Int)
(declare-fun flted_117_2052 () Int)
(declare-fun x2_primed () Int)
(declare-fun q_2040 () Int)
(declare-fun res () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= (+ flted_22_2039 1) n2))
(assert (<= s2 qs_2041))
(assert (= sm_2037 s2))
(assert (= lg_2038 b2))
(assert (not (> v_bool_96_1413_primed 0)))
(assert (not (> v_bool_92_1414_primed 0)))
(assert (> x2_primed 0))
(assert (= x2_primed x2))
(assert (= x1_primed x1))
(assert (= v_int_100_1390_primed sm_2037))
(assert (= n n1))
(assert (= xs s1))
(assert (= xl b1))
(assert (<= 1 n1))
(assert (<= s1 b1))
(assert (> x1 0))
(assert (= flted_117_2052 (+ 1 n)))
(assert (or (and (= sres_2053 v_int_100_1390_primed) (< v_int_100_1390_primed xs)) (and (= sres_2053 xs) (>= v_int_100_1390_primed xs))))
(assert (or (and (= lres_2054 v_int_100_1390_primed) (>= v_int_100_1390_primed xl)) (and (= lres_2054 xl) (< v_int_100_1390_primed xl))))
(assert (<= 1 n))
(assert (<= xs xl))
(assert (> x1_primed 0))
(assert (= x2_primed 1))
(assert (or (and (and (= lg_2038 qs_2041) (= flted_22_2039 1)) (> q_2040 0)) (and (and (<= qs_2041 lg_2038) (<= 2 flted_22_2039)) (> q_2040 0))))
(assert (or (and (and (= lres_2054 sres_2053) (= flted_117_2052 1)) (> res 0)) (and (and (<= sres_2053 lres_2054) (<= 2 flted_117_2052)) (> res 0))))
(assert (not (= x2_primed res)))
(assert (not (= x2_primed q_2040)))
(assert (not (= q_2040 res)))
;Negation of Consequence
(assert (not false))
(check-sat)