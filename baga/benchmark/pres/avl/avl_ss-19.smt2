(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun my () Int)
(declare-fun height_3796 () Int)
(declare-fun ny () Int)
(declare-fun z_primed () Int)
(declare-fun y () Int)
(declare-fun x () Int)
(declare-fun left_150_3764 () Int)
(declare-fun Anon_18 () Int)
(declare-fun right_151_3767 () Int)
(declare-fun Anon_19 () Int)
(declare-fun height1_3800 () Int)
(declare-fun size1_3799 () Int)
(declare-fun p_3798 () Int)
(declare-fun height2_3803 () Int)
(declare-fun size2_3802 () Int)
(declare-fun q_3801 () Int)
(declare-fun ny_3763 () Int)
(declare-fun mz () Int)
(declare-fun z () Int)
(declare-fun y_primed () Int)
(declare-fun x_primed () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= my (+ (+ size2_3802 1) size1_3799)))
(assert (<= height2_3803 (+ 1 height1_3800)))
(assert (<= height1_3800 (+ 1 height2_3803)))
(assert (exists ((max_33 Int)) (and (= ny (+ 1 max_33)) (or (and (= max_33 height1_3800) (>= height1_3800 height2_3803)) (and (= max_33 height2_3803) (< height1_3800 height2_3803))))))
(assert (= height_3796 ny))
(assert (= ny_3763 ny))
(assert (> y 0))
(assert (= z_primed z))
(assert (= y_primed y))
(assert (= x_primed x))
(assert (= left_150_3764 Anon_18))
(assert (= right_151_3767 Anon_19))
(assert (= y_primed 1))
(assert (or (and (and (< p_3798 1) (= size1_3799 0)) (= height1_3800 0)) (and (and (<= 1 height1_3800) (<= 1 size1_3799)) (> p_3798 0))))
(assert (or (and (and (< q_3801 1) (= size2_3802 0)) (= height2_3803 0)) (and (and (<= 1 height2_3803) (<= 1 size2_3802)) (> q_3801 0))))
(assert (or (and (and (< z 1) (= mz 0)) (= ny_3763 0)) (and (and (<= 1 ny_3763) (<= 1 mz)) (> z 0))))
(assert (= x_primed 2))
(assert (not (= y_primed x_primed)))
;Negation of Consequence
(assert (not false))
(check-sat)