(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun mx () Int)
(declare-fun height_3656 () Int)
(declare-fun y_primed () Int)
(declare-fun x () Int)
(declare-fun nx () Int)
(declare-fun v_primed () Int)
(declare-fun x_primed () Int)
(declare-fun height1_3660 () Int)
(declare-fun size1_3659 () Int)
(declare-fun p_3658 () Int)
(declare-fun height2_3663 () Int)
(declare-fun size2_3662 () Int)
(declare-fun q_3661 () Int)
(declare-fun nx_3636 () Int)
(declare-fun my () Int)
(declare-fun y () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= mx (+ (+ size2_3662 1) size1_3659)))
(assert (<= height2_3663 (+ 1 height1_3660)))
(assert (<= height1_3660 (+ 1 height2_3663)))
(assert (exists ((max_33 Int)) (and (= nx (+ 1 max_33)) (or (and (= max_33 height1_3660) (>= height1_3660 height2_3663)) (and (= max_33 height2_3663) (< height1_3660 height2_3663))))))
(assert (= height_3656 nx))
(assert (= x_primed x))
(assert (= y_primed y))
(assert (> x 0))
(assert (= nx_3636 nx))
(assert true)
(assert (= v_primed 0))
(assert (= x_primed 1))
(assert (or (and (and (< p_3658 1) (= size1_3659 0)) (= height1_3660 0)) (and (and (<= 1 height1_3660) (<= 1 size1_3659)) (> p_3658 0))))
(assert (or (and (and (< q_3661 1) (= size2_3662 0)) (= height2_3663 0)) (and (and (<= 1 height2_3663) (<= 1 size2_3662)) (> q_3661 0))))
(assert (or (and (and (< y 1) (= my 0)) (= nx_3636 0)) (and (and (<= 1 nx_3636) (<= 1 my)) (> y 0))))
;Negation of Consequence
(assert (not false))
(check-sat)