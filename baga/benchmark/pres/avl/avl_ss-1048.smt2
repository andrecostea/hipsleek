(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun n () Int)
(declare-fun h2 () Int)
(declare-fun m () Int)
(declare-fun s2 () Int)
(declare-fun t2_primed () Int)
(declare-fun t2 () Int)
(declare-fun t1 () Int)
(declare-fun v_bool_465_1388_primed () Int)
(declare-fun height_6994 () Int)
(declare-fun h1 () Int)
(declare-fun s1 () Int)
(declare-fun size1_6997 () Int)
(declare-fun height1_6998 () Int)
(declare-fun flted_161_7016 () Int)
(declare-fun Anon_7017 () Int)
(declare-fun tmp_primed () Int)
(declare-fun s1_7022 () Int)
(declare-fun h1_7023 () Int)
(declare-fun s2_7024 () Int)
(declare-fun h2_7025 () Int)
(declare-fun v_node_469_1386_primed () Int)
(declare-fun t1_primed () Int)
(declare-fun height2_7001 () Int)
(declare-fun size2_7000 () Int)
(declare-fun q_6999 () Int)
(declare-fun Anon_7040 () Int)
(declare-fun flted_455_7039 () Int)
(declare-fun tmp1_primed () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (<= 0 n))
(assert (<= 0 m))
(assert (= flted_161_7016 (+ 1 m)))
(assert (<= 0 h2))
(assert (<= 0 s2))
(assert (= n h2))
(assert (= m s2))
(assert (= t1_primed t1))
(assert (= t2_primed t2))
(assert (> t1 0))
(assert (> t1_primed 0))
(assert (not (> v_bool_465_1388_primed 0)))
(assert (= height_6994 h1))
(assert (exists ((max_33 Int)) (and (= h1 (+ 1 max_33)) (or (and (= max_33 height1_6998) (>= height1_6998 height2_7001)) (and (= max_33 height2_7001) (< height1_6998 height2_7001))))))
(assert (<= height1_6998 (+ 1 height2_7001)))
(assert (<= height2_7001 (+ 1 height1_6998)))
(assert (= s1 (+ (+ size2_7000 1) size1_6997)))
(assert (= s1_7022 flted_161_7016))
(assert (= h1_7023 Anon_7017))
(assert (= s2_7024 size1_6997))
(assert (= h2_7025 height1_6998))
(assert (<= 0 size1_6997))
(assert (<= 0 height1_6998))
(assert (<= 0 flted_161_7016))
(assert (<= 0 Anon_7017))
(assert (= flted_455_7039 (+ s2_7024 s1_7022)))
(assert (> tmp_primed 0))
(assert (<= 0 s1_7022))
(assert (<= 0 h1_7023))
(assert (<= 0 s2_7024))
(assert (<= 0 h2_7025))
(assert (= v_node_469_1386_primed q_6999))
(assert (< tmp1_primed 1))
(assert (= t1_primed 1))
(assert (or (and (and (< q_6999 1) (= size2_7000 0)) (= height2_7001 0)) (and (and (<= 1 height2_7001) (<= 1 size2_7000)) (> q_6999 0))))
(assert (or (and (and (< tmp1_primed 1) (= flted_455_7039 0)) (= Anon_7040 0)) (and (and (<= 1 Anon_7040) (<= 1 flted_455_7039)) (> tmp1_primed 0))))
;Negation of Consequence
(assert (not false))
(check-sat)