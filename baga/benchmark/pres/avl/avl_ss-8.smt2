(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun x () Int)
(declare-fun nx () Int)
(declare-fun mx () Int)
(declare-fun height_3665 () Int)
(declare-fun tmp_3684 () Int)
(declare-fun tmp_3681 () Int)
(declare-fun res () Int)
(declare-fun v_node_139_3016_primed () Int)
(declare-fun Anon_3687 () Int)
(declare-fun v_3683 () Int)
(declare-fun p_3688 () Int)
(declare-fun q_3691 () Int)
(declare-fun y_primed () Int)
(declare-fun x_primed () Int)
(declare-fun height1_3669 () Int)
(declare-fun size1_3668 () Int)
(declare-fun p_3667 () Int)
(declare-fun height2_3672 () Int)
(declare-fun size2_3671 () Int)
(declare-fun q_3670 () Int)
(declare-fun nx_3673 () Int)
(declare-fun my () Int)
(declare-fun y () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= v_3683 0))
(assert (= nx_3673 nx))
(assert (> x 0))
(assert (= y_primed y))
(assert (= x_primed x))
(assert (= height_3665 nx))
(assert (exists ((max_33 Int)) (and (= nx (+ 1 max_33)) (or (and (= max_33 height1_3669) (>= height1_3669 height2_3672)) (and (= max_33 height2_3672) (< height1_3669 height2_3672))))))
(assert (<= height1_3669 (+ 1 height2_3672)))
(assert (<= height2_3672 (+ 1 height1_3669)))
(assert (= mx (+ (+ size2_3671 1) size1_3668)))
(assert (= tmp_3681 height_3665))
(assert (= tmp_3684 (+ 1 tmp_3681)))
(assert (= res v_node_139_3016_primed))
(assert (= Anon_3687 v_3683))
(assert (= p_3688 x_primed))
(assert (= q_3691 y_primed))
(assert (= x_primed 1))
(assert (or (and (and (< p_3667 1) (= size1_3668 0)) (= height1_3669 0)) (and (and (<= 1 height1_3669) (<= 1 size1_3668)) (> p_3667 0))))
(assert (or (and (and (< q_3670 1) (= size2_3671 0)) (= height2_3672 0)) (and (and (<= 1 height2_3672) (<= 1 size2_3671)) (> q_3670 0))))
(assert (or (and (and (< y 1) (= my 0)) (= nx_3673 0)) (and (and (<= 1 nx_3673) (<= 1 my)) (> y 0))))
;Negation of Consequence
(assert (not false))
(check-sat)