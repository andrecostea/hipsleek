(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun tmp_primed () Int)
(declare-fun tval_primed () Int)
(declare-fun mx () Int)
(declare-fun mx2_3249 () Int)
(declare-fun d_3243 () Int)
(declare-fun mx1_3246 () Int)
(declare-fun mx3_3354 () Int)
(declare-fun v_primed () Int)
(declare-fun maxi_3356 () Int)
(declare-fun mx1 () Int)
(declare-fun r_3247 () Int)
(declare-fun m2_3241 () Int)
(declare-fun m1_3240 () Int)
(declare-fun m3_3242 () Int)
(declare-fun n () Int)
(declare-fun mx2 () Int)
(declare-fun tleft_primed () Int)
(declare-fun tnleft_primed () Int)
(declare-fun m2_3248 () Int)
(declare-fun m1_3245 () Int)
(declare-fun mx4_3355 () Int)
(declare-fun tnright_primed () Int)
(declare-fun tright_primed () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= tmp_primed tval_primed))
(assert (= mx2_3249 0))
(assert (= tval_primed d_3243))
(assert (<= d_3243 mx))
(assert (<= mx2_3249 d_3243))
(assert (<= 0 mx1_3246))
(assert (<= 0 d_3243))
(assert (<= mx1_3246 d_3243))
(assert (= mx3_3354 0))
(assert (= mx1 mx1_3246))
(assert (<= mx3_3354 mx1))
(assert (<= 0 v_primed))
(assert (<= 0 mx2))
(assert (<= 0 mx1))
(assert (<= v_primed maxi_3356))
(assert (or (and (= maxi_3356 mx1) (>= mx1 mx2)) (and (= maxi_3356 mx2) (< mx1 mx2))))
(assert (<= 0 m1_3240))
(assert (< r_3247 1))
(assert (= m2_3241 0))
(assert (< tleft_primed 1))
(assert (= tnleft_primed 0))
(assert (= mx2 0))
(assert (or (= m2_3241 0) (< r_3247 1)))
(assert (= m2_3248 0))
(assert (not (= m1_3245 0)))
(assert (< 0 n))
(assert (= m2_3241 m2_3248))
(assert (= m1_3240 m1_3245))
(assert (<= m3_3242 1))
(assert (<= 0 m3_3242))
(assert (= (+ m3_3242 m2_3248) m1_3245))
(assert (= n (+ (+ m2_3248 1) m1_3245)))
(assert (<= mx4_3355 mx2))
(assert (or (= tnleft_primed 0) (< tleft_primed 1)))
(assert (<= tnleft_primed (+ 1 tnright_primed)))
(assert (<= (+ 0 tnright_primed) tnleft_primed))
(assert (= (+ (+ 1 tnleft_primed) tnright_primed) (+ m2_3248 m1_3245)))
(assert (or (and (and (< tright_primed 1) (= tnright_primed 0)) (= mx4_3355 0)) (and (and (<= 0 mx4_3355) (<= 1 tnright_primed)) (> tright_primed 0))))
;Negation of Consequence
(assert (not (or (= tnright_primed 0) (< tright_primed 1))))
(check-sat)