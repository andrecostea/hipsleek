(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun b () Int)
(declare-fun ba1 () Int)
(declare-fun n () Int)
(declare-fun an () Int)
(declare-fun m () Int)
(declare-fun am () Int)
(declare-fun v_node_161_1500_primed () Int)
(declare-fun l () Int)
(declare-fun left_160_2944 () Int)
(declare-fun right_159_2941 () Int)
(declare-fun r () Int)
(declare-fun k1 () Int)
(declare-fun bn () Int)
(declare-fun ba2 () Int)
(declare-fun bm () Int)
(declare-fun rl () Int)
(declare-fun cn () Int)
(declare-fun ba3 () Int)
(declare-fun cm () Int)
(declare-fun rr () Int)
(declare-fun k1_primed () Int)
(declare-fun k2_primed () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= b ba1))
(assert (= n an))
(assert (= m am))
(assert (= v_node_161_1500_primed l))
(assert (= left_160_2944 rl))
(assert (= right_159_2941 r))
(assert (= k2_primed r))
(assert (= k1_primed k1))
(assert (or (and (and (and (< rl 1) (= bm 0)) (= bn 0)) (= ba2 1)) (and (and (and (and (and (<= 0 ba2) (<= (+ (- 0 bn) 2) ba2)) (<= ba2 bn)) (<= ba2 2)) (<= 1 bm)) (> rl 0))))
(assert (or (and (and (and (< rr 1) (= cm 0)) (= cn 0)) (= ba3 1)) (and (and (and (and (and (<= 0 ba3) (<= (+ (- 0 cn) 2) ba3)) (<= ba3 cn)) (<= ba3 2)) (<= 1 cm)) (> rr 0))))
(assert (= k1_primed 1))
(assert (= k2_primed 2))
(assert (not (= k1_primed k2_primed)))
;Negation of Consequence
(assert (not false))
(check-sat)