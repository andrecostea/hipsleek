(set-info :source loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
(set-info :smt-lib-version 2.0) 
(set-info :status  sat) 
;Variables declarations
(declare-fun Anon_3304 () Int)
(declare-fun n2_3303 () Int)
(declare-fun m2_3302 () Int)
(declare-fun Anon_3300 () Int)
(declare-fun n1_3299 () Int)
(declare-fun m1_3298 () Int)
(declare-fun q_3301 () Int)
(declare-fun reslr_3276 () Int)
(declare-fun p_3297 () Int)
(declare-fun resll_3275 () Int)
(declare-fun Anon_3296 () Int)
(declare-fun Anon_3273 () Int)
(declare-fun k3 () Int)
(declare-fun Anon_46 () Int)
(declare-fun Anon_21 () Int)
(declare-fun Anon_47 () Int)
(declare-fun Anon_22 () Int)
(declare-fun l () Int)
(declare-fun a () Int)
(declare-fun r () Int)
(declare-fun Anon_48 () Int)
(declare-fun Anon_24 () Int)
(declare-fun Anon_49 () Int)
(declare-fun Anon_25 () Int)
(declare-fun rl () Int)
(declare-fun b () Int)
(declare-fun rr () Int)
(declare-fun c () Int)
(declare-fun cm () Int)
(declare-fun cn () Int)
(declare-fun Anon_27 () Int)
(declare-fun bm () Int)
(declare-fun bn () Int)
(declare-fun Anon_26 () Int)
(declare-fun k2 () Int)
(declare-fun am () Int)
(declare-fun an () Int)
(declare-fun Anon_23 () Int)
(declare-fun tmp1_3277 () Int)
(declare-fun tmp2_3279 () Int)
(declare-fun resln_3280 () Int)
(declare-fun left_103_3281 () Int)
(declare-fun k1 () Int)
(declare-fun Anon_40 () Int)
(declare-fun Anon_18 () Int)
(declare-fun Anon_41 () Int)
(declare-fun Anon_19 () Int)
(declare-fun l_3286 () Int)
(declare-fun r_3282 () Int)
(declare-fun d () Int)
(declare-fun Anon_42 () Int)
(declare-fun Anon_3271 () Int)
(declare-fun Anon_43 () Int)
(declare-fun resn_3278 () Int)
(declare-fun ll () Int)
(declare-fun lr () Int)
(declare-fun resr_3274 () Int)
(declare-fun cm_3235 () Int)
(declare-fun cn_3236 () Int)
(declare-fun ba3 () Int)
(declare-fun bm_3233 () Int)
(declare-fun bn_3234 () Int)
(declare-fun ba2 () Int)
(declare-fun am_3231 () Int)
(declare-fun an_3232 () Int)
(declare-fun ba1 () Int)
(declare-fun resl_3272 () Int)
(declare-fun v_node_103_3295 () Int)
(declare-fun dm () Int)
(declare-fun dn () Int)
(declare-fun Anon_20 () Int)
(declare-fun k3_primed () Int)
(declare-fun tmp1_3332 () Int)
(declare-fun resn_3333 () Int)
(declare-fun tmp2_3334 () Int)
(declare-fun resrn_3335 () Int)
(declare-fun an_3288 () Int)
(declare-fun ba1_3289 () Int)
(declare-fun am_3287 () Int)
(declare-fun resl_3327 () Int)
(declare-fun bn_3291 () Int)
(declare-fun ba2_3292 () Int)
(declare-fun bm_3290 () Int)
(declare-fun resrl_3330 () Int)
(declare-fun cn_3284 () Int)
(declare-fun ba3_3285 () Int)
(declare-fun cm_3283 () Int)
(declare-fun resrr_3331 () Int)
(declare-fun res () Int)
(declare-fun resr_3328 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= am_3287 (+ (+ m2_3302 1) m1_3298)))
(assert (exists ((max_63 Int)) (and (= an_3288 (+ 1 max_63)) (or (and (= max_63 n1_3299) (>= n1_3299 n2_3303)) (and (= max_63 n2_3303) (< n1_3299 n2_3303))))))
(assert (= (+ ba1_3289 n2_3303) (+ 1 n1_3299)))
(assert (= resln_3280 an_3288))
(assert (or (and (= resln_3280 (+ n1_3299 1)) (<= n2_3303 n1_3299)) (and (= resln_3280 (+ n2_3303 1)) (< n1_3299 n2_3303))))
(assert (<= n2_3303 (+ 1 n1_3299)))
(assert (<= n1_3299 (+ n2_3303 1)))
(assert (= Anon_3304 ba2))
(assert (= n2_3303 bn_3234))
(assert (= m2_3302 bm_3233))
(assert (= Anon_3300 ba1))
(assert (= n1_3299 an_3232))
(assert (= m1_3298 am_3231))
(assert (= q_3301 reslr_3276))
(assert (= p_3297 resll_3275))
(assert (= Anon_3296 Anon_3273))
(assert (<= dn (+ cn 1)))
(assert (<= cn (+ dn 1)))
(assert (<= an (+ bn 1)))
(assert (<= bn (+ an 1)))
(assert (= k3_primed k3))
(assert (= Anon_46 Anon_21))
(assert (= Anon_47 Anon_22))
(assert (= l a))
(assert (= r k2))
(assert (= am_3231 am))
(assert (= an_3232 an))
(assert (= ba1 Anon_23))
(assert (= Anon_48 Anon_24))
(assert (= Anon_49 Anon_25))
(assert (= rl b))
(assert (= rr c))
(assert (= bm_3233 bm))
(assert (= bn_3234 bn))
(assert (= ba2 Anon_26))
(assert (= cm_3235 cm))
(assert (= cn_3236 cn))
(assert (= ba3 Anon_27))
(assert (<= 0 cm))
(assert (<= 0 cn))
(assert (<= 0 Anon_27))
(assert (<= Anon_27 2))
(assert (<= 0 bm))
(assert (<= 0 bn))
(assert (<= 0 Anon_26))
(assert (<= Anon_26 2))
(assert (> k2 0))
(assert (<= 0 am))
(assert (<= 0 an))
(assert (<= 0 Anon_23))
(assert (<= Anon_23 2))
(assert (> k1 0))
(assert (= resln_3280 (+ 1 tmp1_3277)))
(assert (or (and (= tmp1_3277 an_3232) (>= an_3232 bn_3234)) (and (= tmp1_3277 bn_3234) (< an_3232 bn_3234))))
(assert (= resn_3278 (+ 1 tmp2_3279)))
(assert (or (and (= tmp2_3279 resln_3280) (>= resln_3280 cn_3236)) (and (= tmp2_3279 cn_3236) (< resln_3280 cn_3236))))
(assert (= left_103_3281 k1))
(assert (= Anon_40 Anon_18))
(assert (= Anon_41 Anon_19))
(assert (= l_3286 v_node_103_3295))
(assert (= r_3282 d))
(assert (= cm_3283 dm))
(assert (= cn_3284 dn))
(assert (= ba3_3285 Anon_20))
(assert (= Anon_42 Anon_3271))
(assert (= Anon_43 resn_3278))
(assert (= ll resl_3272))
(assert (= lr resr_3274))
(assert (= bm_3290 cm_3235))
(assert (= bn_3291 cn_3236))
(assert (= ba2_3292 ba3))
(assert (<= 0 cm_3235))
(assert (<= 0 cn_3236))
(assert (<= 0 ba3))
(assert (<= ba3 2))
(assert (<= 0 bm_3233))
(assert (<= 0 bn_3234))
(assert (<= 0 ba2))
(assert (<= ba2 2))
(assert (<= 0 am_3231))
(assert (<= 0 an_3232))
(assert (<= 0 ba1))
(assert (<= ba1 2))
(assert (> resl_3272 0))
(assert (> v_node_103_3295 0))
(assert (<= 0 dm))
(assert (<= 0 dn))
(assert (<= 0 Anon_20))
(assert (<= Anon_20 2))
(assert (> k3_primed 0))
(assert (= resrn_3335 (+ 1 tmp1_3332)))
(assert (or (and (= tmp1_3332 cn_3284) (>= cn_3284 bn_3291)) (and (= tmp1_3332 bn_3291) (< cn_3284 bn_3291))))
(assert (= resn_3333 (+ 1 tmp2_3334)))
(assert (or (and (= tmp2_3334 an_3288) (>= an_3288 resrn_3335)) (and (= tmp2_3334 resrn_3335) (< an_3288 resrn_3335))))
(assert (<= 0 cm_3283))
(assert (<= 0 cn_3284))
(assert (<= 0 ba3_3285))
(assert (<= ba3_3285 2))
(assert (<= 0 am_3287))
(assert (<= 0 an_3288))
(assert (<= 0 ba1_3289))
(assert (<= ba1_3289 2))
(assert (<= 0 bm_3290))
(assert (<= 0 bn_3291))
(assert (<= 0 ba2_3292))
(assert (<= ba2_3292 2))
(assert (= res 1))
(assert (or (and (and (and (< resl_3327 1) (= am_3287 0)) (= an_3288 0)) (= ba1_3289 1)) (and (and (and (and (and (<= 0 ba1_3289) (<= (+ (- 0 an_3288) 2) ba1_3289)) (<= ba1_3289 an_3288)) (<= ba1_3289 2)) (<= 1 am_3287)) (> resl_3327 0))))
(assert (= resr_3328 2))
(assert (or (and (and (and (< resrl_3330 1) (= bm_3290 0)) (= bn_3291 0)) (= ba2_3292 1)) (and (and (and (and (and (<= 0 ba2_3292) (<= (+ (- 0 bn_3291) 2) ba2_3292)) (<= ba2_3292 bn_3291)) (<= ba2_3292 2)) (<= 1 bm_3290)) (> resrl_3330 0))))
(assert (or (and (and (and (< resrr_3331 1) (= cm_3283 0)) (= cn_3284 0)) (= ba3_3285 1)) (and (and (and (and (and (<= 0 ba3_3285) (<= (+ (- 0 cn_3284) 2) ba3_3285)) (<= ba3_3285 cn_3284)) (<= ba3_3285 2)) (<= 1 cm_3283)) (> resrr_3331 0))))
(assert (not (= res resr_3328)))
;Negation of Consequence
(assert (not false))
(check-sat)