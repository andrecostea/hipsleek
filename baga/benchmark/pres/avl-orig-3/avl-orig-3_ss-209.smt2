(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun ba2 () Int)
(declare-fun Anon_38 () Int)
(declare-fun bn_3493 () Int)
(declare-fun bm_3492 () Int)
(declare-fun cm () Int)
(declare-fun ba1 () Int)
(declare-fun Anon_37 () Int)
(declare-fun an_3491 () Int)
(declare-fun am_3490 () Int)
(declare-fun bm () Int)
(declare-fun lr () Int)
(declare-fun c () Int)
(declare-fun ll () Int)
(declare-fun b () Int)
(declare-fun Anon_43 () Int)
(declare-fun Anon_36 () Int)
(declare-fun Anon_42 () Int)
(declare-fun Anon_35 () Int)
(declare-fun ba3 () Int)
(declare-fun Anon_34 () Int)
(declare-fun cn_3489 () Int)
(declare-fun cm_3488 () Int)
(declare-fun dm () Int)
(declare-fun r () Int)
(declare-fun d () Int)
(declare-fun l () Int)
(declare-fun k3 () Int)
(declare-fun Anon_41 () Int)
(declare-fun Anon_33 () Int)
(declare-fun Anon_40 () Int)
(declare-fun Anon_32 () Int)
(declare-fun v_node_119_1849_primed () Int)
(declare-fun k2 () Int)
(declare-fun k1_primed () Int)
(declare-fun bn () Int)
(declare-fun dn () Int)
(declare-fun cn () Int)
(declare-fun k1 () Int)
(declare-fun an () Int)
(declare-fun Anon_31 () Int)
(declare-fun am () Int)
(declare-fun a () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= ba2 Anon_38))
(assert (= bn_3493 cn))
(assert (= bm_3492 cm))
(assert (= ba1 Anon_37))
(assert (= an_3491 bn))
(assert (= am_3490 bm))
(assert (= lr c))
(assert (= ll b))
(assert (= Anon_43 Anon_36))
(assert (= Anon_42 Anon_35))
(assert (= ba3 Anon_34))
(assert (= cn_3489 dn))
(assert (= cm_3488 dm))
(assert (= r d))
(assert (= l k3))
(assert (= Anon_41 Anon_33))
(assert (= Anon_40 Anon_32))
(assert (= v_node_119_1849_primed k2))
(assert (= k1_primed k1))
(assert (<= bn (+ an 1)))
(assert (<= an (+ bn 1)))
(assert (<= cn (+ dn 1)))
(assert (<= dn (+ cn 1)))
(assert (= k1 1))
(assert (or (and (and (and (< a 1) (= am 0)) (= an 0)) (= Anon_31 1)) (and (and (and (and (and (<= 0 Anon_31) (<= (+ (- 0 an) 2) Anon_31)) (<= Anon_31 an)) (<= Anon_31 2)) (<= 1 am)) (> a 0))))
;Negation of Consequence
(assert (not false))
(check-sat)