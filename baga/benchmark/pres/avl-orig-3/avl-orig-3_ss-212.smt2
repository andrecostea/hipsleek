(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun right_119_1854_primed () Int)
(declare-fun left_119_1853_primed () Int)
(declare-fun height_119_1852_primed () Int)
(declare-fun Anon_30 () Int)
(declare-fun ele_119_1851_primed () Int)
(declare-fun Anon_29 () Int)
(declare-fun resn_3535 () Int)
(declare-fun tmp2_3536 () Int)
(declare-fun resrn_3537 () Int)
(declare-fun tmp1_3534 () Int)
(declare-fun k2 () Int)
(declare-fun Anon_38 () Int)
(declare-fun cm () Int)
(declare-fun Anon_37 () Int)
(declare-fun bm () Int)
(declare-fun lr () Int)
(declare-fun c () Int)
(declare-fun ll () Int)
(declare-fun b () Int)
(declare-fun Anon_43 () Int)
(declare-fun Anon_36 () Int)
(declare-fun Anon_42 () Int)
(declare-fun Anon_35 () Int)
(declare-fun Anon_34 () Int)
(declare-fun dm () Int)
(declare-fun r () Int)
(declare-fun d () Int)
(declare-fun l () Int)
(declare-fun k3 () Int)
(declare-fun Anon_41 () Int)
(declare-fun Anon_33 () Int)
(declare-fun Anon_40 () Int)
(declare-fun Anon_32 () Int)
(declare-fun k1_primed () Int)
(declare-fun k1 () Int)
(declare-fun bn () Int)
(declare-fun dn () Int)
(declare-fun cn () Int)
(declare-fun an () Int)
(declare-fun Anon_31 () Int)
(declare-fun am () Int)
(declare-fun a () Int)
(declare-fun an_3491 () Int)
(declare-fun ba1 () Int)
(declare-fun am_3490 () Int)
(declare-fun resl_3529 () Int)
(declare-fun bn_3493 () Int)
(declare-fun ba2 () Int)
(declare-fun bm_3492 () Int)
(declare-fun resrl_3532 () Int)
(declare-fun cn_3489 () Int)
(declare-fun ba3 () Int)
(declare-fun cm_3488 () Int)
(declare-fun resrr_3533 () Int)
(declare-fun v_node_119_1850_primed () Int)
(declare-fun resr_3530 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= right_119_1854_primed k2))
(assert (= left_119_1853_primed a))
(assert (= height_119_1852_primed Anon_30))
(assert (= ele_119_1851_primed Anon_29))
(assert (<= ba2 2))
(assert (<= 0 ba2))
(assert (<= 0 bn_3493))
(assert (<= 0 bm_3492))
(assert (<= ba1 2))
(assert (<= 0 ba1))
(assert (<= 0 an_3491))
(assert (<= 0 am_3490))
(assert (<= ba3 2))
(assert (<= 0 ba3))
(assert (<= 0 cn_3489))
(assert (<= 0 cm_3488))
(assert (or (and (= tmp2_3536 an_3491) (>= an_3491 resrn_3537)) (and (= tmp2_3536 resrn_3537) (< an_3491 resrn_3537))))
(assert (= resn_3535 (+ 1 tmp2_3536)))
(assert (or (and (= tmp1_3534 cn_3489) (>= cn_3489 bn_3493)) (and (= tmp1_3534 bn_3493) (< cn_3489 bn_3493))))
(assert (= resrn_3537 (+ 1 tmp1_3534)))
(assert (> k2 0))
(assert (<= Anon_34 2))
(assert (<= 0 Anon_34))
(assert (<= 0 dn))
(assert (<= 0 dm))
(assert (> k3 0))
(assert (<= Anon_37 2))
(assert (<= 0 Anon_37))
(assert (<= 0 bn))
(assert (<= 0 bm))
(assert (<= Anon_38 2))
(assert (<= 0 Anon_38))
(assert (<= 0 cn))
(assert (<= 0 cm))
(assert (= ba2 Anon_38))
(assert (= bn_3493 cn))
(assert (= bm_3492 cm))
(assert (= ba1 Anon_37))
(assert (= an_3491 bn))
(assert (= am_3490 bm))
(assert (= lr c))
(assert (= ll b))
(assert (= Anon_43 Anon_36))
(assert (= Anon_42 Anon_35))
(assert (= ba3 Anon_34))
(assert (= cn_3489 dn))
(assert (= cm_3488 dm))
(assert (= r d))
(assert (= l k3))
(assert (= Anon_41 Anon_33))
(assert (= Anon_40 Anon_32))
(assert (= k1_primed k1))
(assert (<= bn (+ an 1)))
(assert (<= an (+ bn 1)))
(assert (<= cn (+ dn 1)))
(assert (<= dn (+ cn 1)))
(assert (or (and (and (and (< a 1) (= am 0)) (= an 0)) (= Anon_31 1)) (and (and (and (and (and (<= 0 Anon_31) (<= (+ (- 0 an) 2) Anon_31)) (<= Anon_31 an)) (<= Anon_31 2)) (<= 1 am)) (> a 0))))
(assert (= v_node_119_1850_primed 1))
(assert (or (and (and (and (< resl_3529 1) (= am_3490 0)) (= an_3491 0)) (= ba1 1)) (and (and (and (and (and (<= 0 ba1) (<= (+ (- 0 an_3491) 2) ba1)) (<= ba1 an_3491)) (<= ba1 2)) (<= 1 am_3490)) (> resl_3529 0))))
(assert (= resr_3530 2))
(assert (or (and (and (and (< resrl_3532 1) (= bm_3492 0)) (= bn_3493 0)) (= ba2 1)) (and (and (and (and (and (<= 0 ba2) (<= (+ (- 0 bn_3493) 2) ba2)) (<= ba2 bn_3493)) (<= ba2 2)) (<= 1 bm_3492)) (> resrl_3532 0))))
(assert (or (and (and (and (< resrr_3533 1) (= cm_3488 0)) (= cn_3489 0)) (= ba3 1)) (and (and (and (and (and (<= 0 ba3) (<= (+ (- 0 cn_3489) 2) ba3)) (<= ba3 cn_3489)) (<= ba3 2)) (<= 1 cm_3488)) (> resrr_3533 0))))
(assert (not (= v_node_119_1850_primed resr_3530)))
;Negation of Consequence
(assert (not false))
(check-sat)