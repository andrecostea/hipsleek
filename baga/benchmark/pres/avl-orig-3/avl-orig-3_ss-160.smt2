(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun right_102_1967_primed () Int)
(declare-fun left_102_1966_primed () Int)
(declare-fun height_102_1965_primed () Int)
(declare-fun Anon_19 () Int)
(declare-fun ele_102_1964_primed () Int)
(declare-fun Anon_18 () Int)
(declare-fun k3_primed () Int)
(declare-fun k3 () Int)
(declare-fun dn () Int)
(declare-fun Anon_20 () Int)
(declare-fun dm () Int)
(declare-fun d () Int)
(declare-fun an () Int)
(declare-fun Anon_23 () Int)
(declare-fun am () Int)
(declare-fun a () Int)
(declare-fun bn () Int)
(declare-fun Anon_26 () Int)
(declare-fun bm () Int)
(declare-fun b () Int)
(declare-fun cn () Int)
(declare-fun Anon_27 () Int)
(declare-fun cm () Int)
(declare-fun c () Int)
(declare-fun k1 () Int)
(declare-fun k2 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= right_102_1967_primed d))
(assert (= left_102_1966_primed k1))
(assert (= height_102_1965_primed Anon_19))
(assert (= ele_102_1964_primed Anon_18))
(assert (= k3_primed k3))
(assert (<= bn (+ an 1)))
(assert (<= an (+ bn 1)))
(assert (<= cn (+ dn 1)))
(assert (<= dn (+ cn 1)))
(assert (or (and (and (and (< d 1) (= dm 0)) (= dn 0)) (= Anon_20 1)) (and (and (and (and (and (<= 0 Anon_20) (<= (+ (- 0 dn) 2) Anon_20)) (<= Anon_20 dn)) (<= Anon_20 2)) (<= 1 dm)) (> d 0))))
(assert (= k1 1))
(assert (or (and (and (and (< a 1) (= am 0)) (= an 0)) (= Anon_23 1)) (and (and (and (and (and (<= 0 Anon_23) (<= (+ (- 0 an) 2) Anon_23)) (<= Anon_23 an)) (<= Anon_23 2)) (<= 1 am)) (> a 0))))
(assert (= k2 2))
(assert (or (and (and (and (< b 1) (= bm 0)) (= bn 0)) (= Anon_26 1)) (and (and (and (and (and (<= 0 Anon_26) (<= (+ (- 0 bn) 2) Anon_26)) (<= Anon_26 bn)) (<= Anon_26 2)) (<= 1 bm)) (> b 0))))
(assert (or (and (and (and (< c 1) (= cm 0)) (= cn 0)) (= Anon_27 1)) (and (and (and (and (and (<= 0 Anon_27) (<= (+ (- 0 cn) 2) Anon_27)) (<= Anon_27 cn)) (<= Anon_27 2)) (<= 1 cm)) (> c 0))))
(assert (not (= k1 k2)))
;Negation of Consequence
(assert (not false))
(check-sat)