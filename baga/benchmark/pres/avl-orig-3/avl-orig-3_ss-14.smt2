(set-info :source loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
(set-info :smt-lib-version 2.0) 
(set-info :status  sat) 
;Variables declarations
(declare-fun k2 () Int)
(declare-fun left_133_2645 () Int)
(declare-fun l () Int)
(declare-fun right_134_2648 () Int)
(declare-fun lr () Int)
(declare-fun bm () Int)
(declare-fun bn () Int)
(declare-fun ba2 () Int)
(declare-fun res () Int)
(declare-fun m () Int)
(declare-fun n () Int)
(declare-fun b () Int)
(declare-fun cn () Int)
(declare-fun ba3 () Int)
(declare-fun cm () Int)
(declare-fun r () Int)
(declare-fun an () Int)
(declare-fun ba1 () Int)
(declare-fun am () Int)
(declare-fun ll () Int)
(declare-fun n_2656 () Int)
(declare-fun b_2657 () Int)
(declare-fun m_2655 () Int)
(declare-fun v_node_135_1692_primed () Int)
(declare-fun k2_primed () Int)
(declare-fun k1_primed () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= k2_primed k2))
(assert (= k1_primed l))
(assert (= left_133_2645 l))
(assert (= right_134_2648 lr))
(assert (= v_node_135_1692_primed lr))
(assert (= m bm))
(assert (= n bn))
(assert (= b ba2))
(assert (<= 0 bm))
(assert (<= 0 bn))
(assert (<= 0 ba2))
(assert (<= ba2 2))
(assert (= res n))
(assert (= m_2655 m))
(assert (= n_2656 n))
(assert (= b_2657 b))
(assert (<= 0 m))
(assert (<= 0 n))
(assert (<= 0 b))
(assert (<= b 2))
(assert (or (and (and (and (< r 1) (= cm 0)) (= cn 0)) (= ba3 1)) (and (and (and (and (and (<= 0 ba3) (<= (+ (- 0 cn) 2) ba3)) (<= ba3 cn)) (<= ba3 2)) (<= 1 cm)) (> r 0))))
(assert (or (and (and (and (< ll 1) (= am 0)) (= an 0)) (= ba1 1)) (and (and (and (and (and (<= 0 ba1) (<= (+ (- 0 an) 2) ba1)) (<= ba1 an)) (<= ba1 2)) (<= 1 am)) (> ll 0))))
(assert (= k2_primed 1))
(assert (= k1_primed 2))
(assert (or (and (and (and (< v_node_135_1692_primed 1) (= m_2655 0)) (= n_2656 0)) (= b_2657 1)) (and (and (and (and (and (<= 0 b_2657) (<= (+ (- 0 n_2656) 2) b_2657)) (<= b_2657 n_2656)) (<= b_2657 2)) (<= 1 m_2655)) (> v_node_135_1692_primed 0))))
(assert (not (= k2_primed k1_primed)))
;Negation of Consequence
(assert (not false))
(check-sat)