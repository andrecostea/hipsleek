(set-info :source loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
(set-info :smt-lib-version 2.0) 
(set-info :status  sat) 
;Variables declarations
(declare-fun ba3 () Int)
(declare-fun Anon_27 () Int)
(declare-fun cn_3236 () Int)
(declare-fun cm_3235 () Int)
(declare-fun cm () Int)
(declare-fun ba2 () Int)
(declare-fun Anon_26 () Int)
(declare-fun bn_3234 () Int)
(declare-fun bm_3233 () Int)
(declare-fun bm () Int)
(declare-fun rr () Int)
(declare-fun c () Int)
(declare-fun rl () Int)
(declare-fun b () Int)
(declare-fun Anon_49 () Int)
(declare-fun Anon_25 () Int)
(declare-fun Anon_48 () Int)
(declare-fun Anon_24 () Int)
(declare-fun ba1 () Int)
(declare-fun Anon_23 () Int)
(declare-fun an_3232 () Int)
(declare-fun am_3231 () Int)
(declare-fun am () Int)
(declare-fun r () Int)
(declare-fun k2 () Int)
(declare-fun l () Int)
(declare-fun a () Int)
(declare-fun Anon_47 () Int)
(declare-fun Anon_22 () Int)
(declare-fun Anon_46 () Int)
(declare-fun Anon_21 () Int)
(declare-fun t2_primed () Int)
(declare-fun k1 () Int)
(declare-fun k3_primed () Int)
(declare-fun an () Int)
(declare-fun bn () Int)
(declare-fun cn () Int)
(declare-fun k3 () Int)
(declare-fun dn () Int)
(declare-fun Anon_20 () Int)
(declare-fun dm () Int)
(declare-fun d () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= ba3 Anon_27))
(assert (= cn_3236 cn))
(assert (= cm_3235 cm))
(assert (= ba2 Anon_26))
(assert (= bn_3234 bn))
(assert (= bm_3233 bm))
(assert (= rr c))
(assert (= rl b))
(assert (= Anon_49 Anon_25))
(assert (= Anon_48 Anon_24))
(assert (= ba1 Anon_23))
(assert (= an_3232 an))
(assert (= am_3231 am))
(assert (= r k2))
(assert (= l a))
(assert (= Anon_47 Anon_22))
(assert (= Anon_46 Anon_21))
(assert (= t2_primed k1))
(assert (= k3_primed k3))
(assert (<= bn (+ an 1)))
(assert (<= an (+ bn 1)))
(assert (<= cn (+ dn 1)))
(assert (<= dn (+ cn 1)))
(assert (= k3 1))
(assert (or (and (and (and (< d 1) (= dm 0)) (= dn 0)) (= Anon_20 1)) (and (and (and (and (and (<= 0 Anon_20) (<= (+ (- 0 dn) 2) Anon_20)) (<= Anon_20 dn)) (<= Anon_20 2)) (<= 1 dm)) (> d 0))))
;Negation of Consequence
(assert (not false))
(check-sat)