(set-info :source loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
(set-info :smt-lib-version 2.0) 
(set-info :status  sat) 
;Variables declarations
(declare-fun k3_primed () Int)
(declare-fun t2_primed () Int)
(declare-fun Anon_46 () Int)
(declare-fun Anon_21 () Int)
(declare-fun Anon_47 () Int)
(declare-fun Anon_22 () Int)
(declare-fun l () Int)
(declare-fun a () Int)
(declare-fun r () Int)
(declare-fun Anon_48 () Int)
(declare-fun Anon_24 () Int)
(declare-fun Anon_49 () Int)
(declare-fun Anon_25 () Int)
(declare-fun rl () Int)
(declare-fun b () Int)
(declare-fun rr () Int)
(declare-fun c () Int)
(declare-fun cm () Int)
(declare-fun cn () Int)
(declare-fun Anon_27 () Int)
(declare-fun bm () Int)
(declare-fun bn () Int)
(declare-fun Anon_26 () Int)
(declare-fun k2 () Int)
(declare-fun am () Int)
(declare-fun an () Int)
(declare-fun Anon_23 () Int)
(declare-fun k1 () Int)
(declare-fun tmp1_3254 () Int)
(declare-fun resn_3255 () Int)
(declare-fun tmp2_3256 () Int)
(declare-fun resln_3257 () Int)
(declare-fun am_3231 () Int)
(declare-fun an_3232 () Int)
(declare-fun ba1 () Int)
(declare-fun bm_3233 () Int)
(declare-fun bn_3234 () Int)
(declare-fun ba2 () Int)
(declare-fun cm_3235 () Int)
(declare-fun cn_3236 () Int)
(declare-fun ba3 () Int)
(declare-fun dn () Int)
(declare-fun Anon_20 () Int)
(declare-fun dm () Int)
(declare-fun d () Int)
(declare-fun cn_3240 () Int)
(declare-fun ba3_3241 () Int)
(declare-fun cm_3239 () Int)
(declare-fun resr_3251 () Int)
(declare-fun an_3243 () Int)
(declare-fun ba1_3244 () Int)
(declare-fun am_3242 () Int)
(declare-fun resll_3252 () Int)
(declare-fun bn_3246 () Int)
(declare-fun ba2_3247 () Int)
(declare-fun bm_3245 () Int)
(declare-fun reslr_3253 () Int)
(declare-fun k3 () Int)
(declare-fun res () Int)
(declare-fun resl_3249 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (<= dn (+ cn 1)))
(assert (<= cn (+ dn 1)))
(assert (<= an (+ bn 1)))
(assert (<= bn (+ an 1)))
(assert (= k3_primed k3))
(assert (= t2_primed k1))
(assert (= Anon_46 Anon_21))
(assert (= Anon_47 Anon_22))
(assert (= l a))
(assert (= r k2))
(assert (= am_3231 am))
(assert (= an_3232 an))
(assert (= ba1 Anon_23))
(assert (= Anon_48 Anon_24))
(assert (= Anon_49 Anon_25))
(assert (= rl b))
(assert (= rr c))
(assert (= bm_3233 bm))
(assert (= bn_3234 bn))
(assert (= ba2 Anon_26))
(assert (= cm_3235 cm))
(assert (= cn_3236 cn))
(assert (= ba3 Anon_27))
(assert (<= 0 cm))
(assert (<= 0 cn))
(assert (<= 0 Anon_27))
(assert (<= Anon_27 2))
(assert (<= 0 bm))
(assert (<= 0 bn))
(assert (<= 0 Anon_26))
(assert (<= Anon_26 2))
(assert (> k2 0))
(assert (<= 0 am))
(assert (<= 0 an))
(assert (<= 0 Anon_23))
(assert (<= Anon_23 2))
(assert (> k1 0))
(assert (= resln_3257 (+ 1 tmp1_3254)))
(assert (or (and (= tmp1_3254 an_3232) (>= an_3232 bn_3234)) (and (= tmp1_3254 bn_3234) (< an_3232 bn_3234))))
(assert (= resn_3255 (+ 1 tmp2_3256)))
(assert (or (and (= tmp2_3256 resln_3257) (>= resln_3257 cn_3236)) (and (= tmp2_3256 cn_3236) (< resln_3257 cn_3236))))
(assert (= cm_3239 cm_3235))
(assert (= cn_3240 cn_3236))
(assert (= ba3_3241 ba3))
(assert (= am_3242 am_3231))
(assert (= an_3243 an_3232))
(assert (= ba1_3244 ba1))
(assert (= bm_3245 bm_3233))
(assert (= bn_3246 bn_3234))
(assert (= ba2_3247 ba2))
(assert (<= 0 am_3231))
(assert (<= 0 an_3232))
(assert (<= 0 ba1))
(assert (<= ba1 2))
(assert (<= 0 bm_3233))
(assert (<= 0 bn_3234))
(assert (<= 0 ba2))
(assert (<= ba2 2))
(assert (<= 0 cm_3235))
(assert (<= 0 cn_3236))
(assert (<= 0 ba3))
(assert (<= ba3 2))
(assert (= k3 1))
(assert (or (and (and (and (< d 1) (= dm 0)) (= dn 0)) (= Anon_20 1)) (and (and (and (and (and (<= 0 Anon_20) (<= (+ (- 0 dn) 2) Anon_20)) (<= Anon_20 dn)) (<= Anon_20 2)) (<= 1 dm)) (> d 0))))
(assert (= res 2))
(assert (= resl_3249 3))
(assert (or (and (and (and (< resr_3251 1) (= cm_3239 0)) (= cn_3240 0)) (= ba3_3241 1)) (and (and (and (and (and (<= 0 ba3_3241) (<= (+ (- 0 cn_3240) 2) ba3_3241)) (<= ba3_3241 cn_3240)) (<= ba3_3241 2)) (<= 1 cm_3239)) (> resr_3251 0))))
(assert (or (and (and (and (< resll_3252 1) (= am_3242 0)) (= an_3243 0)) (= ba1_3244 1)) (and (and (and (and (and (<= 0 ba1_3244) (<= (+ (- 0 an_3243) 2) ba1_3244)) (<= ba1_3244 an_3243)) (<= ba1_3244 2)) (<= 1 am_3242)) (> resll_3252 0))))
(assert (or (and (and (and (< reslr_3253 1) (= bm_3245 0)) (= bn_3246 0)) (= ba2_3247 1)) (and (and (and (and (and (<= 0 ba2_3247) (<= (+ (- 0 bn_3246) 2) ba2_3247)) (<= ba2_3247 bn_3246)) (<= ba2_3247 2)) (<= 1 bm_3245)) (> reslr_3253 0))))
(assert (not (= k3 resl_3249)))
(assert (not (= k3 res)))
(assert (not (= res resl_3249)))
;Negation of Consequence
(assert (not false))
(check-sat)