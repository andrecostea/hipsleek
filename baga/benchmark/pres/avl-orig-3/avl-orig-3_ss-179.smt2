(set-info :source loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
(set-info :smt-lib-version 2.0) 
(set-info :status sat)
;Variables declarations
(declare-fun Anon_43 () Int)
(declare-fun bn () Int)
(declare-fun bm () Int)
(declare-fun an () Int)
(declare-fun am () Int)
(declare-fun am_3231 () Int)
(declare-fun an_3232 () Int)
(declare-fun bm_3233 () Int)
(declare-fun bn_3234 () Int)
(declare-fun m2_3302 () Int)
(declare-fun m1_3298 () Int)
(declare-fun n1_3299 () Int)
(declare-fun n2_3303 () Int)
(declare-fun cm () Int)
(declare-fun Anon_27 () Int)
(declare-fun tmp1_3277 () Int)
(declare-fun resn_3278 () Int)
(declare-fun cm_3235 () Int)
(declare-fun ba3 () Int)
(declare-fun resn_3344 () Int)
(declare-fun p_3369 () Int)
(declare-fun m1_3370 () Int)
(declare-fun Anon_3372 () Int)
(declare-fun ba1_3289 () Int)
(declare-fun am_3287 () Int)
(declare-fun resl_3338 () Int)
(declare-fun ba2_3292 () Int)
(declare-fun bm_3290 () Int)
(declare-fun resrl_3341 () Int)
(declare-fun n1_3371 () Int)
(declare-fun tmp2_3345 () Int)
(declare-fun an_3288 () Int)
(declare-fun resrn_3346 () Int)
(declare-fun Anon_20 () Int)
(declare-fun tmp2_3279 () Int)
(declare-fun resln_3280 () Int)
(declare-fun cn_3236 () Int)
(declare-fun cn () Int)
(declare-fun dm () Int)
(declare-fun dn () Int)
(declare-fun tmp1_3343 () Int)
(declare-fun bn_3291 () Int)
(declare-fun q_3373 () Int)
(declare-fun ba3_3285 () Int)
(declare-fun cm_3283 () Int)
(declare-fun cn_3284 () Int)
(declare-fun resrr_3342 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (<= an (+ bn 1)))
(assert (<= bn (+ an 1)))
(assert (<= 0 an_3232))
(assert (<= 0 am_3231))
(assert (<= 0 bn_3234))
(assert (<= 0 bm_3233))
(assert (<= ba3 2))
(assert (<= 0 ba3))
(assert (<= 0 cm_3235))
(assert (= Anon_43 resn_3278))
(assert (or (and (= tmp1_3277 an_3232) (>= an_3232 bn_3234)) (and (= tmp1_3277 bn_3234) (< an_3232 bn_3234))))
(assert (<= 0 an))
(assert (<= 0 am))
(assert (<= 0 bn))
(assert (<= 0 bm))
(assert (<= Anon_27 2))
(assert (<= 0 Anon_27))
(assert (<= 0 cm))
(assert (= bn_3234 bn))
(assert (= bm_3233 bm))
(assert (= an_3232 an))
(assert (= am_3231 am))
(assert (= m1_3298 am_3231))
(assert (= n1_3299 an_3232))
(assert (= m2_3302 bm_3233))
(assert (= n2_3303 bn_3234))
(assert (<= n1_3299 (+ n2_3303 1)))
(assert (<= n2_3303 (+ 1 n1_3299)))
(assert (= am_3287 (+ (+ m2_3302 1) m1_3298)))
(assert (exists ((max_3388 Int)) (and (= an_3288 (+ 1 max_3388)) (or (and (= max_3388 n1_3299) (>= n1_3299 n2_3303)) (and (= max_3388 n2_3303) (< n1_3299 n2_3303))))))
(assert (= (+ ba1_3289 n2_3303) (+ 1 n1_3299)))
(assert (= resln_3280 an_3288))
(assert (or (and (= resln_3280 (+ n1_3299 1)) (<= n2_3303 n1_3299)) (and (= resln_3280 (+ n2_3303 1)) (< n1_3299 n2_3303))))
(assert (= cm_3235 cm))
(assert (= ba3 Anon_27))
(assert (= resln_3280 (+ 1 tmp1_3277)))
(assert (= resn_3278 (+ 1 tmp2_3279)))
(assert (= bm_3290 cm_3235))
(assert (= ba2_3292 ba3))
(assert (= resn_3344 (+ 1 tmp2_3345)))
(assert (<= 0 am_3287))
(assert (<= 0 ba1_3289))
(assert (<= ba1_3289 2))
(assert (<= 0 bm_3290))
(assert (<= 0 ba2_3292))
(assert (<= ba2_3292 2))
(assert (= p_3369 resrl_3341))
(assert (= m1_3370 bm_3290))
(assert (= Anon_3372 ba2_3292))
(assert (or (and (and (and (< resl_3338 1) (= am_3287 0)) (= an_3288 0)) (= ba1_3289 1)) (and (and (and (and (and (<= 0 ba1_3289) (<= (+ (- 0 an_3288) 2) ba1_3289)) (<= ba1_3289 an_3288)) (<= ba1_3289 2)) (<= 1 am_3287)) (> resl_3338 0))))
(assert (or (and (and (and (< resrl_3341 1) (= bm_3290 0)) (= bn_3291 0)) (= ba2_3292 1)) (and (and (and (and (and (<= 0 ba2_3292) (<= (+ (- 0 bn_3291) 2) ba2_3292)) (<= ba2_3292 bn_3291)) (<= ba2_3292 2)) (<= 1 bm_3290)) (> resrl_3341 0))))
(assert (= n1_3371 bn_3291))
(assert (<= 0 bn_3291))
(assert (<= 0 an_3288))
(assert (<= ba3_3285 2))
(assert (<= 0 ba3_3285))
(assert (or (and (= tmp2_3345 an_3288) (>= an_3288 resrn_3346)) (and (= tmp2_3345 resrn_3346) (< an_3288 resrn_3346))))
(assert (= resrn_3346 (+ 1 tmp1_3343)))
(assert (<= Anon_20 2))
(assert (<= 0 Anon_20))
(assert (<= 0 dn))
(assert (<= 0 dm))
(assert (<= 0 cn_3236))
(assert (= bn_3291 cn_3236))
(assert (= ba3_3285 Anon_20))
(assert (or (and (= tmp2_3279 resln_3280) (>= resln_3280 cn_3236)) (and (= tmp2_3279 cn_3236) (< resln_3280 cn_3236))))
(assert (<= 0 cn))
(assert (= cn_3236 cn))
(assert (<= cn (+ dn 1)))
(assert (<= dn (+ cn 1)))
(assert (= cm_3283 dm))
(assert (= cn_3284 dn))
(assert (or (and (= tmp1_3343 cn_3284) (>= cn_3284 bn_3291)) (and (= tmp1_3343 bn_3291) (< cn_3284 bn_3291))))
(assert (<= 0 cm_3283))
(assert (<= 0 cn_3284))
(assert (= q_3373 resrr_3342))
(assert (or (and (and (and (< resrr_3342 1) (= cm_3283 0)) (= cn_3284 0)) (= ba3_3285 1)) (and (and (and (and (and (<= 0 ba3_3285) (<= (+ (- 0 cn_3284) 2) ba3_3285)) (<= ba3_3285 cn_3284)) (<= ba3_3285 2)) (<= 1 cm_3283)) (> resrr_3342 0))))
;Negation of Consequence
(assert (not (or (= cm_3283 0) (or (= cn_3284 0) (< resrr_3342 1)))))
(check-sat)