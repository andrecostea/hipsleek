(set-info :source loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
(set-info :smt-lib-version 2.0) 
(set-info :status  sat) 
;Variables declarations
(declare-fun right_158_1480_primed () Int)
(declare-fun left_158_1479_primed () Int)
(declare-fun height_158_1478_primed () Int)
(declare-fun Anon_47 () Int)
(declare-fun ele_158_1477_primed () Int)
(declare-fun Anon_46 () Int)
(declare-fun k1_primed () Int)
(declare-fun k1 () Int)
(declare-fun an () Int)
(declare-fun ba1 () Int)
(declare-fun am () Int)
(declare-fun l () Int)
(declare-fun r () Int)
(declare-fun bn () Int)
(declare-fun ba2 () Int)
(declare-fun bm () Int)
(declare-fun rl () Int)
(declare-fun cn () Int)
(declare-fun ba3 () Int)
(declare-fun cm () Int)
(declare-fun rr () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= right_158_1480_primed r))
(assert (= left_158_1479_primed l))
(assert (= height_158_1478_primed Anon_47))
(assert (= ele_158_1477_primed Anon_46))
(assert (= k1_primed k1))
(assert (or (and (and (and (< l 1) (= am 0)) (= an 0)) (= ba1 1)) (and (and (and (and (and (<= 0 ba1) (<= (+ (- 0 an) 2) ba1)) (<= ba1 an)) (<= ba1 2)) (<= 1 am)) (> l 0))))
(assert (= r 1))
(assert (or (and (and (and (< rl 1) (= bm 0)) (= bn 0)) (= ba2 1)) (and (and (and (and (and (<= 0 ba2) (<= (+ (- 0 bn) 2) ba2)) (<= ba2 bn)) (<= ba2 2)) (<= 1 bm)) (> rl 0))))
(assert (or (and (and (and (< rr 1) (= cm 0)) (= cn 0)) (= ba3 1)) (and (and (and (and (and (<= 0 ba3) (<= (+ (- 0 cn) 2) ba3)) (<= ba3 cn)) (<= ba3 2)) (<= 1 cm)) (> rr 0))))
;Negation of Consequence
(assert (not false))
(check-sat)