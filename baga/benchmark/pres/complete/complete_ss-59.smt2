(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun n () Int)
(declare-fun nmin () Int)
(declare-fun v_bool_61_1524_primed () Int)
(declare-fun t_primed () Int)
(declare-fun t () Int)
(declare-fun nmin1_1660 () Int)
(declare-fun flted_25_1657 () Int)
(declare-fun nmin2_1662 () Int)
(declare-fun flted_25_1656 () Int)
(declare-fun v_int_62_1719 () Int)
(declare-fun res () Int)
(declare-fun v_int_62_1522_primed () Int)
(declare-fun Anon_1722 () Int)
(declare-fun Anon_1658 () Int)
(declare-fun l_1723 () Int)
(declare-fun l_1659 () Int)
(declare-fun r_1725 () Int)
(declare-fun r_1661 () Int)
(declare-fun nmin_1675 () Int)
(declare-fun nmin_1693 () Int)
(declare-fun n_1674 () Int)
(declare-fun n_1692 () Int)
(declare-fun nmin1_1724 () Int)
(declare-fun nmin2_1726 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= (+ flted_25_1657 1) n))
(assert (= (+ flted_25_1656 2) n))
(assert (exists ((min_30 Int)) (and (= nmin (+ 1 min_30)) (or (and (= min_30 nmin1_1660) (< nmin1_1660 nmin2_1662)) (and (= min_30 nmin2_1662) (>= nmin1_1660 nmin2_1662))))))
(assert (> v_bool_61_1524_primed 0))
(assert (> t_primed 0))
(assert (= t_primed t))
(assert (= n_1674 flted_25_1657))
(assert (= nmin_1675 nmin1_1660))
(assert (<= 0 nmin1_1660))
(assert (<= nmin1_1660 flted_25_1657))
(assert (<= 0 nmin_1675))
(assert (<= nmin_1675 n_1674))
(assert (= n_1692 flted_25_1656))
(assert (= nmin_1693 nmin2_1662))
(assert (<= 0 nmin2_1662))
(assert (<= nmin2_1662 flted_25_1656))
(assert (<= 0 nmin_1693))
(assert (<= nmin_1693 n_1692))
(assert (or (< n_1674 n_1692) (= v_int_62_1719 n_1674)))
(assert (or (<= n_1692 n_1674) (= v_int_62_1719 n_1692)))
(assert (= v_int_62_1522_primed (+ 1 v_int_62_1719)))
(assert (= res v_int_62_1522_primed))
(assert (= Anon_1722 Anon_1658))
(assert (= l_1723 l_1659))
(assert (= r_1725 r_1661))
(assert (= nmin1_1724 nmin_1675))
(assert (= nmin2_1726 nmin_1693))
(assert (= (+ n_1674 1) (+ n_1692 2)))
(assert (exists ((min_30 Int)) (or (and (= min_30 nmin1_1724) (< nmin1_1724 nmin2_1726)) (and (= min_30 nmin2_1726) (>= nmin1_1724 nmin2_1726)))))
;Negation of Consequence
(assert (not false))
(check-sat)