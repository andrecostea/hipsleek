(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun lr () Int)
(declare-fun Anon_48 () Int)
(declare-fun Anon_46 () Int)
(declare-fun cn_3253 () Int)
(declare-fun cm_3252 () Int)
(declare-fun r_3251 () Int)
(declare-fun cm () Int)
(declare-fun Anon_20 () Int)
(declare-fun dm () Int)
(declare-fun d () Int)
(declare-fun Anon_3241 () Int)
(declare-fun cm_3198 () Int)
(declare-fun resr_3240 () Int)
(declare-fun dn () Int)
(declare-fun cn () Int)
(declare-fun resn_3247 () Int)
(declare-fun tmp2_3248 () Int)
(declare-fun cn_3199 () Int)
(declare-fun am () Int)
(declare-fun p_3263 () Int)
(declare-fun m1_3264 () Int)
(declare-fun Anon_3266 () Int)
(declare-fun Anon_3243 () Int)
(declare-fun am_3194 () Int)
(declare-fun resll_3242 () Int)
(declare-fun n1_3265 () Int)
(declare-fun an () Int)
(declare-fun resln_3249 () Int)
(declare-fun tmp1_3246 () Int)
(declare-fun an_3195 () Int)
(declare-fun bn () Int)
(declare-fun bm () Int)
(declare-fun q_3267 () Int)
(declare-fun Anon_3245 () Int)
(declare-fun bm_3196 () Int)
(declare-fun bn_3197 () Int)
(declare-fun reslr_3244 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= lr resr_3240))
(assert (= Anon_48 resn_3247))
(assert (= Anon_46 Anon_20))
(assert (= cn_3253 dn))
(assert (= cm_3252 dm))
(assert (= r_3251 d))
(assert (<= 0 cm_3198))
(assert (<= 0 cn))
(assert (<= 0 cm))
(assert (= cm_3198 cm))
(assert (or (and (and (and (< d 1) (= dm 0)) (= dn 0)) (= Anon_20 1)) (and (and (and (and (and (<= 0 Anon_20) (<= (+ (- 0 dn) 2) Anon_20)) (<= Anon_20 dn)) (<= Anon_20 2)) (<= 1 dm)) (> d 0))))
(assert (or (and (and (and (< resr_3240 1) (= cm_3198 0)) (= cn_3199 0)) (= Anon_3241 1)) (and (and (and (and (and (<= 0 Anon_3241) (<= (+ (- 0 cn_3199) 2) Anon_3241)) (<= Anon_3241 cn_3199)) (<= Anon_3241 2)) (<= 1 cm_3198)) (> resr_3240 0))))
(assert (<= dn (+ cn 1)))
(assert (<= cn (+ dn 1)))
(assert (= cn_3199 cn))
(assert (= resn_3247 (+ 1 tmp2_3248)))
(assert (<= 0 cn_3199))
(assert (<= 0 am_3194))
(assert (or (and (= tmp2_3248 resln_3249) (>= resln_3249 cn_3199)) (and (= tmp2_3248 cn_3199) (< resln_3249 cn_3199))))
(assert (<= 0 an))
(assert (<= 0 am))
(assert (= am_3194 am))
(assert (= p_3263 resll_3242))
(assert (= m1_3264 am_3194))
(assert (= Anon_3266 Anon_3243))
(assert (or (and (and (and (< resll_3242 1) (= am_3194 0)) (= an_3195 0)) (= Anon_3243 1)) (and (and (and (and (and (<= 0 Anon_3243) (<= (+ (- 0 an_3195) 2) Anon_3243)) (<= Anon_3243 an_3195)) (<= Anon_3243 2)) (<= 1 am_3194)) (> resll_3242 0))))
(assert (= n1_3265 an_3195))
(assert (<= an (+ bn 1)))
(assert (<= bn (+ an 1)))
(assert (= an_3195 an))
(assert (<= 0 bm))
(assert (<= 0 bn))
(assert (= resln_3249 (+ 1 tmp1_3246)))
(assert (<= 0 an_3195))
(assert (<= 0 bn_3197))
(assert (<= 0 bm_3196))
(assert (or (and (= tmp1_3246 an_3195) (>= an_3195 bn_3197)) (and (= tmp1_3246 bn_3197) (< an_3195 bn_3197))))
(assert (= bn_3197 bn))
(assert (= bm_3196 bm))
(assert (= q_3267 reslr_3244))
(assert (or (and (and (and (< reslr_3244 1) (= bm_3196 0)) (= bn_3197 0)) (= Anon_3245 1)) (and (and (and (and (and (<= 0 Anon_3245) (<= (+ (- 0 bn_3197) 2) Anon_3245)) (<= Anon_3245 bn_3197)) (<= Anon_3245 2)) (<= 1 bm_3196)) (> reslr_3244 0))))
;Negation of Consequence
(assert (not (or (= bm_3196 0) (or (= bn_3197 0) (< reslr_3244 1)))))
(check-sat)