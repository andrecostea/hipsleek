(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun k3_primed () Int)
(declare-fun t2_primed () Int)
(declare-fun Anon_56 () Int)
(declare-fun Anon_21 () Int)
(declare-fun Anon_57 () Int)
(declare-fun Anon_22 () Int)
(declare-fun l () Int)
(declare-fun a () Int)
(declare-fun r () Int)
(declare-fun Anon_59 () Int)
(declare-fun Anon_24 () Int)
(declare-fun Anon_60 () Int)
(declare-fun Anon_25 () Int)
(declare-fun rl () Int)
(declare-fun b () Int)
(declare-fun rr () Int)
(declare-fun c () Int)
(declare-fun cm () Int)
(declare-fun cn () Int)
(declare-fun Anon_27 () Int)
(declare-fun bm () Int)
(declare-fun bn () Int)
(declare-fun Anon_26 () Int)
(declare-fun k2 () Int)
(declare-fun am () Int)
(declare-fun an () Int)
(declare-fun Anon_23 () Int)
(declare-fun k1 () Int)
(declare-fun tmp1_3217 () Int)
(declare-fun resn_3218 () Int)
(declare-fun tmp2_3219 () Int)
(declare-fun resln_3220 () Int)
(declare-fun am_3194 () Int)
(declare-fun an_3195 () Int)
(declare-fun Anon_58 () Int)
(declare-fun bm_3196 () Int)
(declare-fun bn_3197 () Int)
(declare-fun Anon_61 () Int)
(declare-fun cm_3198 () Int)
(declare-fun cn_3199 () Int)
(declare-fun Anon_62 () Int)
(declare-fun dn () Int)
(declare-fun Anon_20 () Int)
(declare-fun dm () Int)
(declare-fun d () Int)
(declare-fun cn_3203 () Int)
(declare-fun Anon_3212 () Int)
(declare-fun cm_3202 () Int)
(declare-fun resr_3211 () Int)
(declare-fun an_3205 () Int)
(declare-fun Anon_3214 () Int)
(declare-fun am_3204 () Int)
(declare-fun resll_3213 () Int)
(declare-fun bn_3207 () Int)
(declare-fun Anon_3216 () Int)
(declare-fun bm_3206 () Int)
(declare-fun reslr_3215 () Int)
(declare-fun k3 () Int)
(declare-fun res () Int)
(declare-fun resl_3209 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (<= dn (+ cn 1)))
(assert (<= cn (+ dn 1)))
(assert (<= an (+ bn 1)))
(assert (<= bn (+ an 1)))
(assert (= k3_primed k3))
(assert (= t2_primed k1))
(assert (= Anon_56 Anon_21))
(assert (= Anon_57 Anon_22))
(assert (= l a))
(assert (= r k2))
(assert (= am_3194 am))
(assert (= an_3195 an))
(assert (= Anon_58 Anon_23))
(assert (= Anon_59 Anon_24))
(assert (= Anon_60 Anon_25))
(assert (= rl b))
(assert (= rr c))
(assert (= bm_3196 bm))
(assert (= bn_3197 bn))
(assert (= Anon_61 Anon_26))
(assert (= cm_3198 cm))
(assert (= cn_3199 cn))
(assert (= Anon_62 Anon_27))
(assert (<= 0 cm))
(assert (<= 0 cn))
(assert (<= 0 Anon_27))
(assert (<= Anon_27 2))
(assert (<= 0 bm))
(assert (<= 0 bn))
(assert (<= 0 Anon_26))
(assert (<= Anon_26 2))
(assert (> k2 0))
(assert (<= 0 am))
(assert (<= 0 an))
(assert (<= 0 Anon_23))
(assert (<= Anon_23 2))
(assert (> k1 0))
(assert (= resln_3220 (+ 1 tmp1_3217)))
(assert (or (and (= tmp1_3217 an_3195) (>= an_3195 bn_3197)) (and (= tmp1_3217 bn_3197) (< an_3195 bn_3197))))
(assert (= resn_3218 (+ 1 tmp2_3219)))
(assert (or (and (= tmp2_3219 resln_3220) (>= resln_3220 cn_3199)) (and (= tmp2_3219 cn_3199) (< resln_3220 cn_3199))))
(assert (= cm_3202 cm_3198))
(assert (= cn_3203 cn_3199))
(assert (= am_3204 am_3194))
(assert (= an_3205 an_3195))
(assert (= bm_3206 bm_3196))
(assert (= bn_3207 bn_3197))
(assert (<= 0 am_3194))
(assert (<= 0 an_3195))
(assert (<= 0 Anon_58))
(assert (<= Anon_58 2))
(assert (<= 0 bm_3196))
(assert (<= 0 bn_3197))
(assert (<= 0 Anon_61))
(assert (<= Anon_61 2))
(assert (<= 0 cm_3198))
(assert (<= 0 cn_3199))
(assert (<= 0 Anon_62))
(assert (<= Anon_62 2))
(assert (= k3 1))
(assert (or (and (and (and (< d 1) (= dm 0)) (= dn 0)) (= Anon_20 1)) (and (and (and (and (and (<= 0 Anon_20) (<= (+ (- 0 dn) 2) Anon_20)) (<= Anon_20 dn)) (<= Anon_20 2)) (<= 1 dm)) (> d 0))))
(assert (= res 2))
(assert (= resl_3209 3))
(assert (or (and (and (and (< resr_3211 1) (= cm_3202 0)) (= cn_3203 0)) (= Anon_3212 1)) (and (and (and (and (and (<= 0 Anon_3212) (<= (+ (- 0 cn_3203) 2) Anon_3212)) (<= Anon_3212 cn_3203)) (<= Anon_3212 2)) (<= 1 cm_3202)) (> resr_3211 0))))
(assert (or (and (and (and (< resll_3213 1) (= am_3204 0)) (= an_3205 0)) (= Anon_3214 1)) (and (and (and (and (and (<= 0 Anon_3214) (<= (+ (- 0 an_3205) 2) Anon_3214)) (<= Anon_3214 an_3205)) (<= Anon_3214 2)) (<= 1 am_3204)) (> resll_3213 0))))
(assert (or (and (and (and (< reslr_3215 1) (= bm_3206 0)) (= bn_3207 0)) (= Anon_3216 1)) (and (and (and (and (and (<= 0 Anon_3216) (<= (+ (- 0 bn_3207) 2) Anon_3216)) (<= Anon_3216 bn_3207)) (<= Anon_3216 2)) (<= 1 bm_3206)) (> reslr_3215 0))))
(assert (not (= k3 resl_3209)))
(assert (not (= k3 res)))
(assert (not (= res resl_3209)))
;Negation of Consequence
(assert (not false))
(check-sat)