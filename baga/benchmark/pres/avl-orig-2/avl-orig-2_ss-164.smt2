(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun Anon_62 () Int)
(declare-fun Anon_27 () Int)
(declare-fun cn_3199 () Int)
(declare-fun cm_3198 () Int)
(declare-fun cm () Int)
(declare-fun Anon_61 () Int)
(declare-fun Anon_26 () Int)
(declare-fun bn_3197 () Int)
(declare-fun bm_3196 () Int)
(declare-fun bm () Int)
(declare-fun rr () Int)
(declare-fun c () Int)
(declare-fun rl () Int)
(declare-fun b () Int)
(declare-fun Anon_60 () Int)
(declare-fun Anon_25 () Int)
(declare-fun Anon_59 () Int)
(declare-fun Anon_24 () Int)
(declare-fun Anon_58 () Int)
(declare-fun Anon_23 () Int)
(declare-fun an_3195 () Int)
(declare-fun am_3194 () Int)
(declare-fun am () Int)
(declare-fun r () Int)
(declare-fun k2 () Int)
(declare-fun l () Int)
(declare-fun a () Int)
(declare-fun Anon_57 () Int)
(declare-fun Anon_22 () Int)
(declare-fun Anon_56 () Int)
(declare-fun Anon_21 () Int)
(declare-fun t2_primed () Int)
(declare-fun k1 () Int)
(declare-fun k3_primed () Int)
(declare-fun an () Int)
(declare-fun bn () Int)
(declare-fun cn () Int)
(declare-fun k3 () Int)
(declare-fun dn () Int)
(declare-fun Anon_20 () Int)
(declare-fun dm () Int)
(declare-fun d () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= Anon_62 Anon_27))
(assert (= cn_3199 cn))
(assert (= cm_3198 cm))
(assert (= Anon_61 Anon_26))
(assert (= bn_3197 bn))
(assert (= bm_3196 bm))
(assert (= rr c))
(assert (= rl b))
(assert (= Anon_60 Anon_25))
(assert (= Anon_59 Anon_24))
(assert (= Anon_58 Anon_23))
(assert (= an_3195 an))
(assert (= am_3194 am))
(assert (= r k2))
(assert (= l a))
(assert (= Anon_57 Anon_22))
(assert (= Anon_56 Anon_21))
(assert (= t2_primed k1))
(assert (= k3_primed k3))
(assert (<= bn (+ an 1)))
(assert (<= an (+ bn 1)))
(assert (<= cn (+ dn 1)))
(assert (<= dn (+ cn 1)))
(assert (= k3 1))
(assert (or (and (and (and (< d 1) (= dm 0)) (= dn 0)) (= Anon_20 1)) (and (and (and (and (and (<= 0 Anon_20) (<= (+ (- 0 dn) 2) Anon_20)) (<= Anon_20 dn)) (<= Anon_20 2)) (<= 1 dm)) (> d 0))))
;Negation of Consequence
(assert (not false))
(check-sat)