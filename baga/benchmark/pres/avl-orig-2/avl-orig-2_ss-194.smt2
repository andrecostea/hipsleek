(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun right_179_1810_primed () Int)
(declare-fun left_179_1809_primed () Int)
(declare-fun height_179_1808_primed () Int)
(declare-fun Anon_32 () Int)
(declare-fun ele_179_1807_primed () Int)
(declare-fun Anon_31 () Int)
(declare-fun k1_primed () Int)
(declare-fun k1 () Int)
(declare-fun an () Int)
(declare-fun Anon_33 () Int)
(declare-fun am () Int)
(declare-fun a () Int)
(declare-fun dn () Int)
(declare-fun Anon_36 () Int)
(declare-fun dm () Int)
(declare-fun d () Int)
(declare-fun bn () Int)
(declare-fun Anon_39 () Int)
(declare-fun bm () Int)
(declare-fun b () Int)
(declare-fun cn () Int)
(declare-fun Anon_40 () Int)
(declare-fun cm () Int)
(declare-fun c () Int)
(declare-fun k2 () Int)
(declare-fun k3 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= right_179_1810_primed k2))
(assert (= left_179_1809_primed a))
(assert (= height_179_1808_primed Anon_32))
(assert (= ele_179_1807_primed Anon_31))
(assert (= k1_primed k1))
(assert (<= bn (+ an 1)))
(assert (<= an (+ bn 1)))
(assert (<= cn (+ dn 1)))
(assert (<= dn (+ cn 1)))
(assert (or (and (and (and (< a 1) (= am 0)) (= an 0)) (= Anon_33 1)) (and (and (and (and (and (<= 0 Anon_33) (<= (+ (- 0 an) 2) Anon_33)) (<= Anon_33 an)) (<= Anon_33 2)) (<= 1 am)) (> a 0))))
(assert (= k2 1))
(assert (or (and (and (and (< d 1) (= dm 0)) (= dn 0)) (= Anon_36 1)) (and (and (and (and (and (<= 0 Anon_36) (<= (+ (- 0 dn) 2) Anon_36)) (<= Anon_36 dn)) (<= Anon_36 2)) (<= 1 dm)) (> d 0))))
(assert (= k3 2))
(assert (or (and (and (and (< b 1) (= bm 0)) (= bn 0)) (= Anon_39 1)) (and (and (and (and (and (<= 0 Anon_39) (<= (+ (- 0 bn) 2) Anon_39)) (<= Anon_39 bn)) (<= Anon_39 2)) (<= 1 bm)) (> b 0))))
(assert (or (and (and (and (< c 1) (= cm 0)) (= cn 0)) (= Anon_40 1)) (and (and (and (and (and (<= 0 Anon_40) (<= (+ (- 0 cn) 2) Anon_40)) (<= Anon_40 cn)) (<= Anon_40 2)) (<= 1 cm)) (> c 0))))
(assert (not (= k2 k3)))
;Negation of Consequence
(assert (not false))
(check-sat)