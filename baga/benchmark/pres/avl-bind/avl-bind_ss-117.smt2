(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun v_int_94_2210_primed () Int)
(declare-fun h_2857 () Int)
(declare-fun dm () Int)
(declare-fun cm () Int)
(declare-fun h_2831 () Int)
(declare-fun bm () Int)
(declare-fun am () Int)
(declare-fun a () Int)
(declare-fun b () Int)
(declare-fun c () Int)
(declare-fun d () Int)
(declare-fun v1 () Int)
(declare-fun v2_primed () Int)
(declare-fun v2 () Int)
(declare-fun v3 () Int)
(declare-fun bn () Int)
(declare-fun cn () Int)
(declare-fun an_2810 () Int)
(declare-fun an () Int)
(declare-fun Anon_2863 () Int)
(declare-fun v1_primed () Int)
(declare-fun p_2864 () Int)
(declare-fun a_primed () Int)
(declare-fun q_2867 () Int)
(declare-fun b_primed () Int)
(declare-fun m () Int)
(declare-fun n () Int)
(declare-fun m_2814 () Int)
(declare-fun n_2815 () Int)
(declare-fun h_2851 () Int)
(declare-fun n1_2866 () Int)
(declare-fun n2_2869 () Int)
(declare-fun m2_2868 () Int)
(declare-fun m1_2865 () Int)
(declare-fun Anon_2886 () Int)
(declare-fun v3_primed () Int)
(declare-fun p_2887 () Int)
(declare-fun c_primed () Int)
(declare-fun q_2890 () Int)
(declare-fun d_primed () Int)
(declare-fun m_2833 () Int)
(declare-fun n_2834 () Int)
(declare-fun m_2840 () Int)
(declare-fun n_2841 () Int)
(declare-fun h_primed () Int)
(declare-fun n_2883 () Int)
(declare-fun n1_2889 () Int)
(declare-fun n2_2892 () Int)
(declare-fun m_2882 () Int)
(declare-fun m2_2891 () Int)
(declare-fun m1_2888 () Int)
(declare-fun n_2860 () Int)
(declare-fun m_2859 () Int)
(declare-fun tmp1_primed () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (<= 0 n_2860))
(assert (<= 0 m_2859))
(assert (= v_int_94_2210_primed n_2860))
(assert (> tmp1_primed 0))
(assert (<= 0 n))
(assert (<= 0 m))
(assert (<= 0 n_2815))
(assert (<= 0 m_2814))
(assert (= h_primed (+ 1 h_2857)))
(assert (or (and (= h_2857 n_2834) (>= n_2834 n_2841)) (and (= h_2857 n_2841) (< n_2834 n_2841))))
(assert (<= 0 n_2841))
(assert (<= 0 m_2840))
(assert (<= 0 an_2810))
(assert (<= 0 dm))
(assert (= n_2841 an_2810))
(assert (= m_2840 dm))
(assert (<= 0 n_2834))
(assert (<= 0 m_2833))
(assert (<= 0 cn))
(assert (<= 0 cm))
(assert (= n_2834 cn))
(assert (= m_2833 cm))
(assert (= h_2851 (+ 1 h_2831)))
(assert (or (and (= h_2831 n) (>= n n_2815)) (and (= h_2831 n_2815) (< n n_2815))))
(assert (<= 0 bn))
(assert (<= 0 bm))
(assert (= n_2815 bn))
(assert (= m_2814 bm))
(assert (<= 0 an))
(assert (<= 0 am))
(assert (= n an))
(assert (= m am))
(assert (= a_primed a))
(assert (= b_primed b))
(assert (= c_primed c))
(assert (= d_primed d))
(assert (= v1_primed v1))
(assert (= v2_primed v2))
(assert (= v3_primed v3))
(assert (or (and (= an bn) (>= bn cn)) (and (= an cn) (< bn cn))))
(assert (<= (+ 0 cn) (+ bn 1)))
(assert (<= bn (+ 1 cn)))
(assert (= an_2810 an))
(assert (= Anon_2863 v1_primed))
(assert (= p_2864 a_primed))
(assert (= q_2867 b_primed))
(assert (= m1_2865 m))
(assert (= n1_2866 n))
(assert (= m2_2868 m_2814))
(assert (= n2_2869 n_2815))
(assert (<= n1_2866 (+ 1 n2_2869)))
(assert (<= (+ 0 n2_2869) (+ n1_2866 1)))
(assert (or (and (= h_2851 (+ n1_2866 1)) (<= n2_2869 n1_2866)) (and (= h_2851 (+ n2_2869 1)) (< n1_2866 n2_2869))))
(assert (= h_2851 n_2860))
(assert (exists ((max_32 Int)) (and (= n_2860 (+ 1 max_32)) (or (and (= max_32 n1_2866) (>= n1_2866 n2_2869)) (and (= max_32 n2_2869) (< n1_2866 n2_2869))))))
(assert (= m_2859 (+ (+ m2_2868 1) m1_2865)))
(assert (= Anon_2886 v3_primed))
(assert (= p_2887 c_primed))
(assert (= q_2890 d_primed))
(assert (= m1_2888 m_2833))
(assert (= n1_2889 n_2834))
(assert (= m2_2891 m_2840))
(assert (= n2_2892 n_2841))
(assert (<= n1_2889 (+ 1 n2_2892)))
(assert (<= (+ 0 n2_2892) (+ n1_2889 1)))
(assert (or (and (= h_primed (+ n1_2889 1)) (<= n2_2892 n1_2889)) (and (= h_primed (+ n2_2892 1)) (< n1_2889 n2_2892))))
(assert (= h_primed n_2883))
(assert (exists ((max_32 Int)) (and (= n_2883 (+ 1 max_32)) (or (and (= max_32 n1_2889) (>= n1_2889 n2_2892)) (and (= max_32 n2_2892) (< n1_2889 n2_2892))))))
(assert (= m_2882 (+ (+ m2_2891 1) m1_2888)))
(assert (or (and (and (< tmp1_primed 1) (= m_2859 0)) (= n_2860 0)) (and (and (<= 1 n_2860) (<= 1 m_2859)) (> tmp1_primed 0))))
;Negation of Consequence
(assert (not false))
(check-sat)