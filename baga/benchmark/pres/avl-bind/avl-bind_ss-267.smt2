(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun n1_3292 () Int)
(declare-fun m1_3291 () Int)
(declare-fun llm () Int)
(declare-fun q_3293 () Int)
(declare-fun tmp_3285 () Int)
(declare-fun p_3290 () Int)
(declare-fun Anon_3289 () Int)
(declare-fun res () Int)
(declare-fun v_node_59_2299_primed () Int)
(declare-fun h_3286 () Int)
(declare-fun rm () Int)
(declare-fun ll_primed () Int)
(declare-fun ll () Int)
(declare-fun lr () Int)
(declare-fun r () Int)
(declare-fun flted_49_3265 () Int)
(declare-fun lln () Int)
(declare-fun Anon_3302 () Int)
(declare-fun v_3284 () Int)
(declare-fun p_3303 () Int)
(declare-fun lr_primed () Int)
(declare-fun q_3306 () Int)
(declare-fun r_primed () Int)
(declare-fun lrm () Int)
(declare-fun flted_49_3266 () Int)
(declare-fun m () Int)
(declare-fun n () Int)
(declare-fun h_3282 () Int)
(declare-fun n2_3295 () Int)
(declare-fun n1_3305 () Int)
(declare-fun n2_3308 () Int)
(declare-fun m2_3294 () Int)
(declare-fun m2_3307 () Int)
(declare-fun m1_3304 () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= n1_3292 lln))
(assert (= m1_3291 llm))
(assert (= q_3293 tmp_3285))
(assert (= p_3290 ll_primed))
(assert (= Anon_3289 v_3284))
(assert (= res v_node_59_2299_primed))
(assert (= h_3286 (+ 1 h_3282)))
(assert (= h_3282 (+ 1 n)))
(assert (<= 0 n))
(assert (<= 0 m))
(assert (<= 0 flted_49_3265))
(assert (<= 0 rm))
(assert (= n flted_49_3265))
(assert (= m rm))
(assert (= ll_primed ll))
(assert (= lr_primed lr))
(assert (= r_primed r))
(assert (= (+ flted_49_3266 1) lln))
(assert (= (+ flted_49_3265 1) lln))
(assert (= v_3284 10))
(assert (= Anon_3302 v_3284))
(assert (= p_3303 lr_primed))
(assert (= q_3306 r_primed))
(assert (= m1_3304 lrm))
(assert (= n1_3305 flted_49_3266))
(assert (= m2_3307 m))
(assert (= n2_3308 n))
(assert (<= n1_3305 (+ 1 n2_3308)))
(assert (<= (+ 0 n2_3308) (+ n1_3305 1)))
(assert (or (and (= h_3282 (+ n1_3305 1)) (<= n2_3308 n1_3305)) (and (= h_3282 (+ n2_3308 1)) (< n1_3305 n2_3308))))
(assert (= h_3282 n2_3295))
(assert (exists ((max_32 Int)) (and (= n2_3295 (+ 1 max_32)) (or (and (= max_32 n1_3305) (>= n1_3305 n2_3308)) (and (= max_32 n2_3308) (< n1_3305 n2_3308))))))
(assert (= m2_3294 (+ (+ m2_3307 1) m1_3304)))
;Negation of Consequence
(assert (not false))
(check-sat)