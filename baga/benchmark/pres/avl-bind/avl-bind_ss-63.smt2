(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun d_primed () Int)
(declare-fun c_primed () Int)
(declare-fun b_primed () Int)
(declare-fun dm () Int)
(declare-fun d () Int)
(declare-fun cm () Int)
(declare-fun c () Int)
(declare-fun bm () Int)
(declare-fun b () Int)
(declare-fun an_2810 () Int)
(declare-fun bn () Int)
(declare-fun cn () Int)
(declare-fun a_primed () Int)
(declare-fun am () Int)
(declare-fun an () Int)
(declare-fun a () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= d_primed d))
(assert (= c_primed c))
(assert (= b_primed b))
(assert (or (and (and (< d 1) (= dm 0)) (= an_2810 0)) (and (and (<= 1 an_2810) (<= 1 dm)) (> d 0))))
(assert (or (and (and (< c 1) (= cm 0)) (= cn 0)) (and (and (<= 1 cn) (<= 1 cm)) (> c 0))))
(assert (or (and (and (< b 1) (= bm 0)) (= bn 0)) (and (and (<= 1 bn) (<= 1 bm)) (> b 0))))
(assert (<= (+ 0 cn) (+ bn 1)))
(assert (<= bn (+ 1 cn)))
(assert (= an_2810 an))
(assert (or (and (= an bn) (>= bn cn)) (and (= an cn) (< bn cn))))
(assert (= a_primed a))
(assert (or (and (and (< a 1) (= am 0)) (= an 0)) (and (and (<= 1 an) (<= 1 am)) (> a 0))))
;Negation of Consequence
(assert (not (or (= am 0) (or (= an 0) (< a 1)))))
(check-sat)