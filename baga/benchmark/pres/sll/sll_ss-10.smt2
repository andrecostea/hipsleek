(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun next_57_1442_primed () Int)
(declare-fun q_1960 () Int)
(declare-fun val_57_1441_primed () Int)
(declare-fun Anon_1980 () Int)
(declare-fun Anon_14 () Int)
(declare-fun v_1979 () Int)
(declare-fun lg_1978 () Int)
(declare-fun sm_1977 () Int)
(declare-fun n_1976 () Int)
(declare-fun x () Int)
(declare-fun vn_primed () Int)
(declare-fun vn () Int)
(declare-fun x_primed () Int)
(declare-fun v_bool_48_1444_primed () Int)
(declare-fun sm () Int)
(declare-fun ql_1958 () Int)
(declare-fun lg () Int)
(declare-fun qs_1957 () Int)
(declare-fun flted_16_1956 () Int)
(declare-fun n () Int)
(declare-fun qmin_1959 () Int)
(declare-fun v () Int)
(declare-fun v_bool_52_1443_primed () Int)
(declare-fun mi_1995 () Int)
(declare-fun ma_1996 () Int)
(declare-fun flted_46_1994 () Int)
(declare-fun v_node_57_1440_primed () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= next_57_1442_primed q_1960))
(assert (= val_57_1441_primed qmin_1959))
(assert (<= sm_1977 lg_1978))
(assert (<= 0 n_1976))
(assert (or (and (= ma_1996 v_1979) (>= v_1979 lg_1978)) (and (= ma_1996 lg_1978) (< v_1979 lg_1978))))
(assert (or (and (= mi_1995 v_1979) (< v_1979 sm_1977)) (and (= mi_1995 sm_1977) (>= v_1979 sm_1977))))
(assert (= flted_46_1994 (+ 1 n_1976)))
(assert (<= qs_1957 ql_1958))
(assert (<= 0 flted_16_1956))
(assert (> vn 0))
(assert (= Anon_1980 Anon_14))
(assert (= v_1979 v))
(assert (= lg_1978 ql_1958))
(assert (= sm_1977 qs_1957))
(assert (= n_1976 flted_16_1956))
(assert (= x_primed x))
(assert (= vn_primed vn))
(assert (> x_primed 0))
(assert (not (> v_bool_48_1444_primed 0)))
(assert (<= sm qmin_1959))
(assert (<= ql_1958 lg))
(assert (<= qmin_1959 qs_1957))
(assert (= (+ flted_16_1956 1) n))
(assert (< qmin_1959 v))
(assert (not (> v_bool_52_1443_primed 0)))
(assert (or (and (and (< v_node_57_1440_primed 1) (= flted_46_1994 0)) (<= mi_1995 ma_1996)) (and (and (<= mi_1995 ma_1996) (<= 1 flted_46_1994)) (> v_node_57_1440_primed 0))))
;Negation of Consequence
(assert (not false))
(check-sat)