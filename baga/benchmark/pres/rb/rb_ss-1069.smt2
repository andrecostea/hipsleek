(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun flted_12_9745 () Int)
(declare-fun na () Int)
(declare-fun a () Int)
(declare-fun b_primed () Int)
(declare-fun c_primed () Int)
(declare-fun color_primed () Int)
(declare-fun flted_137_9678 () Int)
(declare-fun color () Int)
(declare-fun ha () Int)
(declare-fun v_int_144_4585_primed () Int)
(declare-fun a_primed () Int)
(declare-fun flted_12_9744 () Int)
(declare-fun bhl_9749 () Int)
(declare-fun nl_9748 () Int)
(declare-fun l_9747 () Int)
(declare-fun flted_12_9743 () Int)
(declare-fun bhr_9752 () Int)
(declare-fun nr_9751 () Int)
(declare-fun r_9750 () Int)
(declare-fun Anon_20 () Int)
(declare-fun ha_9675 () Int)
(declare-fun nb () Int)
(declare-fun b () Int)
(declare-fun flted_137_9677 () Int)
(declare-fun ha_9676 () Int)
(declare-fun nc () Int)
(declare-fun c () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= flted_12_9745 1))
(assert (= flted_12_9744 0))
(assert (= flted_12_9743 0))
(assert (= na (+ (+ nr_9751 1) nl_9748)))
(assert (= bhl_9749 ha))
(assert (= bhr_9752 ha))
(assert (= a_primed a))
(assert (= b_primed b))
(assert (= c_primed c))
(assert (= color_primed color))
(assert (= flted_137_9678 1))
(assert (= flted_137_9677 0))
(assert (= color 1))
(assert (= ha_9675 ha))
(assert (= ha_9676 ha))
(assert true)
(assert (= v_int_144_4585_primed 0))
(assert (= a_primed 1))
(assert (or (and (and (and (= flted_12_9744 0) (<= 2 bhl_9749)) (<= 1 nl_9748)) (> l_9747 0)) (or (and (and (and (< l_9747 1) (= nl_9748 0)) (= bhl_9749 1)) (= flted_12_9744 0)) (and (and (and (= flted_12_9744 1) (<= 1 bhl_9749)) (<= 1 nl_9748)) (> l_9747 0)))))
(assert (or (and (and (and (= flted_12_9743 0) (<= 2 bhr_9752)) (<= 1 nr_9751)) (> r_9750 0)) (or (and (and (and (< r_9750 1) (= nr_9751 0)) (= bhr_9752 1)) (= flted_12_9743 0)) (and (and (and (= flted_12_9743 1) (<= 1 bhr_9752)) (<= 1 nr_9751)) (> r_9750 0)))))
(assert (or (and (and (and (= Anon_20 0) (<= 2 ha_9675)) (<= 1 nb)) (> b 0)) (or (and (and (and (< b 1) (= nb 0)) (= ha_9675 1)) (= Anon_20 0)) (and (and (and (= Anon_20 1) (<= 1 ha_9675)) (<= 1 nb)) (> b 0)))))
(assert (or (and (and (and (= flted_137_9677 0) (<= 2 ha_9676)) (<= 1 nc)) (> c 0)) (or (and (and (and (< c 1) (= nc 0)) (= ha_9676 1)) (= flted_137_9677 0)) (and (and (and (= flted_137_9677 1) (<= 1 ha_9676)) (<= 1 nc)) (> c 0)))))
;Negation of Consequence
(assert (not false))
(check-sat)