(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun flted_12_9833 () Int)
(declare-fun na () Int)
(declare-fun a () Int)
(declare-fun b_primed () Int)
(declare-fun c_primed () Int)
(declare-fun color_primed () Int)
(declare-fun flted_136_9766 () Int)
(declare-fun color () Int)
(declare-fun ha () Int)
(declare-fun v_int_144_4585_primed () Int)
(declare-fun a_primed () Int)
(declare-fun flted_12_9832 () Int)
(declare-fun bhl_9837 () Int)
(declare-fun nl_9836 () Int)
(declare-fun l_9835 () Int)
(declare-fun flted_12_9831 () Int)
(declare-fun bhr_9840 () Int)
(declare-fun nr_9839 () Int)
(declare-fun r_9838 () Int)
(declare-fun Anon_19 () Int)
(declare-fun ha_9763 () Int)
(declare-fun nb () Int)
(declare-fun b () Int)
(declare-fun flted_136_9765 () Int)
(declare-fun ha_9764 () Int)
(declare-fun nc () Int)
(declare-fun c () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= flted_12_9833 1))
(assert (= flted_12_9832 0))
(assert (= flted_12_9831 0))
(assert (= na (+ (+ nr_9839 1) nl_9836)))
(assert (= bhl_9837 ha))
(assert (= bhr_9840 ha))
(assert (= a_primed a))
(assert (= b_primed b))
(assert (= c_primed c))
(assert (= color_primed color))
(assert (= flted_136_9766 1))
(assert (= flted_136_9765 0))
(assert (= color 0))
(assert (= ha_9763 ha))
(assert (= ha_9764 ha))
(assert true)
(assert (= v_int_144_4585_primed 0))
(assert (= a_primed 1))
(assert (or (and (and (and (= flted_12_9832 0) (<= 2 bhl_9837)) (<= 1 nl_9836)) (> l_9835 0)) (or (and (and (and (< l_9835 1) (= nl_9836 0)) (= bhl_9837 1)) (= flted_12_9832 0)) (and (and (and (= flted_12_9832 1) (<= 1 bhl_9837)) (<= 1 nl_9836)) (> l_9835 0)))))
(assert (or (and (and (and (= flted_12_9831 0) (<= 2 bhr_9840)) (<= 1 nr_9839)) (> r_9838 0)) (or (and (and (and (< r_9838 1) (= nr_9839 0)) (= bhr_9840 1)) (= flted_12_9831 0)) (and (and (and (= flted_12_9831 1) (<= 1 bhr_9840)) (<= 1 nr_9839)) (> r_9838 0)))))
(assert (or (and (and (and (= Anon_19 0) (<= 2 ha_9763)) (<= 1 nb)) (> b 0)) (or (and (and (and (< b 1) (= nb 0)) (= ha_9763 1)) (= Anon_19 0)) (and (and (and (= Anon_19 1) (<= 1 ha_9763)) (<= 1 nb)) (> b 0)))))
(assert (or (and (and (and (= flted_136_9765 0) (<= 2 ha_9764)) (<= 1 nc)) (> c 0)) (or (and (and (and (< c 1) (= nc 0)) (= ha_9764 1)) (= flted_136_9765 0)) (and (and (and (= flted_136_9765 1) (<= 1 ha_9764)) (<= 1 nc)) (> c 0)))))
;Negation of Consequence
(assert (not false))
(check-sat)