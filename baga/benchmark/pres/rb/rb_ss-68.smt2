(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun r_5663 () Int)
(declare-fun l_5660 () Int)
(declare-fun tmp_5655 () Int)
(declare-fun v_5659 () Int)
(declare-fun a () Int)
(declare-fun b () Int)
(declare-fun c_primed () Int)
(declare-fun flted_51_5650 () Int)
(declare-fun flted_51_5649 () Int)
(declare-fun v_int_57_5652 () Int)
(declare-fun v_int_59_5653 () Int)
(declare-fun v_int_59_5654 () Int)
(declare-fun res () Int)
(declare-fun v_node_59_5028_primed () Int)
(declare-fun v_5687 () Int)
(declare-fun v_int_57_5651 () Int)
(declare-fun l_5688 () Int)
(declare-fun a_primed () Int)
(declare-fun r_5691 () Int)
(declare-fun b_primed () Int)
(declare-fun na () Int)
(declare-fun nb () Int)
(declare-fun bhr_5693 () Int)
(declare-fun bhl_5690 () Int)
(declare-fun bhl_5662 () Int)
(declare-fun nl_5661 () Int)
(declare-fun nr_5692 () Int)
(declare-fun nl_5689 () Int)
(declare-fun flted_51_5648 () Int)
(declare-fun bha () Int)
(declare-fun nc () Int)
(declare-fun c () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= r_5663 c_primed))
(assert (= l_5660 tmp_5655))
(assert (= v_5659 v_int_59_5653))
(assert (= a_primed a))
(assert (= b_primed b))
(assert (= c_primed c))
(assert (= flted_51_5650 0))
(assert (= flted_51_5649 0))
(assert (= flted_51_5648 1))
(assert (= v_int_57_5651 0))
(assert (= v_int_57_5652 1))
(assert (= v_int_59_5653 0))
(assert (= v_int_59_5654 0))
(assert (= res v_node_59_5028_primed))
(assert (= v_5687 v_int_57_5651))
(assert (= l_5688 a_primed))
(assert (= r_5691 b_primed))
(assert (= nl_5689 na))
(assert (= bhl_5690 bha))
(assert (= nr_5692 nb))
(assert (= bhr_5693 bha))
(assert (= bhr_5693 bhl_5690))
(assert (= bhr_5693 bhl_5662))
(assert (= bhl_5690 bhl_5662))
(assert (= nl_5661 (+ (+ nr_5692 1) nl_5689)))
(assert (or (and (and (and (= flted_51_5648 0) (<= 2 bha)) (<= 1 nc)) (> c 0)) (or (and (and (and (< c 1) (= nc 0)) (= bha 1)) (= flted_51_5648 0)) (and (and (and (= flted_51_5648 1) (<= 1 bha)) (<= 1 nc)) (> c 0)))))
;Negation of Consequence
(assert (not false))
(check-sat)