(set-info :source  loris-7.ddns.comp.nus.edu.sg/~project/hip/) 
;Variables declarations
(declare-fun l_10447 () Int)
(declare-fun r_10451 () Int)
(declare-fun Anon_10449 () Int)
(declare-fun Anon_10453 () Int)
(declare-fun flted_12_9867 () Int)
(declare-fun l_9870 () Int)
(declare-fun flted_12_9866 () Int)
(declare-fun r_9873 () Int)
(declare-fun nr_10413 () Int)
(declare-fun bhr_10414 () Int)
(declare-fun bhr_10488 () Int)
(declare-fun Anon_10487 () Int)
(declare-fun bhl_10484 () Int)
(declare-fun r_10485 () Int)
(declare-fun l_10481 () Int)
(declare-fun nl_10410 () Int)
(declare-fun bhl_10411 () Int)
(declare-fun bhr_10454 () Int)
(declare-fun nr_10452 () Int)
(declare-fun bhl_10450 () Int)
(declare-fun nl_10448 () Int)
(declare-fun b_primed () Int)
(declare-fun c_primed () Int)
(declare-fun bhr_9875 () Int)
(declare-fun bhl_9872 () Int)
(declare-fun nr_9874 () Int)
(declare-fun nl_9871 () Int)
(declare-fun nl_10482 () Int)
(declare-fun Anon_10483 () Int)
(declare-fun nr_10486 () Int)
(declare-fun flted_137_9878 () Int)
(declare-fun ha_9877 () Int)
(declare-fun c () Int)
(declare-fun ha_9876 () Int)
(declare-fun b () Int)
(declare-fun Anon_19 () Int)
(declare-fun na () Int)
(declare-fun ha () Int)
(declare-fun nb () Int)
(declare-fun Anon_20 () Int)
(declare-fun nc () Int)
;Relations declarations
;Axioms assertions
;Antecedent
(assert (= bhr_10414 bhl_10411))
(assert (= flted_12_9866 0))
(assert (= flted_12_9867 0))
(assert (= l_10447 l_9870))
(assert (= r_10451 r_9873))
(assert (= Anon_10449 flted_12_9867))
(assert (= Anon_10453 flted_12_9866))
(assert (or (and (and (and (= flted_12_9867 0) (<= 2 bhl_9872)) (<= 1 nl_9871)) (> l_9870 0)) (or (and (and (and (< l_9870 1) (= nl_9871 0)) (= bhl_9872 1)) (= flted_12_9867 0)) (and (and (and (= flted_12_9867 1) (<= 1 bhl_9872)) (<= 1 nl_9871)) (> l_9870 0)))))
(assert (or (and (and (and (= flted_12_9866 0) (<= 2 bhr_9875)) (<= 1 nr_9874)) (> r_9873 0)) (or (and (and (and (< r_9873 1) (= nr_9874 0)) (= bhr_9875 1)) (= flted_12_9866 0)) (and (and (and (= flted_12_9866 1) (<= 1 bhr_9875)) (<= 1 nr_9874)) (> r_9873 0)))))
(assert (= nr_10413 (+ (+ nr_10486 1) nl_10482)))
(assert (= bhr_10414 (+ bhl_10484 1)))
(assert (= bhl_10484 bhr_10488))
(assert (= bhr_10488 ha_9877))
(assert (= Anon_10487 flted_137_9878))
(assert (= bhl_10484 ha_9876))
(assert (= r_10485 c_primed))
(assert (= l_10481 b_primed))
(assert (= nl_10410 (+ (+ nr_10452 1) nl_10448)))
(assert (= bhl_10411 (+ bhl_10450 1)))
(assert (= bhl_10450 bhr_10454))
(assert (= bhr_10454 bhr_9875))
(assert (= nr_10452 nr_9874))
(assert (= bhl_10450 bhl_9872))
(assert (= nl_10448 nl_9871))
(assert (= b_primed b))
(assert (= c_primed c))
(assert (= flted_137_9878 0))
(assert (= ha_9877 ha))
(assert (= ha_9876 ha))
(assert (= bhr_9875 ha))
(assert (= bhl_9872 ha))
(assert (= na (+ (+ nr_9874 1) nl_9871)))
(assert (= nl_10482 nb))
(assert (= Anon_10483 Anon_20))
(assert (= nr_10486 nc))
(assert (or (and (and (and (= flted_137_9878 0) (<= 2 ha_9877)) (<= 1 nc)) (> c 0)) (or (and (and (and (< c 1) (= nc 0)) (= ha_9877 1)) (= flted_137_9878 0)) (and (and (and (= flted_137_9878 1) (<= 1 ha_9877)) (<= 1 nc)) (> c 0)))))
(assert (or (and (and (and (= Anon_20 0) (<= 2 ha_9876)) (<= 1 nb)) (> b 0)) (or (and (and (and (< b 1) (= nb 0)) (= ha_9876 1)) (= Anon_20 0)) (and (and (and (= Anon_20 1) (<= 1 ha_9876)) (<= 1 nb)) (> b 0)))))
;Negation of Consequence
(assert (not (or (and (and (and (and (and (and (and (and (and (exists ((flted_136_10657 Int)) (and (<= 0 flted_136_10657) (<= flted_136_10657 1))) (exists ((flted_136_10656 Int)) (and (<= 0 flted_136_10656) (<= flted_136_10656 1)))) (exists ((ha_10655 Int)) (<= 1 ha_10655))) (exists ((ha_10654 Int)) (<= 1 ha_10654))) (<= 0 na)) (<= 1 ha)) (<= 0 nb)) (<= 0 Anon_19)) (<= Anon_19 1)) (<= 0 nc)) (and (and (and (and (and (and (and (and (and (exists ((flted_137_10653 Int)) (and (<= 0 flted_137_10653) (<= flted_137_10653 1))) (exists ((flted_137_10652 Int)) (and (<= 0 flted_137_10652) (<= flted_137_10652 1)))) (exists ((ha_10651 Int)) (<= 1 ha_10651))) (exists ((ha_10650 Int)) (<= 1 ha_10650))) (<= 0 na)) (<= 1 ha)) (<= 0 nb)) (<= 0 Anon_20)) (<= Anon_20 1)) (<= 0 nc)))))
(check-sat)