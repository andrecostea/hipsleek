dll: htrue
heap, sll, trees: NUM

===============================================
# ex2a.slk (FIXED)

  inv_sat BG([],self=null&n=0) | BG([self],n=2) // fail


Inv Check: Valid.(Under)

# why has precise invariant message?

!!! **WARNING****astsimp.ml#2246:View defn for ll has precise invariant


!! **astsimp.ml#2139:baga_under: ((n=2 & self!=null) | (n=4 & self!=null) | (self=null & n=0))
===============================================
# ex2b.slk

  inv_sat BG([],self=null&n=0) | BG([self],n=3) // ok

# why check under twice?

!!! **WARNING****astsimp.ml#2041:TODO: fix replacement of rec view with inv
!!! **astsimp.ml#2139:baga_under: ((n=3 & self!=null) | (self=null & n=0))
!!! **astsimp.ml#2193:formula1_under: emp&((n=2 & self!=null) | (n=5 & self!=null) | (self=null & n=0))&
{FLOW,(1,26)=__flow#E}[]
!!! **astsimp.ml#2199:tracing check_under
!!! **astsimp.ml#2199:tracing check_under
!!! **astsimp.ml#2210:body_under (un_struc):[ (* lbl: *){1}->emp&self=null & n=0&{FLOW,(1,26)=__flow#E}[], (* lbl: *){2}->(exists flted_18_11,Anon_14,q1,Anon_15,
q2: (* lbl: *){2}->self::node<Anon_14,q1>@M * q1::node<Anon_15,q2>@M * 
                   q2::ll<flted_18_11>@M&
2+flted_18_11=n&{FLOW,(1,26)=__flow#E}[])]
===============================================
# ex3a.slk

../../../sleek ex3a-avl.slk --inv-baga --use-baga  (FIXED)

  baga over inv: [([], self=null & size=0 & height=0),([self], 1<=size & 1<=height)]
  baga over inv (unfolded): [([], self=null & size=0 & height=0),([self], 1<=size & 1<=height)]
  baga under inv: [([], self=null & size=0 & height=0),([self], 1<=size & 1<=height)]

# --inv-baga --use-baga --under-infer-limit 0 (FIXED)
  baga under inv: [([], self=null & size=0 & height=0)]

# --inv-baga --use-baga --under-infer-limit 1 (FIXED)
  baga under inv: [([], self=null & size=0 & height=0),([self], height=1 & size=1)]

# --inv-baga --use-baga --under-infer-limit 2 (should also have size=2 & height=2) (FIXED)
  baga under inv: [([], self=null & size=0 & height=0),([self], height=1 & size=1),([self], height=2 & size=3)]

 s=0 & h=0

      hl=0 & sl=0        hr=0 & sr=0
      hl=0 & sl=0        hr=0 & sr=0

 s=0 & h=0  | s=1 & h=1


     (ls=0 & lh=0  | ls=1 & lh=1)   (rs=0 & rh=0  | rs=1 & rh=1)

  s=0 & h=0  | s=1 & h=1  | s=2 & h=2 | s=3 & h=2

===============================================
# ex3.slk (FIXED with flag --not-idx-baga)

# What happen to size>=height>0 for [self]?

  baga over inv: [([], self=null & size=0 & height=0),([self], true)]
  baga over inv (unfolded): [([self], true),([], self=null & size=0 & height=0)]
  
  xform: ((size=0 & height=0 & self=null) | self!=null)

# fixcalc.inp ? where is rec predicate? why is this diff
  from logs/fixcal.inp

chinwn@loris-60:~/hg/sl_def/baga/benchmark/sleek2$ more fixcalc.inp 
F1:={[size,height]: (size=0 && height=0 || height<=size && size<=height+height-(1) && height<=
2)};
F2:={[size,height]: (size=0 && height=0 || (height=size && 1<=size && size<=2 || height+1<=siz
e && size<=height+height+height+height-(5) && height<=3))};
F2W:=widen(F1,F2,SimHeur);
F2W;

# logs/fixcalc.inp:

avl:={[self,size_54,height_55,idx_56] -> [] -> []:  
exists (self: 0=0 && self<=0 && size_54=0 
&& height_55=0 && idx_56=0) ||  exists (self,height_13,Anon_14,r,l,size1,height1,q,size2,heigh
t2,idx_53,idx_52: ((self>0 && avl(l,size1,height1,idx_53)) && avl(q,size2,height2,idx_52)) && 
size_54=size1+size2+1 && height2<=height1+1 && height1<=height2+1 &&  (exists (max_11:height_5
5=1+max_11 && ((height1 >= height2 && max_11 = height1) || (height2 > height1 && max_11 = heig
ht2))))  && height_13=height_55 && idx_56=idx_53+1)
};
bottomupgen([avl], [3], SimHeur);


===============================================
===============================================
===============================================
===============================================
===============================================
===============================================
===============================================
===============================================
===============================================
===============================================
===============================================
===============================================
