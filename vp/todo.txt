====================================================================
# vp/vex35a1.slk --ann-vp (DONE)

# to handle @ver_perm correctly ..

infer [@ver_post] @value[x] |- @full[x].
expect Fail.

infer [@ver_post] @value[x] |- @value[x].
expect Fail.

infer [@ver_post] @full[x] |- @full[x].
expect Valid.

infer [@ver_post] @full[x] |- @value[x].
expect Fail.

Unexpected: 1 2 4 
====================================================================
# vp/ex35d1-vp-post-err.ss --ann-vp (FIXED)

void inc5(int i)
 requires @value[i]
 ensures  @full[i]; //'@full[i] &
{
  i++;
}

valid but expect post error

need to add @ver_post prior to post-checking..
use Wrapper code & add this at typechecker.mk

Use this for check_post..

let wrap_ver_post f a =
  let save_fn () = infer_const_obj # is_ver_post in
  let set_fn () = infer_const_obj # set INF_VER_POST in
  let restore_fn f = if f then () else infer_const_obj # reset INF_VER_POST in
  wrap_gen save_fn set_fn restore_fn () f a

====================================================================
Add infer_object flags to --esl
====================================================================
make more vperm examples work

ex36 + ex37

error at: vperm/vperm_check.ss inc
error at: vperm/vperm_check.ss incCell
error at: vperm/vperm_check.ss test1
error at: vperm/vperm_check.ss test2
error at: vperm/vperm_check.ss test3
error at: vperm/vperm_check.ss test4
error at: vperm/task_decompose.ss inc
error at: vperm/task_decompose.ss creator
====================================================================
run-fast-test thread_hip

Starting sleek-hip_threads tests:
Starting hip tests:
Checking threads/motiv-example.ss (runs with extra options: --en-para --en-thrd-resource -tp redlog)
Checking threads/motiv-example2.ss (runs with extra options: --en-para --en-thrd-resource -tp redlog)
Checking threads/no-deadlock-nonlexical2.ss (runs with extra options: --en-para --en-thrd-resource -tp parahip --en-lsmu-infer)

Starting Omega.../usr/local/bin/oc
Starting z3... 
Checking procedure main$... 


error at: threads/no-deadlock-nonlexical2.ss main
error at: threads/no-deadlock-nonlexical2.ss thread1
error at: threads/no-deadlock-nonlexical2.ss thread2
Checking threads/no-deadlock-nonlexical.ss (runs with extra options: --en-para --en-thrd-resource -tp parahip --en-lsmu-infer)
error at: threads/no-deadlock-nonlexical.ss main
error at: threads/no-deadlock-nonlexical.ss thread1
error at: threads/no-deadlock-nonlexical.ss thread2
Checking threads/forkjoin.ss (runs with extra options: 
--en-para -tp parahip --en-lsmu-infer --en-thrd-resource
)
error at: threads/forkjoin.ss func
error at: threads/forkjoin.ss main
Checking threads/cell4.ss (runs with extra options: --en-para -tp parahip --en-lsmu-infer --en-thrd-resource)
error at: threads/cell4.ss inc
error at: threads/cell4.ss main
====================================================================
spec in prelude: 
================
  khanh Sun Jan 08 16:15:58 2012 +0800: 
        Tue Mar 06 20:57:47 2012 +0800: void acquire()
        Tue Mar 06 20:57:47 2012 +0800:   requires true
        Tue Mar 06 20:57:47 2012 +0800:   ensures true;
  khanh Sun Jan 08 16:15:58 2012 +0800: 
        Tue Mar 06 20:57:47 2012 +0800: void release()
        Tue Mar 06 20:57:47 2012 +0800:   requires true
        Tue Mar 06 20:57:47 2012 +0800:   ensures true;

forkjoin.ss
===========
void func(lock l1)
     requires l1::LOCK(0.5)<> & [waitlevel<l1.mu # l1 notin LS]
     ensures l1::LOCK(0.5)<> & LS'=LS & waitlevel'=waitlevel;//'
{
  acquire(l1);
  release(l1);
}

../hip ex43-forkjoin.ss --en-para -tp parahip --en-thrd-resource 

!!!Full processing file "ex43-forkjoin.ss"
Parsing file "ex43-forkjoin.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega.../usr/local/bin/oc
Starting z3... 

Checking procedure func$lock... Starting Reduce... 
Nested Timer(stop)
Nested Timer(stop)
Nested Timer(stop)
Nested Timer(stop)


Questions: 
 Is the spec for acquire/release correct?
 Why did the system terminate abruptly?

=================================================
concurrency primitives hard-coded.

../hip ex43-forkjoin.ss --en-para -tp parahip --en-thrd-resource 

hip_include 'prelude_extra.ss'

global int waitlevel;
global set(LOCK) LS;
global set(int) LSMU;

void acquire(LOCK l1)
 requires l1::LOCK<>(f)<> & l1 \notin LS  & waitlevel<level(l1') 
         & f>0.0 & f<=1.0 
 ensures  l1::LOCK<>(f)<> & LS'=union(LS,{l1}) &
         LSMU'=union(LSMU,{level(l1')}) & waitlevel'=waitlevel'

void release(LOCK l1)
   requires  l1 <in> LS 
   ensures   LS'=LS-{l1} & LSMU'=LSMU-{level(l1)};


prepost_of_acquire@1 EXIT: EBase exists (Expl)[](Impl)[f_1384](ex)[]
l1'::LOCK{}( f_1384)<>&
       l1' <notin> LS'  & waitlevel'<(level(l1')) & f_1384>FLOAT 0. & 
       f_1384<=FLOAT 1.&{FLOW,(1,28)=__flow#E}[]
         EAssume ref [LS;LSMU]
           (htrue) * l1'::LOCK{}( f_1384)<>&LS'=union(LS,{l1'}) & 
           LSMU'=union(LSMU,{level(l1')})&{FLOW,(4,5)=__norm#E}[]

-dre ".*release" : missing
# resolved by masking acquire..

Checking procedure func$lock... 
prepost_of_release@1
prepost_of_release inp1 :l1'
prepost_of_release inp2 :LOCK
prepost_of_release inp3 :[]
prepost_of_release inp4 : htrue&{FLOW,(4,5)=__norm#E}[]
prepost_of_release@1 EXIT: EBase htrue&l1' <in> LS' &{FLOW,(4,5)=__norm#E}[]
         EAssume ref [LS;LSMU]
           htrue&LS'=LS-{l1'} & LSMU'=LSMU-{level(l1')}&
           {FLOW,(4,5)=__norm#E}[]
           
Starting Reduce... 

====================================================================
# ex50-global.ss --pcp

Global initialization need to be reflected inside special
main method.

global int CNT=0;// this init seems useless

Please test if the two prim can be hip_include

====================================================================
merge ivpermUtil & cvpermUtil ..
====================================================================
# ex38 working now, need to unify two classic mechanism (DONE)

Local var should use @value rather than @full

Need to unify, by replacing the former by the latter.

 let opt_classic = ref false                (* option --classic is turned on or not? *)

  | INF_CLASSIC (* For infer[@leak] *)

====================================================================
# support ex39-frac

 1/2 |- 1/3 --> 1/6
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
