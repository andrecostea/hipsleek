data char_star {
  int val;
  char_star next;
}.


  HeapPred U(char_star x,char_star y).
  HeapPred U2(char_star x,char_star y).


//(2)
infer [U,@pure_field,@classic] 
   self::char_star<v,q2>* q2::char_star<0,p> & v!=0  |-  U(self,p).
 print residue.

/*
# ex16d1d2.slk dre "infer_c" -show-push-list ".*hp_"

//(1)

infer [U,@pure_field,@classic] 
   self::char_star<v,q2>* q2::char_star<0,p> & v!=0  |-  U(self,p).
 print residue.

# I think can use just GP_30(q2,self,p), otherwise we may
  have too many parameters.

push_list(es_infer_hp_rel):[ self::char_star<v,q2>@M * GP_30(q2,self,p,v)&v!=0 


*/
