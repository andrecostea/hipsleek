data char_star {
  int val;
  char_star next;
}.

HeapPred U(char_star x,char_star@NI p).
//HeapPred QQ(char_star x,char_star y,char_star z).

pred QQ<sp,p> ==
     self::char_star<0,p> & self=sp
  or self::char_star<v,q>*q::QQ<sp,p> & v!=0
inv self!=null & sp!=null .

pred WFSeg<p> ==
  self=p 
  or self::char_star<v,q>*q::WFSeg<p> & v!=0
  inv true.

/*
// both valid
lemma_safe
   self::QQ<sp,p> <- self::WFSeg<sp>*sp::char_star<0,p>.

lemma_safe
   self::QQ<sp,p> -> self::WFSeg<sp>*sp::char_star<0,p>.
*/

lemma_infer [U,@classic,@pure_field] 
   self::QQ<sp,p> <- U(self,sp)*sp::char_star<0,p>.

print residue.

/*

 QQ(s,s',p) <-- s::char_star<0,p>@M & s'=s 
            or s::char_star<v_1631,q>@M * QQ(q,s',p)& v_1631!=0

*/