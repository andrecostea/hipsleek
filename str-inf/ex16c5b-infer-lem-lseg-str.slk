data char_star {
  int val;
  char_star next;
}.

pred WSS<p> ==
  self::WFSeg<q>*q::char_star<0,p> 
  inv self!=null.

pred WFSeg<p> ==
  self=p 
  or self::char_star<v,q>*q::WFSeg<p> & v!=0
  inv true.

pred WFG<p> ==
  self::char_star<0,p>
  or self::char_star<v,q>*q::WFG<p> & v!=0
  inv self!=null.

  //lemma_safe self::WFG<p> -> self::WFSeg<q>*q::char_star<0,p>.
  //lemma_safe self::WFG<p> <- self::WFSeg<q>*q::char_star<0,p>.

  HeapPred U(char_star x,char_star y).
  HeapPred U2(char_star x,char_star@NI y).
  HeapPred U3(char_star x,char_star@NI y).

 lemma_unsafe self::WFG<p> <- U(self,q)*q::char_star<0,p>.

 //infer [@classic,@pure_field] U(x,q)*q::char_star<0,p>  |- x::WFG<p>.
 //[[ SEARCH ==>  (Lemma <== lem_12(UNK)) ==>  Match(UNK) ==>  SEARCH ==>  Match(q,q)]]

 

 infer [U] U(x,p)  |- x::char_star<v,qq> * qq::char_star<b,p>.
 print residue.
 expect Valid.


/* infer [U2,U3] U2(qq,p)  |- qq=p.
 print residue.
*/


 infer [U2,U3] U2(qq,p) * U3(p,x)  |- qq::char_star<b,p>.
 print residue.
 expect Valid.


infer [U2,U3,@classic] U2(qq,p) * U3(p,x)  |- qq::char_star<b,ss>.
 print residue.
 expect Valid.



 infer [U2,U3] U2(qq,p)  |- qq::char_star<b,ss>.
 print residue.



/*
# ex16c5b.slk

 infer [U2,U3] U2(qq,p) * U3(p,x)  |- qq::char_star<b,p>.

# complex LHS:

 inferred hprel: [U2(qq,p@NI) * U3(p,x@NI)&
                   true |#|3  --> qq::char_star<b_180,p>@M&true]

# expects:

  U2(qq,p@NI) |#|3  --> qq::char_star<b_180,s> * HP(s,p@NI)
  HP(s,p) --> s=p
  U3(p,x) --> emp

--------------------

 infer [U2,U3] U2(qq,p)  |- qq::char_star<b,p>.

# GOT

 <1>emp&{FLOW,(20,21)=__norm#E}[]
 inferred hprel: [U2(qq,p@NI)&true |#|3  --> qq::char_star<b_167,p>@M&true]
[[ SEARCH ==>  InferUnfold ]]

# BETTER in smaller steps..

  U2(qq,p@NI) |#|3  --> qq::char_star<b_180,s> * HP(s,p@NI)
  HP(s,p) --> s=p

=====================================

 infer [U2,U3] U2(qq,p)  |- qq=p.
 print residue.

 <1>U2(qq,p)&qq=p&{FLOW,(20,21)=__norm#E}[]
 inferred hprel: [U2(qq,p@NI)&true |#|3  --> emp&p=qq]


infer [U] U(x,p)  |- x::char_star<v,qq> * qq::char_star<b,p>.

# avoid complex LHS

<<1>emp&{FLOW,(20,21)=__norm#E}[]
 inferred hprel: [HP_150(qq,p@NI) * HP_151(p,x@NI)&
                   true |#|3  --> qq::char_star<b_159,p>@M&true; 
                  U(x,p)&
                   true |#|3  --> x::char_star<v_148,qq_149>@M * 
                                  HP_150(qq_149,p@NI) * HP_151(p,x@NI)&
-----



*/
