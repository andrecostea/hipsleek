sleek_include 'msess/notes/node.slk'.
sleek_include 'msess/notes/hodef.slk'.
/* hip_include 'msess/notes/commprimitives.ss' */


pred_prim Ff<id:int>. //full
pred_prim Fp<id:int,p>. //partial

pred_prim Ff2<id:int,var>. //full
pred_prim Fp2<id:int,p,var>. //partial



//lemma_norm "ACC" self::Fp<id,aa> * self::Fp<id,bb> -> self::Fp<id,aa+bb>.
//lemma_norm "FULL" self::Fp<id,aaa> * self::Ff<id,aaa> -> self::Ff<id,aaa>.
//lemma_norm "REL2" self::Chan{@S Fp2<id,bbb,q>;;%R}<> -> self::Chan{@S %R}<> * q::Fp<id,bbb>.
//lemma_norm "SYNC-CHECK1" self::Chan{@S Ff2<id,bbb,ppp> ;; %R}<> * ppp::Fp<id,bbb> -> self::Chan{@S %R}<> * ppp::Ff<id,bbb>.
//lemma_norm "SYNC-CHECK2" self::Chan{@S Ff2<id,bbb,ppp> ;; %R}<> * ppp::Ff<id,bbb> -> self::Chan{@S %R}<> * ppp::Ff<id,bbb>.

lemma_norm "ACC" self::Fp<id,aa> * self::Fp<id,bb> -> self::Fp<id,aa+bb>.
lemma_norm "FULL" self::Fp<id,aaa> & aaa=1 -> self::Ff<id>.
lemma_norm "REL" self::Chan{@S Fp2<id,ppp,q>;;%R}<> -> self::Chan{@S %R}<> * q::Fp<id,ppp>.
lemma_norm "SYNC-CHECK" self::Chan{@S Ff2<id,ppp> ;; %R}<> * ppp::Ff<id> -> self::Chan{@S %R}<> * ppp::Ff<id>.



checkentail d::Chan{@S Fp2<22,0.5,qqq>;;?2}<> *
            c::Chan{@S Ff2<22,qqq>;;?1}<> *
            a::Chan{@S Fp2<22,0.5,qqq>;;?1}<>
            |- qqq::Ff<22>.
expect Valid.
print residue.
