sleek_include 'msess/notes/node.slk'.
sleek_include 'msess/notes/hodef.slk'.
/* hip_include 'msess/notes/commprimitives.ss' */


pred_prim Ff<id:int>. //full
pred_prim Fp<id:int,p>. //partial

pred_prim Ff2<id:int,var>. //full
pred_prim Fp2<id:int,p,var>. //partial

/* lemma_norm "ACC" self::Fp<id,a> * self::Fp<id,b> -> self::Fp<id,a+b>; */
/* lemma_norm "FULL" self::Fp<id,p> & p=0 -> self::Ff<id>; */
/* lemma_norm "REL" self::Chan{@S Fp<id,a>;;%R}<> -> self::Chan{@S %R}<> * self::Fp<id,a>; */
/* lemma "SYNC-CHECK" self::Chan{@S Ff<id> ;; %R}<> * self::Ff<id> -> self::Chan{@S %R}<> * self::Ff<id>; */


lemma_norm "ACC" self::Fp<id,aa> * self::Fp<id,bb> -> self::Fp<id,aa+bb>.
lemma_norm "FULL" self::Fp<id,aaa> & aaa=1 -> self::Ff<id>.
lemma_norm "REL2" self::Chan{@S Fp2<id,bbb,q>;;%R}<> -> self::Chan{@S %R}<> * q::Fp<id,bbb>.
lemma_norm "SYNC-CHECK" self::Chan{@S Ff2<id,ppp> ;; %R}<> * ppp::Ff<id> -> self::Chan{@S %R}<> * ppp::Ff<id>.



checkentail c::Chan{@S Ff2<22,qqq> ;; ?1}<> * qqq::Ff<22> |- c::Chan{@S ?1}<>.
expect Valid.
print residue. 

checkentail c::Chan{@S Ff2<22,qqq> ;; ?1}<> * qqq::Ff<22> |- c::Chan{@S ?1}<> * qqq::Ff<22>.
expect Valid.
print residue.

checkentail c::Chan{@S Ff2<22,qqq> ;; ?1}<> * a::Chan{@S Fp2<22,1,qqq>}<> |- c::Chan{@S ?v#%L(v);;%R}<>.
expect Valid.
print residue. 
