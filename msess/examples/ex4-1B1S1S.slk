sleek_include 'hodef.slk'. 
/* sleek_include 'msess/notes/hodef.slk'.  */

data Channel{int info;}.
data node{int info; node next;}.

/* pred_sess s1<a> == a!emp. */
  //;bs?msg:double;;(bs!1;;bs!Addr;;bs?Date or bs!0);
/* pred p1<c,s> == c::Chan<s>*s::Sess{msg=1}<>. */


/* pred_sess p1<a> == bs!emp & msg:int; //;bs?msg:double;;(bs!1;;bs!Addr;;bs?Date or bs!0); */
/* pred G2B<bs,ms> == */
/*   bs::Chan<ms> * ms::Sess{self::p1<bs>}<>; */
  /* bs::Chan<ms> * ms::Sess{bs!int;bs?double;(bs!1;bs!Addr;bs?Date or bs!0)}<>; */

//1
checkentail x=0 |- 0<=x.
expect Valid.

//2
checkentail 0<=x |- x=0.
expect Fail.

//3
checkentail x::S{- 0<=x}<> |- x::S{- x=0}<>.
expect Valid.

//4
checkentail x::S{- x=0}<> |- x::S{- 0<=x}<>.
expect Fail.

//5
checkentail x::R{+ 0<=x}<> |- x::R{+ x=0}<>.
expect Fail.

//6
checkentail x::R{+ x=0}<> |- x::R{+ 0<=x}<>.
expect Valid.


pred_sess_proj pp1<aa> == aa?0.
pred_sess_proj pp2<aa> == aa?0.
//7
checkentail x::pp1<b> |- x::pp2<b>.
expect Valid.

pred_sess_proj pp5<aa> == aa?0.
pred_sess_proj pp6<aa> == aa?emp & 0<=msg.
//8
checkentail x::pp5<b> |- x::pp6<b>.
expect Valid.

//9
checkentail x::pp6<b> |- x::pp5<b>.
expect Fail.

pred_sess_proj pp7<aa> == aa!0.
pred_sess_proj pp8<aa> == aa!emp & 0<=msg.
//10
checkentail x::pp7<b> |- x::pp8<b>.
expect Fail.

//11
checkentail x::pp8<b> |- x::pp7<b>.
expect Valid.


pred_sess_proj pp17<aa> == aa!0;;aa?emp & 0<=msg.
pred_sess_proj pp18<aa> == aa!emp & 0<=msg;;aa?0.
//12
checkentail x::pp17<b> |- x::pp18<b>.
expect Fail.

//13
checkentail x::pp18<b> |- x::pp17<b>.
expect Valid.

//14
checkentail x::Sess{@ aa!0;;aa?emp & 0<=msg}<> |- x::Sess{@ aa!emp & 0<=msg;;aa?0}<>.
expect Fail.

//15
checkentail x::pp18<b> |- x::pp17<b>.
expect Valid.

/*
pred_sess_proj pp19<aa> == (aa?emp & 0<msg) or (aa?0).
pred_sess_proj pp20<aa> == (aa?emp & 0<msg) or (aa?0).
//14
checkentail x::pp19<b> |- x::pp20<b>.
expect Fail.

//15
//checkentail x::pp20<b> |- x::pp19<b>.
//expect Valid.
*/


/*
pred_prim A{%P}<>.
pred pp3<aa> == self::A{self::node<aa,null>}<>.
pred pp4<aa> == self::A{self::node<aa,null>}<>.
checkentail x::pp3<b> |- x::pp4<b>.
expect Valid.
*/