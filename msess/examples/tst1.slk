sleek_include 'msess/notes/hodef.slk'.
sleek_include 'node.slk'.

pred_prim XX{%P}<>.

/*
checkentail x=1 |- x=msg & msg=1.
expect Fail.


checkentail x=1 |- msg=1 & x=msg.
expect Fail.

checkentail x=1 |- exists msg: (msg=1 & x=msg).
print residue.
expect Valid.

checkentail x=1 |- exists msg: (msg=0 & x=msg).
print residue.
expect Fail.
*/
/*
c::Chan(!msg=1;;!Addr;;?Date;P or !msg=0;P) & x=1 |- c::Chan(!msg.L;P)*L & x=msg.

c::Chan(!msg=null;;!Addr;;?Date;P or !msg::node<_,_>;P) * x::node<_,_> |- c::Chan(!msg.L;P)*L & x=msg.
c::Chan(!msg=null;;!Addr;;?Date;P) * x::node<_,_> & L=(msg=null) |- c::Chan(!msg.L;P)*L & x=msg.

*/

expect Valid.

pred_prim Msg<a>.

//6
checkentail x::Sess{@S ?msg::Msg<y>  * y::node<_,_>;;?msg::Msg<z> & z=0}<> |-
            x::Sess{@S ?msg::Msg<yy> * %L;;?msg::Msg<zz> & zz=0}<>.
print residue.
expect Valid.

checkentail x::Sess{@S ?msg::Msg<y>  & y=3;;?msg::Msg<z> & z=0}<> |-
            x::Sess{@S ?msg::Msg<yy> & yy;;?msg::Msg<zz> & zz=0}<>.
print residue.
expect Valid.
