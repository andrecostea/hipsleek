sleek_include 'msess/notes/node.slk'.
sleek_include 'msess/notes/hodef.slk'.

relation Q(int a,int b).
relation Z(int a,int b).

/*
infer [Q]  emp & ["chr": cb(A,2,B,2) & cb(A,1,B,1) & ev(B,2) & ev(B,1) &
       Q(B,2,B,1)] |- emp & ["chr": hb(A,2,B,1)].
print residue.
*/
/*
infer [Q]  emp & ["chr": cb(A,2,B,2) & cb(A,1,B,1) & ev(B,2) & ev(B,1) &
      hb(B,2,B,1)] or
      emp & ["chr": cb(A,2,B,2) & cb(A,1,B,1) & ev(B,2) & ev(B,1) &
      hb(B,1,B,2)]
      |- emp & ["chr": hb(A,2,B,1)].
print residue.

infer [Q]  emp & ["chr": cb(A,2,B,2) & cb(A,1,B,1) & ev(B,2) & ev(B,1) &
      (hb(B,1,B,2) | hb(B,22,B,1)) ]
      |- emp & ["chr": hb(A,2,B,1)].
print residue.
*/

//1
infer [B1,B2]  emp & ["chr": hb(A1,B1)]
        |- emp & ["chr": hb(A1,B1)].
expect Valid.
print residue.

//2
infer [B1,B2]  emp & ["chr": cb(A2,B2) & hb(B2,B1)]
        |- emp & ["chr": hb(A2,B1)].
expect Valid.
print residue.

//3
checkentail  emp & ["chr": cb(A2,B2) & hb(B2,B1)]
        |- emp & ["chr": hb(A2,B3)].
expect Fail.
print residue.

//4
checkentail  emp & ["chr": hb(A,A) ]
        |- emp & ["chr": hb(A,A)].
expect Valid.
print residue.

//5
infer [B1,B2]  emp & ["chr": cb(A2,B2)]
        |- emp & ["chr": hb(A2,B1)].
expect Valid.
print residue.

//6
infer [Z] a<10 & Z(a,c) |- 0<a & a<c.
print residue.

//7
infer [a,c] a<10 |- 0<a & a<c.
print residue.