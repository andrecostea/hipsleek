sleek_include 'msess/notes/node.slk'.
sleek_include 'msess/notes/hodef.slk'.

pred_sess_prot G<C1:role,C2:role,S:role,c1:chan,c2:chan> ==
         C1->S:c1(v#emp& 1<=v & v<=3) ;; C2->S:c2(v#emp & 1<=v & v<=3) .

/*
checkentail c1::Chan{@S G<C1,C2,S@peer,c1@chan,c2>}<> & fnce(c2,27)
|-
 c1::Chan{@S Guard{emp & fnce(c1,28)}<>;;(?v#((1 <= v) & (v <= 3)))}<>.
*/

/*
checkentail c2::Chan{@S Guard{emp&fnce(c1,28)}<>;;?v_63#(1<=v_63 & v_63<=3);;Assume{fnce(c2,27)}<>}<> *
            c1::Chan{@S Assume{fnce(c1,28)}<>;;Guard{fnce(c2,27)}<>}<>
            // & fnce(c1,28)
       |-   //fnce(c1,28).
            c2::Chan{@S ?v#%L(v);;%R}<>.
expect Valid.
*/

checkentail c2::Chan{@S Guard{emp&fnce(c1,28)}<>;;Assume{fnce(c2,27)}<>}<> *
            c1::Chan{@S Assume{fnce(c1,28)}<>;;Guard{fnce(c2,27)}<>}<>
            // & fnce(c1,28)
       |-   fnce(c2,27).
            //c2::Chan{@S ?v#%L(v);;%R}<>.
expect Valid.


/*
checkentail c2::Chan{@S ?v#(1<=v & v<=3);;Assume{fnce(c2,27)}<>}<> *
            c1::Chan{@S Assume{fnce(c1,28)}<>;;Guard{fnce(c2,27)}<>}<>
            & fnce(c1,28)
       |-   //fnce(c1,28).
            c2::Chan{@S ?v#%L(v);;%R}<>.
expect Valid.

checkentail c2::Chan{@S ?v#(1<=v & v<=3);;Assume{fnce(c2,27)}<>}<> *
            c1::Chan{@S emp}<>
            & fnce(c1,28)
       |-   //fnce(c1,28).
            c2::Chan{@S ?v#%L(v);;%R}<>.
expect Valid.
*/

/*
checkentail c2::Chan{@S ?v#(1<=v & v<=3);;Assume{fnce(c2,27)}<>}<> *
            c1::Chan{@S Assume{y>0}<>;;Guard{fnce(c2,27)}<>}<>
            // & fnce(c1,28)
       |-   //fnce(c1,28).
            c2::Chan{@S ?v#%L(v);;%R}<>.
expect Valid.
*/

/*
checkentail c2::Chan{@S ?v#(1<=v & v<=3);;Assume{fnce(c2,27)}<>}<> *
            c1::Chan{@S Assume{fnce(c1,28)}<>;;Guard{fnce(c2,27)}<>}<>
       |-    fnce(c1,28).
            // c2::Chan{@S ?v#%L(v);;%R}<>.
expect Valid.
*/
