# useless-3a.slk: FIXED

Why is residue present in (1) but not (2)


 <1>self::node<q>@M&{FLOW,(21,22)=__norm}[]
 inferred hprel: [p_23::node<q>@M * q::ll<>@M --> K(p_23)]
[[ COND ==>  InferHeap ==> ]]


Entail (2) : Valid. 

 <1>emp&{FLOW,(21,22)=__norm}[]
 inferred hprel: [self::node<q>@M * q::ll<>@M --> K(self)]
[[ COND ==>  InferHeap ==> ]]
 
=================================================================
#bt-left.slk

Entailing lemma sthn: Fail. (may) cause:OrR[Cannot infer heap and pure 2,valid]

bt-left-1.slk --lem-en-residue: OK
=================================================================
# rlseg.slk
---------------------------
one:

Entailing lemma lem_14: Fail. Details below:
         "->" implication: : Fail. (may) cause: q_75!=null & q_75!=self_lem_14 & self_lem_14!=null |-  p=self_lem_14. LOCS:[0;10;8;7] (may-bug)
         "<-" implication: : Fail. (may) cause:UnionR[Nothing_to_do?matching data with deriv self-rec LHS node
  Type: Root
  LHS: self_lem_14::rlseg<q_190>@M
  RHS: self_lem_14::node<_,p1_168>@M
 lhs_rest: q_190::node<_,p_189>@M *
  q_165::node<_,p_164>@M
 rhs_rest: emp,Nothing_to_do?matching data with deriv self-rec LHS node
  Type: Root
  LHS: self_lem_14::rlseg<q_220>@M
  RHS: self_lem_14::node<_,p1_200>@M
 lhs_rest: q_220::node<_,p_219>@M *
  q_196::node<_,p_195>@M
 rhs_rest: p1_200::rlseg<q_144>@M *
  q_144::node<_,p_198>@M]
---------------------
two: should be proved when one is proved

Entailing lemma two: Fail. Details below:
         "->" implication: : Fail. (may) cause:OrR[ true |-  p=self_two. LOCS:[7] (may-bug), true |-  p=self_two. LOCS:[0;7] (may-bug)]
         "<-" implication: : Valid.

=================================================================
# dseg.slk

three:

Entailing lemma two: Fail. Details below:
         "->" implication: : Fail. (may) cause:OrR[Cannot infer heap and pure 2,valid]
         "<-" implication: : Valid.

-------------------
=================================================================
# useless.slk

print_residue seems to print the last residue of 
lemma_infer. It seems lemma_infer is processed completely first.

GOT two outcomes:


!! fixpoint:[]
 <1>
    emp&self_lem_12=null&{FLOW,(21,22)=__norm}[]
    or emp&{FLOW,(21,22)=__norm}[]
    
 inferred hprel: [emp&p_74=null --> K(p_74); 
                  p_77::node<q_76>@M * q_76::ll<>@M --> K(p_77)]
[[ COND ==>  InferHeap ==> ||OR|| ==>  COND ==>  InferHeap ==> ]]
<2>
   emp&self_lem_12=null&{FLOW,(21,22)=__norm}[]
   or emp&{FLOW,(21,22)=__norm}[]
   
inferred hprel: [emp&p_74=null --> K(p_74); K(p_81) --> K(p_81)]

However, only one fix point. What happens to the other? Dropped?

[ G(self) ::= 
 self::node<q>@M * G(q)
 or emp&self=null
 ,
 K(p) ::= 
 p::node<q>@M * q::ll<>@M
 or emp&p=null
 ]

=================================================================
# dseg-1a.slk

resolvable by --dis-lem-rhs-unfold

lemma_safe "three" 
  self::dseg<pr,p,last> <->
      self::dseg<pr,p1,last2>*p1::dseg<last2,p,last>.

Why proving <- fails?

Entailing lemma three: Fail. Details below:
	 "->" implication: : Valid.
	 "<-" implication: : Fail. (may) cause:UnionR[AndR[ (p1_702!=null | (last=pr & p=p1_702)) |-  last=pr. LOCS:[12;1;0;7];  (self_three!=null | (last=last2_701 & p=self_three)) |-  p=self_three. LOCS:[12;1;0;7] (may-bug).],OrR[Cannot infer heap and pure 2,valid]]

=================================================================
# dseg-1b.slk

lemma_safe "last"
  self::dseg<pr,p,last> <-> self::dseg<pr,last,k>*last::node<_,k,p>.

-> seems invalid, in general.

Entailing lemma last: Fail. Details below:
	 "->" implication: : Fail. (may) cause:OrR[Cannot infer heap and pure 2,valid]
	 "<-" implication: : Valid.
=================================================================
# lseg.slk

resolvable by --dis-lem-rhs-unfold

pred lseg<p> == self=p 
  or self::node<_,q> * q::lseg<p>.

lemma_safe "three" 
  self::lseg<p> <-  self::lseg<p1>*p1::lseg<p>.

Entailing lemma three: Fail. Details below:
	 "->" implication: : Valid.
	 "<-" implication: : Fail. (may) cause:UnionR[ (self_three!=null | p=self_three) |-  p=self_three. LOCS:[1;0;6] (may-bug),OrR[Cannot infer heap and pure 2,valid]]
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
