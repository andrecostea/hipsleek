data node {
	int val; 
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> 
  inv n >= 0.

//(4)
checkentail x::node<aaa,q>*q::node<aaa,null> |- false.
expect Fail.
//expect Valid.
checkentail x::node<aaa,q>*q::node<aaa,null> |- emp.
print residue.
expect Valid.
expect_infer Valid R{x::node<bb,q>*q::node<bb,null>}.
expect_infer Valid RU{x::node<bb,q2>*q2::node<bb,null>}.
expect_infer Valid RE{x::node<bb,q2>*q2::node<bb,null>}.
expect_infer Valid R{x::node<bb,q>*q::node<bb,_>}.//Valid\
expect_infer Fail RU{x::node<bb,q>*q::node<bb,_>}.//Valid
expect_infer Fail RE{x::node<bb,q>*q::node<bb,_>}.//Valid
//expect_infer Valid R{x::node<bb,q1>*q1::node<bb,_>}.//Valid
//expect_infer Fail R{x::node<bb,q>*q::node<bb+1,_>}. //Invalid
//expect_infer Valid R{x::node<bb,_>*qq::node<bb,_>}. //Invalid
//expect_infer Valid R{x::node<bb,_>*q::node<bb,_>}. //Valid??


checkentail x>5 |- emp.
print residue.
expect_infer Valid R{x>5}.
expect_infer Valid R{x>0}.
expect_infer Fail R{x>7}.
expect_infer Valid RU{x=6}.
expect_infer Fail RU{x>0}.
expect_infer Valid RE{x>5}.
expect_infer Fail RE{x>8}.

/*
ex4f.slk

# new format

checkentail x::node<aaa,q>*q::node<aaa,null> |- emp.
print residue.
expect Valid.
expect_infer Valid R{x::node<bb,q>*q::node<bb,null>}. //Valid
expect_infer Valid R{x::node<bb,q>*q::node<bb,_>}.//Valid
expect_infer Valid R{x::node<bb,q1>*q1::node<bb,_>}.//Valid
expect_infer Fail R{x::node<bb,q>*q::node<bb+1,_>}. //Invalid
expect_infer Fail R{x::node<bb,_>*qq::node<bb,_>}. //Invalid
expect_infer Valid R{x::node<bb,_>*q::node<bb,_>}. //Valid??

*/
