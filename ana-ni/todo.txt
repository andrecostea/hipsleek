# ex2.ss -p hoo --ana-ni (FIXED)

int hoo(node x)
  infer [@ana_ni]
  requires x>1
  ensures true;
{
  int y = x.val;
  return y;
}

# relax bind_failure? change bind test to
      ....  |- x>1

(Cause of Bind Failure) List of Failesc Context: [FEC(1, 0, 0 )]
 Failed States:
 [
  Label: []
  State:
    fe_kind: MUST
    fe_name: separation entailment
    fe_locs: {
        fc_message: do_unmatched_rhs : x'::node<val_19_1683',next_19_1684'>@L(must)
        fc_current_lhs_flow: {FLOW,(6,10)=__Error#E}
      }
    [[ UnmatchedRHSData]]
  ]1 File "ex2-ptr.ss",Line:19,Col:10

Context of Verification Failure: ex2-ptr.ss_17:10_17:14
==========================================================================
# ex2a.ss --ana-ni

# Need to consider greatest fix-point compute..

[RELASS [R]: ( R(x)) -->  2<=x]

# Let us preserve x>=2
!!! top_down_fp:[]
!!! **pi.ml#754:>>>>>>>>>>> (bef postprocess): <<<<<<<<<
!!! **pi.ml#755:>>REL POST:  true
!!! **pi.ml#756:>>POST:  true
!!! **pi.ml#757:>>REL PRE :  true
!!! **pi.ml#758:>>PRE :  true
!!! **immutable.ml#62:imm + pure:[( true, true)]
!!! **immutable.ml#64:imm + pure:[( true, true)]
!!! **immutable.ml#62:imm + pure:[( true, true)]
!!! **immutable.ml#64:imm + pure:[( true, true)]
!!! **pi.ml#806:new_specs1:
[ EInfer @ana_ni[R]
   EBase 
     emp&R(x)&{FLOW,(4,5)=__norm#E}[]
     EBase 
       emp&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
       EAssume 
         htrue&{FLOW,(4,5)=__norm#E}[]
         struct:EBase 
                  htrue&{FLOW,(4,5)=__norm#E}[]]
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
