data node{
     int id;
}.


data String{
     int id;
}.

pred_prim Send{-%P}<>.

pred_prim Recv{+%P}<>.

pred_prim Chan{%P}<>.

/*
pred buyer_ch1<> == self::Chan{!xx:int#{xx::String<a> & a>0};!s1:int#{ s1 > 0};
								(!s2:int#{ s2 > 0} or !s3:int#{ s3 > 0});!s4:int#{ s4 > 0} }<>.

pred buyer_ch2<> == self::Chan{!xx:int#{xx::String<a> & a>0};!s1:int#{ s1 > 0};
								(!s2:int#{ s2 > 0} or !s3:int#{ s3 > 0});!s4:int#{ s4 > 0} }<>.
*/

pred buyer_ch1<> == self::Chan{!xx:int#{xx::String<a> & a>1};?s1:int#{ s1 > 2};!s4:int#{ s4 > 0} }<>.								
pred buyer_ch2<> == self::Chan{!xx:int#{xx::String<a> & a>2};?s1:int#{ s1 > 1};!s4:int#{ s4 > 3} }<>.

checkentail zz::buyer_ch1<>|- zz::buyer_ch2<>.

expect Valid.
print residue.

pred buyer_ch3<> == self::Chan{!xx:int#{xx::String<a> & a>1};(?s1:int#{ s1 > 2} or !s1:int#{ s1 > 0}) }<>.								
pred buyer_ch4<> == self::Chan{!xx:int#{xx::String<a> & a>2};(?s1:int#{ s1 > 1} or !s1:int#{ s1 > 3}) }<>.

checkentail zz::buyer_ch3<>|- zz::buyer_ch4<>.

expect Valid.
print residue.
