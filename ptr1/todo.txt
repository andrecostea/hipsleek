ex6b.ss (due to incomplete same_base computation)

# can we automatically determine ghost parameter 
  base=a-i, based on the values of the parameters a,i?

# can base be monomorphic recursive?

void init2(arrI a,int i)
  requires base::arr_seg<i,m> & a=base+i & m=10 & 0<=i & i<=m
  ensures  base::arr_seg_zero<i,m>;
{
Exception Failure("**context.ml#750:view matching..") Occurred!
===============================================================
# ex6a5.slk -dre "choose_c" -trace-log-num 1 (FIXED)

checkentail x::arr_seg<i+1,n> & r=x+i & r=x1+1 
 |-  [j] x1::arr_seg<j,n> & j=i+1.
print residue.

# to support view matching with arithmetic ..

Entail 2: EXCast. Failure("**context.ml#750:view matching..")
: no residue 

===============================================================
# ex6a5b.slk -dre "choose_c" 

checkentail x::arrI<5> & x=a+1
 |-  x2::arrI<j> & x2=a+1.

# alias set is coming from the right
  but does not work with ptr aritmetic
  (compare ex6a5c.slk)

(==context.ml#3471==)
choose_context@1
choose_context inp1 :LHS node: x::arrI<flted_24_45>@M
choose_context inp2 :RHS node: x2::arrI<j>@M
choose_context inp3 :LHS pure: x=1+a & flted_24_45=5
choose_context inp4 :RHS pure: x2=1+a
choose_context inp5 :right aliase:[]
choose_context@1 EXIT:[]

===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
