pred_prim Aseg<start:int, end:int>.
pred_prim Elem<start:int>.

infer[@arr_ba] base::Aseg<a,b> & a<b |- base::Elem<a>.

infer[@arr_ba] base::Elem<a> & a<b |- base::Aseg<a,b>.

infer[@arr_ba] base::Elem<a> & a<b & c<a & a<d |- base::Aseg<c,d>.

infer[@arr_ba] base::Elem<a> & c<a & a<d |- base::Aseg<c,d>.

// The example shows that why we need >= or <= to introduce gap
infer[@arr_ba] base::Elem<a> & a=d-1 & c<d |- base::Aseg<c,d>.  
