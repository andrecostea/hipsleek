data arrI {
  int val;
}.

relation Univ(int x).

checkentail x::arrI<m> & i<m & m<=n & Univ(m) |- x::arrI<mm> & mm=i+1 .
expect Valid.
print residue.

checkentail  i<m & m<=n & mm=m & Univ(m) |- mm=i+1 .
expect Valid.
print residue.

/*
ex6e3f4.slk 

checkentail  i<m & m<=n & mm=m & Univ(m) |- mm=i+1 .

 <1>emp&Univ(m) & mm=m & m<=n & i<m&{FLOW,(20,21)=__norm#E}[]

# can we add the instantiation m=i+1 after the proving?
  so that its universal instantiation value can be fixed
  by such proving..

-----

checkentail x::arrI<m> & i<m & m<=n & Univ(m) |- x::arrI<mm> & mm=i+1 .



 <1>emp&Univ(m) & m<=n & i<m & mm=m&{FLOW,(20,21)=__norm#E}[]
[[ Match(x,x)]]

# can we add the instantiation m=i+1 after the proving?
  so that its universal instantiation value can be fixed.

*/