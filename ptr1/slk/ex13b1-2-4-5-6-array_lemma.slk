data arrI {
  int val;
}.

pred arr_seg<i,n> == i=n & i>=0 & self!=null
  or x::arrI<_>*self::arr_seg<i+1,n> & x=self+i & i>=0
  inv n>=i & i>=0 & self!=null.

lemma_unsafe self::arr_seg<i,n> & i<mmm<=n 
     -> self::arr_seg<i,mmm>*self::arr_seg<mmm,n> .


//(2)
checkentail xx::arr_seg<i,n> & i<n |- xx::arr_seg<i+1,n>.
expect Valid.
print residue.

/*
//(4)
checkentail xx::arr_seg<i,n> & i+2<n |- xx::arr_seg<i+3,n>.
expect Valid.
print residue.

//(5)
checkentail xx::arr_seg<i,n> & i+2<n |- xx::arr_seg<i+2,n>.
expect Valid.
print residue.

//(6)
checkentail xx::arr_seg<i,n> & i+2<n |- xx::arr_seg<i+1,n>.
expect Valid.
print residue.

*/

/*
# ex13b1.slk

checkentail xx::arr_seg<i,n> & i<n |- xx::arr_seg<i+1,n>.

Validate 2: OK
Residue:
 <1>xx::arr_seg<i,mmm_144>@M&mmm_149=i+1 & mmm_149=mmm_144 & i<mmm_144 & 
                             mmm_144<=n & Univ(mmm_149) & Univ(mmm_144) & i<n&{FLOW,(20,21)=__norm#E}[]
[[ SEARCH ==>  COND ==>  (Lemma ==> lem_14(xx,xx)) ==>  SEARCH ==>  COND ==>  Match(xx,xx)]]

This example fail with --adhoc-7. Could it be due to 
the last match?




*/