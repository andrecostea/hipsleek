# ex13a.slk

// can we scedule a base-case-fold after view match failure?
// match and base-case-fold need to be both scheduled..

checkentail x::arr_seg<2,n> & n>=2  |- x::arr_seg<2,2> .
print residue.
expect Valid.

# ex13a.slk -dre "compute_action"

# schedule a base-case-fold instead of base-case-unfold ..

  COND =>[
   Prio:1
   Match =>
     Type: Root
     LHS: x::arr_seg<flted_13_47,n>@M
     RHS: x::arr_seg<flted_13_67,flted_13_66>@M
     root_inst: None
     lhs_rest: emp
     rhs_rest: emp
     alias set: [x]rhs_inst: []rhs_infer: None;
   Prio:3
   BaseCaseUnfold =>
     Type: Root
     LHS: x::arr_seg<flted_13_47,n>@M
     RHS: x::arr_seg<flted_13_67,flted_13_66>@M
     root_inst: None
     lhs_rest: emp
     rhs_rest: emp
     alias set: [x]rhs_inst: []rhs_infer: None
   ]
   ]

//(16)
checkentail x::arr_seg<1,n> & n>=2   |- x::arr_seg<2,2> * y1::arrI<_> & y1=x+1.
print residue.
expect Valid.

=================================================================
# ex14c.slk

Did we not use LHS /\ RHS |- x=y? where C= LHS & RHS?

       C |- x=y
  -------------------------------------match node
      x::arr<v1> |- y::arr<v2>

Can we prune out match of x,z and it is unlikely..

checkentail x::arrI<_> * y::arrI<_> & y=x+1 |- z::arrI<_> & z=x+1.
print residue.
expect Valid.


(==context.ml#3810==)
process_matches@1
process_matches inp1 :lhs_h: x::arrI<Anon_13>@M * y::arrI<Anon_14>@M
process_matches inp2 :matches:
[ Type: Root
 LHS: x::arrI<Anon_13>@M
 RHS: z::arrI<Anon_15>@M
 root_inst: None
 lhs_rest: y::arrI<Anon_14>@M
 rhs_rest: emp
 alias set: [y,x,z]rhs_inst: []rhs_infer: None, Type: Root
 LHS: y::arrI<Anon_14>@M
 RHS: z::arrI<Anon_15>@M
 root_inst: None
 lhs_rest: x::arrI<Anon_13>@M
 rhs_rest: emp
 alias set: [y,x,z]rhs_inst: []rhs_infer: None]
process_matches inp3 :rhs_node: z::arrI<Anon_15>@M
process_matches inp4 :rhs_rest: emp
process_matches@1 EXIT: Prio:-1
 SEARCH =>[
  Prio:1
  Match =>;
  Prio:1
  Match =>
  ]
=================================================================
# ex14b1.slk

# wrong pairing as did not take LHS & RHS when doing a
  fold where c has been instantiated.

!!! **context.ml#3928:compute_action (steps) :
 ### RHS Cand :[ x::arr_seg<i,n>@M]
 ### action :
 SEARCH =>[
  Prio:1
  Fold =>
    LHS: x::arrI<Anon_13>@M
    RHS: x::arr_seg<i,n>@M
  ]
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
=================================================================
