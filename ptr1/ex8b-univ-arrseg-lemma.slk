
data arrI {
  int val;
}.

pred arr_seg<i,n> == i=n & i>=0
  or xxx::arrI<_>*self::arr_seg<i+1,n> & xxx=self+i & i>=0
  inv BG([(xxx,d)], xxx=self+i & n>=i & d=n-i & i>=0).

relation Univ(int m).

//(1)
checkentail i<m & m<n & Univ(m) |- m=i+1.
expect Valid.

//(2)
/* ex8b -dre "filter_ante"

checkentail i<m & m<n & Univ(m) |- m=i+2.
expect Fail.

(====)
filter_ante@15
filter_ante inp1 : Univ(m) & m<n & i<m
filter_ante inp2 : m=i+1
filter_ante@15 EXIT: Univ(m) & m<n & i<m

X1:={[i,n]->[m]:i<m & m<=n & 0<=i};
Inst:={[i,n]->[m]:m=i+1};
Inst2:={[i,n]->[m]:m=i+2};
domain(X1);
domain(X1) subset domain(X1 intersection Inst);

*/

