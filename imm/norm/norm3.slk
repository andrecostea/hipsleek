data node{int val; node next;}. 

pred ll<n> == self=null & n=0 or
     self::node<_, q> * q::ll<n-1> & n>0
   inv n>=0.

//1
checkentail x::ll<n> |- x::ll<n>@A.
print residue.
expect Valid.

//2
checkentail x::ll<n> |- x::ll<n>.
print residue.
expect Valid.

//3
checkentail x::ll<n> * x::ll<n>@A |- x::ll<n>.
print residue.
expect Valid.

//4
checkentail x::ll<n> * x::ll<m>@A |- x::ll<m>.
print residue.
expect Valid.

//5
checkentail x::ll<n>@A * x::ll<m>@A |- x::ll<m>.
print residue.
expect Fail.

//6
checkentail x::ll<n> * y::ll<m>@A &x=y |- y::ll<n>.
print residue.
expect Valid.

//7
checkentail x::ll<n> * y::ll<m>@A &x=y & m>0 |- x::node<_,q> * q::ll<n-1>.
print residue.
expect Valid.

//8
checkentail x::ll<n> * y::node<_, q>@A * q::ll<m>@A &x=y |- y::ll<n>.
print residue.
expect Valid.

/*

how to treat this cases?

[Warning] False ctx

Entail 8: Valid.

Residue:
 <1>hfalse&false&{FLOW,(4,5)=__norm}[]
*/

//9
checkentail x::ll<n> * y::node<_, q>@A * q::ll<m>@A &x=y |- x::ll<m+1>.
print residue.
expect Valid.

/*
[Warning] False ctx

Entail 9: Valid.

Residue:
 <1>hfalse&false&{FLOW,(4,5)=__norm}[]
*/

