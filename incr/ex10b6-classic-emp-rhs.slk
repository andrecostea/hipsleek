/* singly linked lists */

/* representation of a node */
data node {
	int val;
	node next;
}.

HeapPred H(node a).

//(1)
//infer_exact [H] H(p) & p=null |- emp.
//print residue.
//expect_infer Valid R{emp}.
// <1>emp&p=null&{FLOW,(20,21)=__norm#E}[]
// inferred hprel: [H(p)&p=null --> emp&true]

infer_exact [H] H(p) |- emp.
print residue.

infer_exact [H] H(p) |- true.
print residue.

infer_inexact [H] H(p) |- true.
print residue.

infer_inexact [H] H(p) |- emp.
print residue.

/*
# ex10b6.slk

 infer_exact [H] H(p) |- emp.

# GOT below. Why did we not infer H(p) --> emp

Entail (2) : Fail.(may) cause: H(p)&{FLOW,(20,21)=__norm#E}[]: possible memory leak failure : residue is forbidden.

Residue:
 MaybeErr Context: 
   fe_kind: MAY
   fe_name: 
   fe_locs: {
     fc_message: memory leak
     fc_current_lhs_flow: {FLOW,(20,21)=__norm#E}
   }
 [[empty]]
 CEX:true



*/