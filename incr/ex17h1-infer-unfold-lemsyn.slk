
data node {
	int val;
	node next;
}.


pred lseg<p> == self = p
	or self::node<_, q> * q::lseg<p>
  inv true.

pred sll<> == self = null 
	or self::node<_, q> * q::sll<>
  inv true.


HeapPred H(node a).
//lemma_infer_pred [H] self::lseg<q> * H(q) -> self::sll<>.
// fail due to complex lemma
//lemma_infer_pred [H]  self::sll<> <- self::lseg<q> * H(q).
// Valid

lemma_infer_pred [H]  self::sll<> -> self::lseg<q> * H(q).
print residue.
/*
# ex17h.slk

lemma_infer_pred [H]  self::sll<> -> self::lseg<q> * H(q).

# Why is above not working?

Starting Omega.../usr/local/bin/oc

!!! WARNING logtime exception:0.000326
!!! WARNING logtime exception:0.0307exception in lemma "lem_14" check

Entailing lemma lem_14: Fail. (cex)(must) cause: exception in lemma proving


*/