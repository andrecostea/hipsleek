
--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) ...
Prover: OMEGA CALCULATOR
Type: Sat:  x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Sat:  x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Sat:  x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  b!=null
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Sat:  b!=null
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Sat:  b!=null
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Sat:  x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  a=p & b!=null
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Imply: ante: a=p & b!=null & x!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Sat:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & b!=null & x!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Imply: ante: x!=null & b!=null & b!=x
	     conseq:  q=x
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: x!=null & b!=null & b!=x
	     conseq:  q=x
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & b!=null & x!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Imply: ante: a=p & b!=null & x!=null & b!=x
	     conseq:  b=q
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & b!=null & x!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & b!=null & x!=null & b!=x
	     conseq:  b=q
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(1) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & b!=null & x!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) ...
Prover: CACHED
Type: Sat:  x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Sat:  x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Sat:  x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Sat:  b!=null
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Sat:  b!=null
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Sat:  b!=null
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Sat:  b!=null
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Sat:  x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: true
	     conseq:  true
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  a=p & x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & x!=null & b!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Sat:  a=p & x!=null & b!=null & b!=x
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & x!=null & b!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: x!=null & b!=null & b!=x
	     conseq:  q=x
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: x!=null & b!=null & b!=x
	     conseq:  q=x
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & x!=null & b!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Imply: ante: a=p & x!=null & b!=null & b!=x
	     conseq:  b=q
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & x!=null & b!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & x!=null & b!=null & b!=x
	     conseq:  b=q
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(2) 
Trace::[]

Prover: CACHED
Type: Imply: ante: a=p & x!=null & b!=null & b!=x
	     conseq:  a=p
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(3) ...
Prover: OMEGA CALCULATOR
Type: Sat:  tl!=x & (x!=null | tl=x)
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(3) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  tl=x & tl!=x
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(3) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  p=p_167 & self_168=x & tl=tl_169 & tl!=x & x!=null & (x_170!=null | 
tl_169=x_170)
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(3) 
Trace::[]

Prover: CACHED
Type: Sat:  p=p_167 & self_168=x & tl=tl_169 & tl!=x & x!=null & (x_170!=null | 
tl_169=x_170)
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(4) ...
Prover: OMEGA CALCULATOR
Type: Sat:  3<n & ((x!=null & 1<=n) | (tl=x & n=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(4) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  tl=x & n=1 & 3<n
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(4) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  n=flted_28_201+1 & p=p_198 & self_199=x & tl=tl_200 & 3<n & x!=null & 
((x_202!=null & 1<=flted_28_201) | (tl_200=x_202 & flted_28_201=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(4) 
Trace::[]

Prover: CACHED
Type: Sat:  n=flted_28_201+1 & p=p_198 & self_199=x & tl=tl_200 & 3<n & x!=null & 
((x_202!=null & 1<=flted_28_201) | (tl_200=x_202 & flted_28_201=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(4) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  tl_210=x_212 & flted_28_211=1 & n=flted_28_211+1 & p=p_208 & self_209=x & 
tl=tl_210 & 3<n & a=p_208 & b=x_212
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(4) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  flted_28_211=flted_28_225+1 & p_222=self_209 & self_223=x_212 & 
tl_210=tl_224 & n=flted_28_211+1 & p=p_208 & self_209=x & tl=tl_210 & 3<n & 
a=p_208 & b=x_212 & x_212!=null & ((x_226!=null & 1<=flted_28_225) | 
(tl_224=x_226 & flted_28_225=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(4) 
Trace::[]

Prover: CACHED
Type: Sat:  flted_28_211=flted_28_225+1 & p_222=self_209 & self_223=x_212 & 
tl_210=tl_224 & n=flted_28_211+1 & p=p_208 & self_209=x & tl=tl_210 & 3<n & 
a=p_208 & b=x_212 & x_212!=null & ((x_226!=null & 1<=flted_28_225) | 
(tl_224=x_226 & flted_28_225=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) ...
Prover: OMEGA CALCULATOR
Type: Sat:  1<n & ((x!=null & 1<=n) | (tl=x & n=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  tl=x & n=1 & 1<n
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  n=flted_28_259+1 & p=p_256 & self_257=x & tl=tl_258 & 1<n & x!=null & 
((x_260!=null & 1<=flted_28_259) | (tl_258=x_260 & flted_28_259=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: CACHED
Type: Sat:  n=flted_28_259+1 & p=p_256 & self_257=x & tl=tl_258 & 1<n & x!=null & 
((x_260!=null & 1<=flted_28_259) | (tl_258=x_260 & flted_28_259=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  tl_268=x_270 & flted_28_269=1 & n=flted_28_269+1 & p=p_266 & self_267=x & 
tl=tl_268 & 1<n & a=p_266 & b=x_270
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Sat:  flted_28_269=flted_28_283+1 & p_280=self_267 & self_281=x_270 & 
tl_268=tl_282 & n=flted_28_269+1 & p=p_266 & self_267=x & tl=tl_268 & 1<n & 
a=p_266 & b=x_270 & x_270!=null & ((x_284!=null & 1<=flted_28_283) | 
(tl_282=x_284 & flted_28_283=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: CACHED
Type: Sat:  flted_28_269=flted_28_283+1 & p_280=self_267 & self_281=x_270 & 
tl_268=tl_282 & n=flted_28_269+1 & p=p_266 & self_267=x & tl=tl_268 & 1<n & 
a=p_266 & b=x_270 & x_270!=null & ((x_284!=null & 1<=flted_28_283) | 
(tl_282=x_284 & flted_28_283=1))
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: CACHED
Type: Sat:  tl_268=x_270 & flted_28_269=1 & n=flted_28_269+1 & p=p_266 & self_267=x & 
tl=tl_268 & 1<n & a=p_266 & b=x_270
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Imply: ante: tl_268=x_270 & p=p_266 & self_267=x & tl=tl_268 & a=p_266 & b=x_270
	     conseq:  b=null
Result: false

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: CACHED
Type: Sat:  b!=null
Result: true

--------------
Proving Infor spec:None loc:(Line:9,Col:4) kind::SLEEK_ENT(5) 
Trace::[]

Prover: OMEGA CALCULATOR
Type: Imply: ante: tl_268=x_270 & flted_28_269=1 & n=flted_28_269+1 & p=p_266 & self_267=x & 
tl=tl_268 & 1<n & a=p_266 & b=x_270
	     conseq:  b!=null
Result: false
