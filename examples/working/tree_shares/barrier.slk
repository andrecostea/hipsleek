data cl {int val}.

macro L == (#,) .
macro R == (,#) .
//macro R2 == (@I,(,(@L,))).

/*lemma "splitnode" self::cl(f1)<v> * self::cl(f2)<v1> -> self::cl(f)<v> & f1+f2=f & v=v1 .
lemma "splitbarrier" self::b1n(f1)<v1,v2,v3,v4,v5,v6> * self::b1n(f2)<w1,w2,w3,w4,w5,w6> -> self::b1n(f)<v1,v2,v3,v4,v5,v6> & f1+f2=f & w1=v1 & w2=v2 & w3=v3 & w4=v4 & w5=v5 & w6=v6.
lemma "splitbarrier" self::b2n(f1)<v1,v2,v3,v4,v5,v6> * self::b2n(f2)<w1,w2,w3,w4,w5,w6> -> self::b2n(f)<v1,v2,v3,v4,v5,v6> & f1+f2=f & w1=v1 & w2=v2 & w3=v3 & w4=v4 & w5=v5 & w6=v6.
lemma "splitbarrier" self::b3n(f1)<v1,v2,v3,v4,v5,v6> * self::b3n(f2)<w1,w2,w3,w4,w5,w6> -> self::b3n(f)<v1,v2,v3,v4,v5,v6> & f1+f2=f & w1=v1 & w2=v2 & w3=v3 & w4=v4 & w5=v5 & w6=v6.
lemma "splitbarrier" self::b4n(f1)<v1,v2,v3,v4,v5,v6> * self::b4n(f2)<w1,w2,w3,w4,w5,w6> -> self::b4n(f)<v1,v2,v3,v4,v5,v6> & f1+f2=f & w1=v1 & w2=v2 & w3=v3 & w4=v4 & w5=v5 & w6=v6.
*/

Barrier b1n[2]<int state, cl x1, cl x2, cl y1, cl y2, cl i> == [
(0,1,[
 requires x1::cl(@@L)<A1>*x2::cl(@@L)<B1>*y1::cl(@@L)<C1>*y2::cl(@@L)<D1>*i::cl(@@L)<T1>*self::b1n(@@L)<0,x1,x2,y1,y2,i> 
	ensures x1::cl(@@L)<A1>*x2::cl(@@L)<B1>*y1::cl<C1>*i::cl(@@L)<T1>*self::b1n(@@L)<1,x1,x2,y1,y2,i>;,
 requires x1::cl(@@R)<A2>*x2::cl(@@R)<B2>*y1::cl(@@R)<C2>*y2::cl(@@R)<D2>*i::cl(@@R)<T2>*self::b1n(@@R)<0,x1,x2,y1,y2,i> 
	ensures x1::cl(@@R)<A2>*x2::cl(@@R)<B2>*y2::cl<D2>*i::cl(@@R)<T2>*self::b1n(@@R)<1,x1,x2,y1,y2,i>;]),	
 (1,2,[
 requires x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl<C>*i::cl(@@L)<T>*self::b1n(@@L)<1,x1,x2,y1,y2,i>&T<30 
	ensures x1::cl<A>*y1::cl(@@L)<C>*y2::cl(@@L)<D>*i::cl<T>*self::b1n(@@L)<2,x1,x2,y1,y2,i>&T<30;,
 requires x1::cl(@@R)<A>*x2::cl(@@R)<B>*y2::cl<D>*i::cl(@@R)<T>*self::b1n(@@R)<1,x1,x2,y1,y2,i>&T<30 
	ensures x2::cl<B>*y1::cl(@@R)<C>*y2::cl(@@R)<D>* self::b1n(@@R)<2,x1,x2,y1,y2,i>;]),
 (2,1,[
 requires x2::cl<B>*y1::cl(@@R)<C>*y2::cl(@@R)<D>*         self::b1n(@@R)<2,x1,x2,y1,y2,i> 
	ensures x1::cl(@@R)<A>*x2::cl(@@R)<B>*y2::cl<D>*i::cl(@@L)<T>*self::b1n(@@R)<1,x1,x2,y1,y2,i>;,
 requires x1::cl<A>*y1::cl(@@L)<C>*y2::cl(@@L)<D>*i::cl<T>*self::b1n(@@L)<2,x1,x2,y1,y2,i> 
	ensures x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl<C>*i::cl(@@R)<T>*self::b1n(@@L)<1,x1,x2,y1,y2,i>;]) ,
 (1,3,[
 requires x1::cl(@@L)<A>*x2::cl(@@L)<B>*i::cl(@@L)<T>*self::b1n(@@L)<1,x1,x2,y1,y2,i>& T>=30 
	ensures x1::cl(@@L)<A>*x2::cl(@@L)<B>*i::cl<T>*self::b1n(@@L)<3,x1,x2,y1,y2,i> & T>=30;, 
 requires x1::cl(@@R)<A>*x2::cl(@@R)<B>*i::cl(@@R)<T>*self::b1n(@@R)<1,x1,x2,y1,y2,i>& T>=30 
	ensures x1::cl(@@R)<A>*x2::cl(@@R)<B>         *self::b1n(@@R)<3,x1,x2,y1,y2,i>;])].
	

Barrier b3n[2]<int state, cl x1, cl x2, cl y1, cl y2, cl i> == [(0,1,[
 requires x1::cl(@@L)<A1>*x2::cl(@@L)<B1>*y1::cl(@@L)<C1>*y2::cl(@@L)<D1>*i::cl(@@L)<T1>*self::b3n(@@L)<0,x1,x2,y1,y2,i>  
	ensures x1::cl(@@L)<A1>*x2::cl(@@L)<B1>*y1::cl<C1>*i::cl(@@L)<T1>*self::b3n(@@L)<1,x1,x2,y1,y2,i> ;,
	
 requires x1::cl(@@R)<A2>*x2::cl(@@R)<B2>*y1::cl(@@R)<C2>*y2::cl(@@R)<D2>*i::cl(@@R)<T2>*self::b3n(@@R)<0,x1,x2,y1,y2,i>  
	ensures x1::cl(@@R)<A2>*x2::cl(@@R)<B2>*y2::cl<D2>*i::cl(@@R)<T2>*self::b3n(@@R)<1,x1,x2,y1,y2,i>;]),	
 (1,2,[
 requires x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl<C>*i::cl(@@L)<T>*self::b3n(@@L)<1,x1,x2,y1,y2,i>&T<40 
    ensures x1::cl<A>*y1::cl(@@L)<C>*y2::cl(@@L)<D>*i::cl<T>*self::b3n(@@L)<2,x1,x2,y1,y2,i>&T<30;,
 requires x1::cl(@@R)<A>*x2::cl(@@R)<B>*y2::cl<D>*i::cl(@@R)<T>*self::b3n(@@R)<1,x1,x2,y1,y2,i>&T<40 
    ensures x2::cl<B>*y1::cl(@@R)<C>*y2::cl(@@R)<D>*         self::b3n(@@R)<2,x1,x2,y1,y2,i>;]),
 (2,1,[
 requires x2::cl<B>*y1::cl(@@R)<C>*y2::cl(@@R)<D>*         self::b3n(@@R)<2,x1,x2,y1,y2,i> 
	ensures x1::cl(@@R)<A>*x2::cl(@@R)<B>*y2::cl<D>*i::cl(@@L)<T>*self::b3n(@@R)<1,x1,x2,y1,y2,i>;,
 requires x1::cl<A>*y1::cl(@@L)<C>*y2::cl(@@L)<D>*i::cl<T>*self::b3n(@@L)<2,x1,x2,y1,y2,i> 
	ensures x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl<C>*i::cl(@@R)<T>*self::b3n(@@L)<1,x1,x2,y1,y2,i>;]) ,
 (1,3,[
 requires x1::cl(@@L)<A>*x2::cl(@@L)<B>*i::cl(@@L)<T>*self::b3n(@@L)<1,x1,x2,y1,y2,i>& T>=30 
	ensures x1::cl(@@L)<A>*x2::cl(@@L)<B>*i::cl<T>*self::b3n(@@L)<3,x1,x2,y1,y2,i> & T>=30;, 
 requires x1::cl(@@R)<A>*x2::cl(@@R)<B>*i::cl(@@R)<T>*self::b3n(@@R)<1,x1,x2,y1,y2,i>& T>=30 
	ensures x1::cl(@@R)<A>*x2::cl(@@R)<B>         *self::b3n(@@R)<3,x1,x2,y1,y2,i>;])].
 
  
Barrier b2n[2]<int state,cl x1, cl x2, cl y1, cl y2, cl i> == [(0,1,[
 requires x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl(@@L)<C>*y2::cl(@@L)<D>*i::cl(@@L)<T>*self::b2n(@@L)<0,x1,x2,y1,y2,i> 
	ensures x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl<C>*i::cl(@@L)<T>*self::b2n(@@L)<1,x1,x2,y1,y2,i>;,
 requires x1::cl(@@R)<A>*x2::cl(@@R)<B>*y1::cl(@@R)<C>*y2::cl(@@R)<D>*i::cl(@@R)<T>*self::b2n(@@R)<0,x1,x2,y1,y2,i> 
	ensures x1::cl(@@R)<A>*x2::cl(@@R)<B>*y2::cl<D>*i::cl(@@R)<T>*self::b2n(@@R)<1,x1,x2,y1,y2,i>;]),	
 (1,2,[
 requires x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl<C>*i::cl(@@L)<T>*self::b2n(@@L)<1,x1,x2,y1,y2,i>&T<30 
	ensures x1::cl<A>*y1::cl(@@L)<C>*y2::cl(@@L)<D>*i::cl<T>*self::b2n(@@L)<2,x1,x2,y1,y2,i>&T<30;,
 requires x1::cl(@@R)<A>*x2::cl(@@R)<B>*y2::cl<D>*i::cl(@@R)<T>*self::b2n(@@R)<1,x1,x2,y1,y2,i>&T<30 
	ensures x2::cl<B>*y1::cl(@@L)<C>*y2::cl(@@R)<D>*         self::b2n(@@R)<2,x1,x2,y1,y2,i>;]),
 (2,1,[
 requires x2::cl<B>*y1::cl(@@R)<C>*y2::cl(@@R)<D>*         self::b2n(@@R)<2,x1,x2,y1,y2,i> 
	ensures x1::cl(@@R)<A>*x2::cl(@@R)<B>*y2::cl<D>*i::cl(@@L)<T>*self::b2n(@@R)<1,x1,x2,y1,y2,i>;,
 requires x1::cl<A>*y1::cl(@@L)<C>*y2::cl(@@L)<D>*i::cl<T>*self::b2n(@@L)<2,x1,x2,y1,y2,i> 
	ensures x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl<C>*i::cl(@@R)<T>*self::b2n(@@L)<1,x1,x2,y1,y2,i>;]) ,
 (1,3,[
 requires x1::cl(@@L)<A>*x2::cl(@@L)<B>*i::cl(@@L)<T>*self::b2n(@@L)<1,x1,x2,y1,y2,i>& T>=30 
	ensures x1::cl(@@L)<A>*x2::cl(@@L)<B>*i::cl<T>*self::b2n(@@L)<3,x1,x2,y1,y2,i> & T>=30;, 
 requires x1::cl(@@R)<A>*x2::cl(@@R)<B>*i::cl(@@R)<T>*self::b2n(@@R)<1,x1,x2,y1,y2,i>& T>=30 
	ensures x1::cl(@@R)<A>*x2::cl(@@R)<B>         *self::b2n(@@R)<3,x1,x2,y1,y2,i>;])].
 
 

Barrier b4n[2]<int state,cl x1, cl x2, cl y1, cl y2, cl i> == [(0,1,[
 requires x1::cl(@@L)<A1>*x2::cl(@@L)<B1>*y1::cl(@@L)<C1>*y2::cl(@@L)<D1>*i::cl(@@L)<T1>*self::b4n(@@L)<0,x1,x2,y1,y2,i> 
	ensures x1::cl(@@L)<A1>*x2::cl(@@L)<B1>*y1::cl<C1>*i::cl(@@L)<T1>*self::b4n(@@L)<1,x1,x2,y1,y2,i>;,
 requires x1::cl(@@R)<A2>*x2::cl(@@R)<B2>*y1::cl(@@R)<C2>*y2::cl(@@R)<D2>*i::cl(@@R)<T2>*self::b4n(@@R)<0,x1,x2,y1,y2,i> 
	ensures x1::cl(@@R)<A2>*x2::cl(@@R)<B2>*y2::cl<D2>*i::cl(@@R)<T2>*self::b4n(@@R)<1,x1,x2,y1,y2,i>;]),	
 (1,2,[
 requires x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl<C>*i::cl(@@L)<T>*self::b4n(@@L)<1,x1,x2,y1,y2,i>&T<40 
    ensures x1::cl<A>*y1::cl(@@L)<C>*y2::cl(@@L)<D>*i::cl<T>*self::b4n(@@L)<2,x1,x2,y1,y2,i>&T<40;,
 requires x1::cl(@@R)<A>*x2::cl(@@R)<B>*y2::cl<D>*i::cl(@@R)<T>*self::b4n(@@R)<1,x1,x2,y1,y2,i>&T<40 
    ensures x2::cl<B>*y1::cl(@@R)<C>*y2::cl(@@R)<D>*         self::b4n(@@R)<2,x1,x2,y1,y2,i>;]),
 (2,1,[
 requires x2::cl<B>*y1::cl(@@R)<C>*y2::cl(@@R)<D>*         self::b4n(@@R)<2,x1,x2,y1,y2,i> 
	ensures x1::cl(@@R)<A>*x2::cl(@@R)<B>*y2::cl<D>*i::cl(@@L)<T>*self::b4n(@@R)<1,x1,x2,y1,y2,i>;,
 requires x1::cl<A>*y1::cl(@@L)<C>*y2::cl(@@L)<D>*i::cl<T>*self::b4n(@@L)<2,x1,x2,y1,y2,i> 
	ensures x1::cl(@@L)<A>*x2::cl(@@L)<B>*y1::cl<C>*i::cl(@@R)<T>*self::b4n(@@L)<1,x1,x2,y1,y2,i>;]) ,
 (1,3,[
 requires x1::cl(@@L)<A>*x2::cl(@@L)<B>*i::cl(@@L)<T>*self::b4n(@@L)<1,x1,x2,y1,y2,i>& T>=30 
	ensures x1::cl(@@L)<A>*x2::cl(@@L)<B>*i::cl<T>*self::b4n(@@L)<3,x1,x2,y1,y2,i> & T>=30;, 
 requires x1::cl(@@R)<A>*x2::cl(@@R)<B>*i::cl(@@R)<T>*self::b4n(@@R)<1,x1,x2,y1,y2,i>& T>=30 
	ensures x1::cl(@@R)<A>*x2::cl(@@R)<B>         *self::b4n(@@R)<3,x1,x2,y1,y2,i>;])].
 