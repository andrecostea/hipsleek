data node { int val ; node next }.

pred ll<n> == self = null & n = 0
	or self::node<next = r> * r::ll<n - 1>
	inv n >= 0.

/*
//(1)
checkentail x::ll<n> |- x::node<_,_>.
print residue.
expect Fail.

//(2)
checkentail x::ll<n> |- x::ll<m>.
print residue.
expect Valid.

//(3)
checkentail x::ll(v)<n> |- x::ll(v)<m>.
print residue.
expect Valid.
*/

//(4)
checkentail x::node(@@L)<_,q> * q::ll(@@L)<n> |- x::ll(@@L)<m>.
print residue.
expect Valid.
