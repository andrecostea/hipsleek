data cl {int val;}.
macro L == (#,) .
macro R == (,#) .
macro LL == ((#,),).

 data node { int val ; node next }.

pred ll<n> == self = null & n = 0
	or self::node<next = r> * r::ll<n - 1>
	inv n >= 0.

//(1)
checkentail x::node<_,q>@M |-  x::node(@@LL)<_,q>@M.
print residue.
 //(1) valid v = full or v<full x(1-v) q (1-v) ll 
 //-> missing?
expect Valid.
