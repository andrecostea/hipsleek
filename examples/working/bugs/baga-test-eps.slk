data node {
  node next;
}.

// --eps

//Fail.Fail.Valid.Valid.Fail.Valid.
//Valid.Fail.Fail.
//Valid.Fail.Fail.Valid.Valid.Valid.

pred l3a<> == 
  self::node<q>*q::node<_>  & self=q
inv self!=null.

//(1) (3) valid
checkentail x::l3a<> |- false.
expect Valid.

pred l6<q:node> == 
  q::node<_> & self=null
  or self::node<r>*r::node<_> & r=q
inv q!=null.
// baga {q}

//(2) (10) Valid
checkentail x::l6<q> * y::l6<q> |- false.
expect Valid.


pred l7<q:node> == 
  self=null & q=null
  or self::node<r>*r::node<_> & r=q
inv true.

//(3) (13) Valid
checkentail x::l7<q> * x::l7<q> & x!=null |- q!=null.
expect Valid.

//(4) --eps
// (14) Valid
checkentail x::l7<q> * x::l7<q> & x!=null |- false.
expect Valid.

//(5) --eps
// (15) Valid
checkentail x::l7<q> * y::l7<q> & x!=null & y!=null |- false.
//expect Fail_Must.
expect Fail.
