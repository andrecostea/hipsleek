
data node2 {
	int val; 
	node2 next;	
}.

/* view for a doubly linked list with size */
pred dll<"n":n> == 
	self = null & ["n":n = 0] or 
	self::node2<_ , q> * q::dll<n1> & ["n":n1=n-1]
	inv true & ["n":n >= 0].

// Fail.Valid.Valid.Valid

/*
checkentail
  true
  |- emp & Term.
print residue.
expect Valid.


checkentail
  Loop
  |- emp & Term.
print residue.
expect Valid.

checkentail
  x::dll<m>@M &
  ["": x=x' & t_31'=0 & v_int_22_859'=1;
   "n":0<m] 
  |- emp & Term.
print residue.
expect Valid.

checkentail x::dll<m> |- m>=0.
print residue.
expect Valid.

checkentail x::dll<m> & x!=null |- true & ["n":m>0].
expect Valid.

(====)
omega_of_formula#8@19@18@7
omega_of_formula#8 inp1 : 
 AndList( "n":0<=n) 
omega_of_formula#8@19 EXIT ExceptionFailure("omega.ml: encountered AndList, should have been already handled")Occurred!

(==astsimp.ml#2115==)
ef_conv_disj@18@7
ef_conv_disj inp1 :[([], 
 AndList( "n":0<=n) )]
ef_conv_disj@18 EXIT: 
 AndList( "n":0<=n) 

[omega_of_formula@48.,Omega.simplify_ops,Omega.simplify,simplify_omega,ef_conv_disj,compute_view_x_formula,,norm_cview_decls,convert_data_and_pred_to_cast]

(==astsimp.ml#2115==)
ef_conv_disj@18@7
ef_conv_disj inp1 :[([], 
 AndList( "n":0<=n) )]
ef_conv_disj@18 EXIT: 
 AndList( "n":0<=n) 

*/


checkentail x::dll<m> |- true & ["n":m>=0].
expect Valid.

