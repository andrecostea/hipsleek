==============================================
Total number of errors: 10 in files:
  infer/infer1.slk infer/infer2.slk infer/infer8.slk 
  infer/infer13.slk infer/infer14.slk 
  ann1.slk 
  imm/imm1.slk imm/imm3.slk imm/imm-hard.slk imm-field/sleek02.slk.
====================================================================
20Jul2013 : more failures due to enabling filter_assumption; FIXED

========================================================s============
20Jul2013
Total number of errors: 9 in files:
  infer/infer8.slk infer/infer12.slk 
  infer/infer13.slk infer/infer14.slk
  ann1.slk
  imm/imm1.slk imm/imm3.slk imm/imm-hard.slk imm-field/sleek02.slk.
Total verification time: 5.76 second
====================================================================
27Jul
Total number of errors: 6 in files:
 error at: ../../modular_examples/selection-modular.ss delete_min
error at: ../../modular_examples/selection-modular.ss find_min
error at: ../../modular_examples/selection-modular.ss selection_sort
error at: ../../modular_examples/qsort-modular.ss append_bll
error at: ../../modular_examples/qsort-modular.ss partition
error at: ../../modular_examples/qsort-modular.ss qsort

# temporarily added --lda to disable aggressive labels
====================================================================
============================================================
Issues with run-fast-test imm,vperm,infinity, and parahip

# Bind failure with imm (some clash since now field-ann are turned on by default)

asankhs@loris-7:~/hg/sleekex$ ./hip examples/working/hip/imm/bigint_imm.ss -tp redlog --eps --esl -p sub_c

!!! Full processing file "examples/working/hip/imm/bigint_imm.ss"
Parsing file "examples/working/hip/imm/bigint_imm.ss" by default parser...

!!!  processing primitives "["prelude.ss"]
Starting Omega...oc
rl_input 2 = rlall((((flted_242_36 <> (v1 * v2))) or ((0 <> flted_242_36))))
Nested Timer(stop)
rl_input 2 = rlall(((((flted_242_36 <> (v1 * v2))) or ((0 > flted_242_36))) or ((0 <> flted_242_36))))
Nested Timer(stop)
rl_input 2 = rlall((((flted_208_53 <> (c + (v * d)))) or ((0 <> flted_208_53))))
Nested Timer(stop)
rl_input 2 = rlall(((((flted_208_53 <> (c + (v * d)))) or ((0 > flted_208_53))) or ((0 <> flted_208_53))))
Nested Timer(stop)

Checking procedure sub_c$node~node~int... 
( [(,1 ); (,2 ); (,1 ); (,2 )]) :examples/working/hip/imm/bigint_imm.ss:190: 18: bind: node  y'::node<val_190_1233'@L,next_190_1234'@A>@L cannot be derived from context


(Cause of Bind Failure):examples/working/hip/imm/bigint_imm.ss:190: 18:  List of Failesc Context: [FEC(1, 0, 0 )]
Failed States:
[
 Label: [(,1 ); (,2 ); (,1 ); (,2 )]
 State:
        fe_kind: MUST
        fe_name: separation entailment
        fe_locs: {
                  fc_message: infer_heap_node
                  fc_current_lhs_flow: {FLOW,(22,23)=__norm}}
 ]

!!! dumping for sub_c$node~node~int FAIL-1
!!!  
 id: 432<21; prover: OMEGA CALCULATOR; loc: examples/working/hip/imm/bigint_imm.ss_190:10_190:15; kind: BIND
 Imply: ante: c=c' & c<=1 & 0<=v2 & 0<=c & (c+v2)<=v1 & 0<=v1 & p_1548<=9 & 0<=p_1548 & 
p_1548=res & p_1548=val_190_1231' & v1=(10*v1_1550)+p_1548 & 0<=v1_1550
	     conseq:  v1_1550!=0
 res: false
 --------------------
!!!  
id: 22; caller: []; line: 190; classic: false; kind: [BIND,
Assign_Stmt,
Assign_Stmt,
Assign_Stmt,
Check_Specs]; hec_num: 5; evars: []; infer_vars: []; c_heap: emp
 checkentail x'::node<p_1548@L,q_1549@L>@M@ rem br[{1}] * 
q_1549::bigint<v1_1550>@L@ rem br[{438,439}]&(
([p_1548=v_int_190_1236' & c=c' & 0<=v1_1550 & v1=(10*v1_1550)+p_1548 & 
   c<=1 & 0<=v2 & 0<=c & (c+v2)<=v1 & 0<=v1 & p_1548<=9 & 0<=p_1548]
 [x=x' & x!=null][!(v_bool_189_1230')][!(v_bool_175_1228')][y=y' & y!=null]))&
{FLOW,(22,23)=__norm}[]
 |-  y'::node<val_190_1233'@L,next_190_1234'@A>@M@ rem br[{1}]&
{FLOW,(1,25)=__flow}[]. 
res:  failctx
         fe_kind: MUST
         fe_name: separation entailment
         fe_locs: {
                   fc_message: infer_heap_node
                   fc_current_lhs_flow: {FLOW,(22,23)=__norm}}
Procedure sub_c$node~node~int result FAIL-1


# Exception with vperm and parahip

- asankhs@loris-7:~/hg/sleekex$ ./hip examples/working/hip/vperm/mergesort.ss --ann-vp

!!! Full processing file "examples/working/hip/vperm/mergesort.ss"
Parsing file "examples/working/hip/vperm/mergesort.ss" by default parser...

!!!  processing primitives "["prelude.ss"]
Starting Omega...oc

!!! dumping for finalize on hipStop Omega... 28 invocations caught
(Program not linked with -g, cannot print stack backtrace)

Exception occurred: Invalid_argument("List.map2")
Error3(s) detected at main 

- asankhs@loris-7:~/hg/sleekex$ ./hip examples/working/hip/parahip/cell.ss 

!!! Full processing file "examples/working/hip/parahip/cell.ss"
Parsing file "examples/working/hip/parahip/cell.ss" by default parser...

!!!  processing primitives "["prelude.ss"]
Starting Omega...oc

!!! dumping for finalize on hipStop Omega... 27 invocations caught
(Program not linked with -g, cannot print stack backtrace)

Exception occurred: Invalid_argument("List.map2")

# Failure with infinity
./hip examples/working/hip/infinity/inf-selsort.ss --dsd
Omega Error format: exists(mx_1425:mx_1425+(\inf)=0)
Omega Error format: exists(mx_1425:mx_1425+(\inf)=0)
Omega Error format: exists(mx_1469:mx_1469+(\inf)=0)
Omega Error format: exists(mx_1469:mx_1469+(\inf)=0)

( [(,0 ); (,1 )]) :examples/working/hip/infinity/inf-selsort.ss:26: 13: Postcondition cannot be derived from context


(Cause of PostCond Failure):examples/working/hip/infinity/inf-selsort.ss:26: 13:  List of Partial Context: [PC(1, 0)]
Failed States:
[
 Label: [(,0 ); (,1 )]
 State:
        fe_kind: MAY
        fe_name: logical bug
        fe_locs: {
                  fc_message: failed in entailing pure formula(s) in conseq
                  fc_current_lhs_flow: {FLOW,(22,23)=__norm}}
 ]
Successful States:


Context of Verification Failure: 1 File "examples/working/hip/infinity/inf-selsort.ss",Line:26,Col:13
Last Proving Location: 1 File "examples/working/hip/infinity/inf-selsort.ss",Line:36,Col:10

ERROR: at examples/working/hip/infinity/inf-selsort.ss_26:13_26:58 
Message: Post condition cannot be derived by the system.
 
Procedure find_min$node FAIL-2

Exception Failure("Post condition cannot be derived by the system.") Occurred!
(Program not linked with -g, cannot print stack backtrace)

Error(s) detected when checking procedure find_min$node

!!! dumping for find_min$node FAIL2
Checking procedure selection_sort$node... ^[[AOmega Error format: exists(mx_1559:mx_1559+(\inf)=0)
Omega Error format: exists(mx_1559:mx_1559+(\inf)=0)
Omega Error format: exists(mx_1559:mx_1559+(\inf)=0)
Omega Error format: exists(mx_1559:mx_1559+(\inf)=0)
Omega Error format: exists(mx_1559:mx_1559+(\inf)=0)
Omega Error format: exists(mx_1559:mx_1559+(\inf)=0)
Omega Error format: exists(mx_1570:mx_1570+(\inf)=0)
Omega Error format: exists(mx_1591:mx_1591+(\inf)=0)
Omega Error format: exists(mx_1591:mx_1591+(\inf)=0)
Omega Error format: exists(mx_1591:mx_1591+(\inf)=0)
Omega Error format: exists(mx_1591:mx_1591+(\inf)=0)
Omega Error format: exists(mx_1570:mx_1570+(\inf)=0)
Omega Error format: exists(mx_1619:mx_1619+(\inf)=0)
Omega Error format: exists(mx_1619:mx_1619+(\inf)=0)

( [(,0 ); (,1 ); (,1 ); (,2 )]) :examples/working/hip/infinity/inf-selsort.ss:63: 9: Postcondition cannot be derived from context


(Cause of PostCond Failure):examples/working/hip/infinity/inf-selsort.ss:63: 9:  List of Partial Context: [PC(1, 0)]
Failed States:
[
 Label: [(,0 ); (,1 ); (,1 ); (,2 )]
 State:
        fe_kind: MAY
        fe_name: logical bug
        fe_locs: {
                  fc_message: failed in entailing pure formula(s) in conseq
                  fc_current_lhs_flow: {FLOW,(22,23)=__norm}}
 ]
Successful States:


Context of Verification Failure: 1 File "examples/working/hip/infinity/inf-selsort.ss",Line:63,Col:9
Last Proving Location: 1 File "examples/working/hip/infinity/inf-selsort.ss",Line:76,Col:11

ERROR: at examples/working/hip/infinity/inf-selsort.ss_63:9_63:26 
Message: Post condition cannot be derived by the system.
 
Procedure selection_sort$node FAIL-2

Exception Failure("Post condition cannot be derived by the system.") Occurred!
(Program not linked with -g, cannot print stack backtrace)


# Failure with imm

====================================================================
2Aug2013

Total number of errors: 11 in files:
  infer/infer7.slk infer/infer8.slk infer/infer10.slk infer/infer13.slk infer/infer14.slk infer/infer15.slk ann1.slk imm/imm1.slk imm/imm3.slk imm/imm-hard.slk imm-field/sleek02.slk.
Total verification time: 6.60 second
	Time spent in main process: 4.65 second
	Time spent in child processes: 1.95 second
	Number of false contexts: 0
====================================================================
Total number of errors: 7 in files:
  infer/infer8.slk infer/infer13.slk ann1.slk imm/imm1.slk imm/imm3.slk imm/imm-hard.slk imm-field/sleek02.slk.
Total verification time: 5.71 second
====================================================================
-tp mona
Total number of errors: 11 in files:
  infer/infer8.slk(27) infer/infer10.slk(9,10,12) infer/infer12.slk(1,15) infer/infer13.slk(5) imm/imm1.slk(2) imm/imm3.slk(6) imm/imm-hard.slk(11) imm-field/sleek01.slk(14) imm-field/sleek02.slk(2,8) imm-field/sleek03.slk(3,5,6,8,9,11,12) infinity.slk(3,7,8,9,10,11,13,14,15,16,18,21,22,24,26,27,28,30,31,32,33,34,35,36,37,38,39,42,43,44,46,47,48,52,53,55,56,57,58,59,62,63,64,66,67,68,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121).

Total number of errors: 11 in files:
  infer/infer8.slk(27) infer/infer10.slk(9,10,12) infer/infer12.slk(1,15) infer/infer13.slk(5) imm/imm1.slk(2) imm/imm3.slk(6) imm/imm-hard.slk(11) imm-field/sleek01.slk(14) imm-field/sleek02.slk(2,8) imm-field/sleek03.slk(3,5,6,8,9,11,12) infinity.slk(3,7,8,9,10,11,13,14,15,16,18,21,22,24,26,27,28,30,31,32,33,34,35,36,37,38,39,42,43,44,46,47,48,52,53,55,56,57,58,59,62,63,64,66,67,68,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121).
====================================================================
Total number of errors: 8 in files: --tp mona
  infer/infer8.slk(27) infer/infer12.slk(15) infer/infer13.slk(5) imm/imm1.slk(2) imm/imm3.slk(6) imm/imm-hard.slk(11) imm-field/sleek02.slk(2,8) 
  infinity.slk(4,46,49,52,54,55,56,60,61,62,63,65,67,71,75,79,80).
  ---> 4 & 46
Total verification time: 8.38 second

  infer/infer8.slk(27) infer/infer12.slk(15) 
  n<0 is false in MONA

run-fast-test  script miscounting infinity.slk due to

Entailment Fail. 
Entail 45Failure("Mona translation failure!!\nError in file monatemp line  column ")
====================================================================
../../sleek sleek/sleek2.slk --dump-proof -tp z3

- raw proof not logged for z3
   (using old simplify result!)
- z3 count not tabulated
====================================================================
../../sleek sleek/sleek2.slk --dump-proof -tp redlog

- raw proof not logged for redlog
   (using old simplify result!)
- redlog count not tabulated
- redlog is invoking oc
   (should use -tp ocred for combination)
====================================================================
Total number of errors: 7 in files:
  infer/infer2.slk(3,7,8) infer/infer8.slk(30) infer/infer9.slk(3,4,5) imm/imm1.slk(2) imm/imm3.slk(6) imm/imm-hard.slk(11) imm-field/sleek02.slk(2,8).
Total verification time: 6.18 second
	Time spent in main process: 4.76 second
	Time spent in child processes: 1.42 second
	Number of false contexts: 0
====================================================================
# run-fase-test lemmas

Did we pass these tests?

Starting sleek-lemmas tests:
Checking ll.slk (runs with extra options:  --elp )
Unexpected result with : ll.slk (failed check(s): ) 
Checking sort.slk (runs with extra options:  --elp )
Checking lseg.slk (runs with extra options:  --elp )
Unexpected result with : lseg.slk (failed check(s): ) 
Checking lseg_case.slk (runs with extra options:  --elp )
Unexpected result with : lseg_case.slk (failed check(s): ) 
====================================================================
Total number of errors: 2 in files:
  baga-test-eps.slk({E12#Fail},{E9#Fail}) baga-test.slk({E12#Fail},{E9#Fail}).
Total verification time: 0.00 second
# bugs/baga-test-fail.slk

data node {
  node next;
}.

pred l6<q:node> == 
  q::node<_> & self=null
  or self::node<r>*r::node<_> & r=q
inv q!=null.
// baga {q}

// (9) Fail
checkentail x::l6<_> * x::l6<_> |- false.

//checkentail x::l6<_> * y::l6<_> & x=y |- false.

checkentail x::l6<q> * y::l6<q>  |- false.

checkentail x::l6<_> * y::l6<_> |- x::l6<a>.

checkentail x::l6<_> * y::l6<_> |- y::l6<a>.

checkentail x::l6<_> * x::l6<_> |- x::l6<a>.
====================================================================
Why are there some infer bugs?

--eci
  infer/infer1.slk({E12#Valid},{E13#Valid}) infer/infer5.slk({E1#Valid}) 
infer/infer7.slk({E2#Valid},{E3#Valid},{E4#Valid},{E8#Valid}) 
infer/infer8.slk({E11#Valid},{E20#Valid},{E21#Valid}) 
infer/infer9.slk({E1#Valid},{E2#Valid},{E9#Valid}) 
infer/infer12.slk({E16#Valid}) 
infer/infer14.slk({E10#Valid},{E23#Valid},{E25#Valid},{E26#Valid},{E27#Valid},{E28#Valid},{E7#Valid}).
  
--dci
 infer/infer1.slk({E12#Valid},{E13#Valid}) infer/infer5.slk({E1#Valid}) 
infer/infer7.slk({E2#Valid},{E3#Valid},{E4#Valid},{E8#Valid}) 
infer/infer8.slk({E11#Valid},{E20#Valid},{E21#Valid}) 
infer/infer9.slk({E1#Valid},{E2#Valid},{E9#Valid}) 
infer/infer12.slk({E16#Valid}) 
infer/infer14.slk({E10#Valid},{E23#Valid},{E25#Valid},{E26#Valid},{E27#Valid},{E28#Valid},{E7#Valid}) 

lemmas/lseg.slk({L2#Valid})
====================================================================
-flags "--eci" lead to following bugs not present without (FIXED)

 error at: append.ss append
error at: append-tail.ss append
error at: bubble.ss bubble
error at: cll.ss insert
error at: cll.ss count_rest
error at: insertion.ss insert
error at: merge.ss merge_sort
error at: merge.ss insert
error at: qsort.ss append_bll
error at: qsort.ss qsort
error at: selection.ss find_min
error at: selection.ss delete_min
error at: selection.ss selection_sort
====================================================================
bug from lemma proving?

Total number of errors: 1 in files:
 error at: cll.ss insert.
====================================================================
--dd-trace

Total verification time: 275.33 second
	Time spent in main process: 193.21 second
	Time spent in child processes: 82.12 second
	Number of false contexts: 425

--dd-dis-trace
====================================================================
# rlseg.slk contains a complex lemma

  (see lemma/bugs/rlc.slk)

  How to trigger complex lemma?
====================================================================
--dis-imm (with dis-early-contra)

Total number of errors: 11 in files:
  infer/infer1.slk({E10#Valid},{E8#Valid}) infer/infer5.slk({E4#Valid}) infer/infer7.slk({E5#Fail}) infer/infer8.slk({E17#Fail},{E26#Fail}) infer/infer9.slk({E6#Fail},{E8#Fail}) infer/infer13.slk({E1#Valid},{E2#Valid},{E3#Valid},{E4#Valid}) infer/infer14.slk({E11#Valid},{E13#Valid},{E14#Valid},{E16#Valid},{E17#Valid},{E18#Valid},{E3#Valid}) infer/infer15.slk({E1#Valid}) lemmas/lseg.slk({L1#Valid},{L2#Valid}) lemmas/rlseg.slk({L3#Valid}) lemmas/app-tail.slk({E1#Valid}).
Total verification time: 0.00 second


====================================================================
sleek --eps why eps trigger so many more failures?

baga-test.slk({E15#Fail}) : Expected VALID (w/wo --eps)
--dis-early-contra for --dis-imm
Total number of errors: 20 in files:


infer/infer1.slk({E6#Valid}): infer_collect_hp

 infer/infer2.slk({E5#Valid}): infer_collect_hp

 infer/infer5.slk({E4#Valid}): infer_collect_hp

 infer/infer6.slk({E1#Valid}): infer_collect_hp

 infer/infer7.slk({E6#Valid},{E7#Valid}): infer_pure

 infer/infer8.slk({E10#Valid},{E12#Valid},{E14#Valid},{E18#Valid},{E19#Valid},{E22#Valid},{E23#Valid})

 infer/infer9.slk({E7#Valid})

 infer/infer10.slk({E1#Valid},{E2#Valid})


 infer/infer14.slk({E20#Valid},{E21#Valid},{E24#Valid},{E5#Valid},{E8#Valid})

 infer/infer15.slk({E2#Valid},{E3#Valid},{E4#Valid},{E6#Valid},{E7#Valid}) 

infinity.slk({E77#Valid},{E78#Valid})
inflem.slk({E2#Valid}) 

lemmas/lseg.slk({L4#Valid}) 
lemmas/lseg1.slk({L1#Valid}) 
lemmas/rlseg.slk({L1#Valid},{L2#Valid},{L3#Valid}) 
lemmas/lemma-fold.slk({E1#Valid},{E3#Valid},{E5#Valid}) 
lemmas/rd-lem-1.slk({L2#Valid}) 
lemmas/app-tail.slk({E1#Valid}) 
lemmas/dseg1.slk({L1#Valid}).

--eps --dis-imm

Total number of errors: 18 in files:
  baga-test.slk({E15#Fail}) infer/infer1.slk({E8#Valid}) infer/infer5.slk({E3#Fail}) infer/infer7.slk({E5#Fail}) infer/infer8.slk({E14#Valid},{E17#Fail},{E23#Valid}) infer/infer9.slk({E6#Fail},{E8#Fail}) infer/infer13.slk({E1#Valid},{E2#Valid},{E4#Valid}) infer/infer14.slk({E11#Valid},{E13#Valid},{E14#Valid},{E16#Valid},{E18#Valid},{E21#Valid},{E24#Valid},{E3#Valid}) infer/infer15.slk({E1#Valid},{E2#Valid}) infinity.slk({E77#Valid},{E78#Valid}) inflem.slk({E2#Valid}) lemmas/lseg.slk({L4#Valid}) lemmas/lseg1.slk({L1#Valid}) lemmas/rlseg.slk({L1#Valid},{L2#Valid},{L3#Valid}) lemmas/lemma-fold.slk({E1#Valid},{E3#Valid},{E5#Valid}) lemmas/rd-lem-1.slk({L2#Valid}) lemmas/app-tail.slk({E1#Valid}) lemmas/dseg1.slk({L1#Valid}).

sleek --eps
Total number of errors: 10 in files:
  baga-test.slk({E15#Fail}) infinity.slk({E77#Valid},{E78#Valid}) inflem.slk({E2#Valid}) lemmas/lseg.slk({L4#Valid}) lemmas/lseg1.slk({L1#Valid}) lemmas/rlseg.slk({L1#Valid},{L2#Valid},{L3#Valid}) lemmas/lemma-fold.slk({E1#Valid},{E3#Valid},{E5#Valid}) lemmas/rd-lem-1.slk({L2#Valid}) lemmas/app-tail.slk({E1#Valid}) lemmas/dseg1.slk({L1#Valid}).

sleek --eps --dis-imm
Total number of errors: 10 in files:
  baga-test.slk({E15#Fail}) infinity.slk({E77#Valid},{E78#Valid}) inflem.slk({E2#Valid}) lemmas/lseg.slk({L4#Valid}) lemmas/lseg1.slk({L1#Valid}) lemmas/rlseg.slk({L1#Valid},{L2#Valid},{L3#Valid}) lemmas/lemma-fold.slk({E1#Valid},{E3#Valid},{E5#Valid}) lemmas/rd-lem-1.slk({L2#Valid}) lemmas/app-tail.slk({E1#Valid}) lemmas/dseg1.slk({L1#Valid}).
====================================================================
sleek
Starting hip-sleek tests:
Total number of errors: 4 in files:
  lemmas/rlseg.slk({L3#Valid}) lemmas/lseg_case.slk({L1#Valid},{L2#Valid},{L3#Valid},{L4#Valid},{L6#Valid}) lemmas/sll_tailL.slk({L1#Valid},{L2#Valid}) lemmas/dseg-new.slk({L2#Valid}).

sleek --eps (--dis-imm)
Total number of errors: 7 in files:
  baga-test.slk({E15#Fail}) infinity.slk({E77#Valid},{E78#Valid}) inflem.slk({E2#Valid}) lemmas/rlseg.slk({L3#Valid}) lemmas/lseg_case.slk({L1#Valid},{L2#Valid},{L3#Valid},{L4#Valid},{L6#Valid}) lemmas/sll_tailL.slk({L1#Valid},{L2#Valid}) lemmas/dseg-new.slk({L2#Valid}).
====================================================================
        ["lemmas/lseg_case.slk", " --elp  --lem-en-rhs-unfold ", "Valid.Valid.Valid.Valid.Valid.Valid.", ""],


lemma_safe "V1" self::lseg<n, p> & n = a + b & a,b >=0 ->  self::lseg<a, r> * r::lseg<b, p>.

lemma_safe "V2" self::lseg<n, p> &  n = a + b & a,b >=0 <- self::lseg<a, r> * r::lseg<b, p>.

lemma_safe "V3" self::lseg<n, p> &  n = a + b & a,b >=0 <-> self::lseg<a, r> * r::lseg<b, p>.

lemma_safe "V4" self::lseg<a, r> * r::lseg<b, p> & n = a + b & a,b >=0 -> self::lseg<n, p>.

lemma_safe "V5" self::lseg<a, r> * r::lseg<b, p> & n = a + b & a,b >=0 <- self::lseg<n, p>.
/* 
  forall a,b. self::lseg<n, p> & n = a + b & a,b >=0 
   -->  self::lseg<a, r> * r::lseg<b, p>
*/

lemma_safe "V6" self::lseg<a, r> * r::lseg<b, p> & n = a + b & a,b >=0 <-> self::lseg<n, p>.

Entailing lemma V1: Valid.

Valid Lemmas : [V1:==>] added to lemma store.

Entailing lemma V2: Valid.

Valid Lemmas : [V2:<==] added to lemma store.

!!! 
Entailing lemma V3: Fail. Details below:
	 "==>" implication: : Fail. (may) cause: OrR[residue is forbidden.(2),valid]
	 "<==" implication: : Valid.

Failed to prove V3:<==> in current context.
Removing invalid lemma ---> lemma store restored.
// fail

Entailing lemma V4: Valid.

Valid Lemmas : [V4:==>] added to lemma store.

!!! WARNING : changing lemma from <- to -> 
Entailing lemma V5: Valid.

Valid Lemmas : [V5:<==] added to lemma store.

!!! WARNING : split equiv lemma into two -> lemmas 
Entailing lemma V6: Valid.

====================================================================
Removing --lem-en-rhs-unfold cases ..

Total number of errors: 3 in files:
  lemmas/rlseg.slk({L3#Valid}) lemmas/lseg_case.slk({L3#Valid}) lemmas/dseg-new.slk({L2#Valid}).

lemmas/lseg_case.slk({L3#Valid})
--------------------------------
lemma_safe "V3" self::lseg<n, p> &  n = a + b & a,b >=0 <-> self::lseg<a, r> * r::lseg<b, p>.
--> failed

lemmas/dseg-new.slk({L2#Valid}).
--------------------------------
lemma_safe "2" self::rlseg<rm> <- exists lm: self::dseg<lm,rm,last>.

ntailing lemma 2: Fail. (may) cause: UnionR[ ((p_259!=null | (last_261=self_2 & p_259=rm))) & self_2!=null |-  rm=self_2. LOCS:[1;0;10;15] (may-bug),Nothing_to_do? 
  Type: WArg
  LHS: p_298::dseg<self_294,rm_295,last_296>@M
  RHS: self_2::rlseg<q_222>@M
 lhs_rest: self_2::node<_,lm_293,p_298>@M
 rhs_rest: 
  q_222::node<_,_,rm_301>@M]

Failed to prove 2:<== in current context.
Removing invalid lemma ---> lemma store restored.

-------------------------------------------------------------
lemmas/rlseg.slk({L3#Valid})

lemma_safe "three" self::node<_,q>*q::rlseg<p>  <-> self::rlseg<p1>* p1::node<_,p>.

Entailing lemma three: Fail. Details below:
	 "==>" implication: : Fail. (may) cause: OrR[UnionR[residue is forbidden.(2),residue is forbidden.(2)],valid]
	 "==>" implication: : Valid.
====================================================================
sleek
  lemmas/rlseg.slk({L3#Valid}).

--eps
  baga-test.slk({E15#Fail}) infinity.slk({E77#Valid},{E78#Valid}) inflem.slk({E2#Valid}) lemmas/rlseg.slk({L3#Valid}).

# baga-test-eps.slk --eps

Unexpected: 13 14 15 

# baga-test-eps.slk --en-acc-fold/--dis-acc-fold

Unexpected: 3 15 

--dis-acc-fold cause the following issues..

Total number of errors: 3 in files:
  baga-test-eps.slk(no result (!!!check script options, provers, etc)) 
  baga-test.slk({E3#Valid}) 
  imm/imm-hard.slk(no result (!!!check script options, provers, etc)).

# baga-test-eps.slk --inv-baga

Unexpected: 3 10 13 15 
====================================================================
# baga-test-eps.slk

in new smt2014 branch, unsat is not being detected
in two examples below. I think this is due to new unsat
we currently have? Please make the new unsat into an option
that is disabled by default, if this is the case.

pred l3a<> == 
  self::node<q>*q::node<_>  & self=q
inv self!=null.

Why is UNSAT on lhs not being detected?

//(1) (3) valid
checkentail x::l3a<> |- false.
expect Valid.

pred l7<q:node> == 
  self=null & q=null
  or self::node<r>*r::node<_> & r=q
inv true.

//(5) --eps
// (15) Valid
checkentail x::l7<q> * y::l7<q> & x!=null & y!=null |- false.
expect Valid.

====================================================================

sleek --eps 

#loop 

Checking lemmas/odd-lseg.slk (runs with extra options:  
   --elp --dis-lem-gen )
Unexpected result with : baga-test.slk (failed check(s): {E15#Fail}) 
Unexpected result with : infinity.slk (failed check(s): {E77#Valid},{E78#Valid})

====================================================================

Total number of errors: 6 in files:
  inflem.slk({E2#Valid}) 
  lemmas/sort2.slk({L10#Valid},{L2#Valid},{L3#Valid},{L4#Valid},{L5#Valid},{L7#Valid},{L8#Valid}) 
  lemmas/app-tail.slk({E1#Valid}) 
  lemmas/ll.slk({E1#Valid}) 
  lemmas/ll_tail.slk({E2#Valid}) 
  lemmas/dseg-new.slk({L1#Valid}).


--dis-baga-xpure
Total number of errors: 7 in files:
  baga-test.slk({E15#Valid}) 
  inflem.slk({E2#Valid}) // lemma not proven
  lemmas/sort2.slk({L10#Valid},{L2#Valid},{L3#Valid},{L4#Valid},{L5#Valid},{L7#Valid},{L8#Valid}) 
  lemmas/app-tail.slk({E1#Valid}) 
  lemmas/ll.slk({E1#Valid}) 
  lemmas/ll_tail.slk({E2#Valid}) 
  lemmas/dseg-new.slk({L1#Valid}).

--imm
Total number of errors: 7 in files:
  baga-test.slk({E15#Valid}) 
  inflem.slk({E2#Valid}) 
  lemmas/sort2.slk({L10#Valid},{L2#Valid},{L3#Valid},{L4#Valid},{L5#Valid},{L7#Valid},{L8#Valid}) 
  lemmas/app-tail.slk({E1#Valid}) 
  lemmas/ll.slk({E1#Valid}) 
  lemmas/ll_tail.slk({E1#Valid},{E2#Valid}) 
  lemmas/dseg-new.slk({L1#Valid}).

-- default branch
Total number of errors: 1 in files:
  lemmas/rlseg.slk({L3#Valid}).


Total number of errors: 14 in files:
  cll-d.slk({E1#Valid}) sleek3.slk({E1#Valid}) sleek9.slk({E3#Valid},{E4#Valid}) baga-test.slk({E15#Valid},{E3#Valid}) baga-test-2.slk({E3#Valid}) infer/app-inv.slk({E1#Valid}) infer/app-inv2.slk({E1#Valid}) infer/infer5a.slk({E2#Valid}) inflem.slk({E2#Valid}) lemmas/sort2.slk({L10#Valid},{L2#Valid},{L3#Valid},{L4#Valid},{L5#Valid},{L7#Valid},{L8#Valid}) lemmas/app-tail.slk({E1#Valid}) lemmas/ll.slk({E1#Valid}) lemmas/ll_tail.slk({E2#Valid}) lemmas/dseg-new.slk({L1#Valid}).

====================================================================
# hip --eps --baga-xpure

rb.ss (very long)
Total number of errors: 22 in files:
.
Total verification time: 1573.67 second
	Time spent in main process: 1324.09 second
	Time spent in child processes: 249.58 second
	Number of false contexts: 383

Checking ../../modular_examples/dll-modular.ss (runs with extra options: --overeps)
Checking ../../modular_examples/selection-modular.ss (runs with extra options: --overeps --lda)
Checking ../../modular_examples/qsort-modular.ss (runs with extra options: --overeps --lda)
All test results were as expected.
Total verification time: 1596.18 second
	Time spent in main process: 1344.02 second
	Time spent in child processes: 252.16 second
	Number of false contexts: 413

(FIXED)

error at: cll.ss delete
error at: heaps.ss deleteoneel
error at: heaps.ss deletemax
error at: rb.ss remove_min
error at: rb.ss del

# hip --eps --dis-baga-xpure
Total number of errors: 22 in files:
error at: ../../modular_examples/dll-modular.ss append
error at: ../../modular_examples/dll-modular.ss append1
error at: ../../modular_examples/dll-modular.ss append2
error at: ../../modular_examples/dll-modular.ss delete
error at: ../../modular_examples/dll-modular.ss delete1
error at: ../../modular_examples/dll-modular.ss f1
error at: ../../modular_examples/dll-modular.ss f2
error at: ../../modular_examples/dll-modular.ss insert
error at: ../../modular_examples/dll-modular.ss test_del
error at: ../../modular_examples/dll-modular.ss test_del2
error at: ../../modular_examples/dll-modular.ss test_fold
error at: ../../modular_examples/selection-modular.ss delete_min
error at: ../../modular_examples/selection-modular.ss find_min
error at: ../../modular_examples/selection-modular.ss selection_sort
error at: ../../modular_examples/qsort-modular.ss append_bll
error at: ../../modular_examples/qsort-modular.ss partition
error at: ../../modular_examples/qsort-modular.ss qsort
.
Total verification time: 237.68 second
	Time spent in main process: 196.22 second
	Time spent in child processes: 41.45 second
	Number of false contexts: 383

(* without Omega simplify *)
Total verification time: 254.68 second
	Time spent in main process: 206.29 second
	Time spent in child processes: 48.39 second
	Number of false contexts: 413

All test results were as expected.
Total verification time: 254.77 second
	Time spent in main process: 206.51 second
	Time spent in child processes: 48.26 second
	Number of false contexts: 413

(* with Omega simplify *)
#hip --eps (default)

All test results were as expected.
Total verification time: 231.97 second
	Time spent in main process: 160.11 second
	Time spent in child processes: 71.86 second
	Number of false contexts: 424
====================================================================
# cvutil.ml

Fix below caused extra failures. Why?

  if !Globals.baga_xpure 
      &&  not(!Globals.en_slc_ps) 
  then
      let disj = xpure_heap_enum_baga (prog : prog_decl) (h0 : h_formula) (p0: mix_formula) (which_xpure :int) in
      let ans = conv_from_ef_disj disj in
      ans

Total number of errors: 26 in files:
error at: dll.ss test_del2
error at: selection.ss delete_min
error at: selection.ss selection_sort
error at: avl-orig-2.ss get_max
error at: avl-orig-2.ss insert
error at: avl-orig-2.ss rotate_left_child
error at: avl-orig-2.ss rotate_right_child
error at: avl-orig3.ss get_max
error at: avl-orig3.ss insert
error at: avl-orig3.ss rotate_left_child
error at: avl-orig3.ss rotate_right_child
error at: bubble.ss bubble
error at: bubble.ss bsort
error at: rb.ss is_red
error at: rb.ss is_black
error at: rb.ss del_6
error at: rb.ss del_6r
error at: rb.ss del_5
error at: rb.ss del_5r
error at: rb.ss del_2
error at: rb.ss remove_min
error at: rb.ss del
error at: rb.ss insert
error at: ../../modular_examples/dll-modular.ss test_del2
error at: ../../modular_examples/selection-modular.ss delete_min
error at: ../../modular_examples/selection-modular.ss selection_sort
====================================================================
# (default) sleek -flags "print-dis-tidy"

Starting hip-sleek tests:
Total number of errors: 2 in files:
  infer/infer15.slk({E2#Valid},{E3#Valid},{E4#Valid},{E5#Valid},{E6#Valid},{E7#Valid}) lemmas/nlseg4e1.slk({E2#Valid},{E3#Valid},{E4#Fail},{E5#Valid},{E6#Valid},{E7#Valid},{E8#Valid}).
Total verification time: 40.41 second
	Time spent in main process: 30.39 second
	Time spent in child processes: 10.02 second
	Number of false contexts: 0

# (default) sleek "--baga-xpure --eps"

Unexpected result with : baga-test-2.slk (failed check(s): {E15#Fail}) 
Unexpected result with : 
infer/app-inv.slk (failed check(s): no result (!!!check script options, provers, etc)) 
Unexpected result with : 
infer/app-inv2.slk (failed check(s): no result (!!!check script options, provers, etc)) 
Unexpected result with : infinity.slk (failed check(s): {E77#Valid},{E78#Valid}) 
LOOP at odd-lseg.slk

===================================================================
sleek (smt2104) --eps

Unexpected result with : infer/app-inv.slk (failed check(s): no result (!!!check script options, provers, etc)) 
Unexpected result with : infer/app-inv2.slk (failed check(s): no result (!!!check script options, provers, etc))

--inv not working with --eps

ll:={[self,n_33] -> [] -> []: (0=0 && ) ||  
  exists (flted_7_16,Anon_12,NODq: (self>0 && ll(NODq,flted_7_16)) && )
};
bottomupgen([ll], [1], SimHeur);
 

--en-inf not working with --eps

Unexpected result with : infinity.slk (failed check(s): {E77#Valid},{E78#Valid}) 
< Entail 14: Fail.(cex)(must) cause:do_unmatched_rhs : x::sortll<flted_55_110>@ rem br[{1,2}]
---
> Entail 14: Fail.(cex)(must) cause: true |-  exists(flted_55_97:flted_55_97=2 & (((x=null & flted_55_97=\inf) | x=1))). LOCS:[55;0] (must-bug)
55c55
< Entail 71: Fail.(cex)(must) cause:do_unmatched_rhs : x::sortll<flted_231_404>@ rem br[{1,2}]
---
> Entail 71: Fail.(cex)(must) cause: true |-  exists(flted_231_384:flted_231_384=2 & (((x=null & flted_231_384=\inf) | 
> x=1))). LOCS:[231;0] (must-bug)
259c260
<  <1>emp&(([null=flted][null=p][x!=null][a=m & a<=m1 & m1=\inf & m1=\inf]))&{FLOW,(21,22)=__norm}[]
---
>  <1>emp&a=m & m<=m1 & a<=m1 & m1=\inf & m1=\inf & p=flted & flted=null&{FLOW,(21,22)=__norm}[]
< Entail 77: Fail.(cex)(may) cause: ((x=null & r=v & x=null & m=\inf) | (x=null & r=v & x!=null)) |-  r=min(v,m). LOCS:[252] (may-bug)
---
> Entail 77: Valid. 
263c264
< Entail 78: Fail.(cex)(may) cause: ((null=null & m=\inf) | null!=null) |-  r=min(v,m). LOCS:[0;255] (may-bug)
---
> Entail 78: Valid. 

Unexpected result with : inflem.slk (failed check(s): {E2#Valid}) 

====================================================================
# sleek3.slk

Entailing lemma lem_12: Valid.

Valid Lemmas : [lem_12:==>] added to lemma store.

                      ["sleek3.slk", "", "Valid.", "Valid.Fail.Valid."],
                      ["sleek3.slk", "--elp", "Valid.", "Valid.Fail.Valid."],
                      ["sleek3.slk", "--elp", "Fail.", "Valid.Fail.Valid."],

===================================================================
Total number of errors: 2 in files:
  sleek3.slk({L1#Fail}) baga-test-2.slk({E15#Fail}).
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
