(set-logic AUFNIA)
(declare-fun n () Int)
(declare-fun f () Int)
(declare-fun induce (Int) Bool)
(declare-fun fibonacci (Int Int) Bool)
(assert (forall (value Int) (= (induce value) true)))
(assert (forall (n Int) (f Int) (= (fibonacci n f) (or (and (= n 0) (= f 1)) (or (and (= n 1) (= f 1)) (and (> n 1) (exists (?h Int) (exists (?g Int) (and (fibonacci (- n 1) ?g) (and (fibonacci (- n 2) ?h) (= f (+ ?g ?h))))))))))))
(assert (= 0 n))
(assert (induce n))
(assert (<= 0 n))
(assert (fibonacci n f))
(assert (not (< 0 f)))
(check-sat)
