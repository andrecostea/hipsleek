Procedures:

Step 1: Differentiating constraint and un-constraint formulas:
- constraint formula: originated from specs, unchangeable
- un-constraint formula: originated from programs, can be mutated to fix program

Step 2: Identify templates:
- heuristics to apply to fix failed entailments
Do we need some mapping of program statements and entailments? Since it can be
the case that the entailment is fixed but there is not corresponding fix in the
program.


Step 3: Mapping from fixing entailments to fixing programs

Some assumptions:
- User specs are correct

  # ----------------------------------------------------------------------------

sum.ss, sum_consecutive.ss: recursive programs, for songbird to infer f(n^2 + n).
modulo.ss: example with exists in the specs -> to do it with gcd
arr_bsort.ss: bubble sort, to work with array
test1.ss: test1 in the TCAS benchmark
