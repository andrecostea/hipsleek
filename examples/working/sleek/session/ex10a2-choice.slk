sleek_include 'msess/notes/node.slk'.
sleek_include 'msess/notes/hodef.slk'.


pred_sess_proj GSa<> == ?v#v>=1;;!v#v>0;;((?1;;?v#v::Addr<_>;;!v#v::DDate<_,_,_>) or ?0).
pred_sess_proj GSb<> == (!1) or (!0).
pred_sess_proj GSb1<> == !1.

                                           
checkentail cs::Chan{@S GSb<>}<>@M * 
cb'::Chan{@S ?v#v::Addr<Anon_2154>;;!v#v::DDate<Anon_2156,Anon_2157,Anon_2158>}<>
&
v_bool_65_2097' & opt'=1 & 0<v_int_62_2175 & 1<=id' & cb'=cb & cs'=cs 
                                           |-  cs'::Chan{@S !v#%L(v);;%R}<> * %L(opt').
expect Valid.
print residue.

checkentail cs::Chan{@S GSb<>}<>@M &
v_bool_65_2097 & 0<v_int_62_2175 & 1<=id
                                           |-  cs::Chan{@S !v#%L(v);;%R}<> .
expect Valid.
print residue.


checkentail cs::Chan{@S (!1) or (!0)}<>@M & opt=1 |-  cs::Chan{@S !v#%L(v);;%R}<> * %L(opt).
expect Valid.
print residue.

checkentail cs::Chan{@S (!1) or (!0)}<>@M & opt=2 |-  cs::Chan{@S !v#%L(v);;%R}<> * %L(opt).
expect Fail.
print residue.


checkentail cs::Chan{@S !3;;(!1) or (!0)}<>@M & opt=2 |-  cs::Chan{@S !3;;!v#%L(v);;%R}<> * %L(opt).
expect Fail.
print residue.

checkentail cs::Chan{@S GSb<>}<>@M & opt=1 |-  cs::Chan{@S !v#%L(v);;%R}<> * %L(opt).
expect Valid.
print residue.

checkentail cs::Chan{@S GSb<>}<>@M & opt=2 |-  cs::Chan{@S !v#%L(v);;%R}<> * %L(opt).
expect Fail.
print residue.

checkentail cs::Chan{@S !1;;GSb<>}<>@M & opt=2 |-  cs::Chan{@S !1;;!v#%L(v);;%R}<> * %L(opt).
expect Fail.
print residue.

checkentail cs::Chan{@S !1;;GSb<>}<>@M & opt=1 |-  cs::Chan{@S !1;;!v#%L(v);;%R}<> * %L(opt).
expect Valid.
print residue.


pred_sess_proj GSb2<> == (!1) or (!0;;!1).

checkentail cs::Chan{@S !1;;GSb2<>;;!2}<>@M & opt=1 |-  cs::Chan{@S !1;;!v#%L(v);;%R}<> * %L(opt).
expect Valid.
print residue.

checkentail cs::Chan{@S !1;;GSb2<>;;!2}<>@M & opt=1 |-  cs::Chan{@S !1;;!v#%L(v);;!1;;!2}<> * %L(opt).
expect Fail.
print residue.


// should this succeed?
checkentail cs::Chan{@S !1;;GSb2<>;;!2}<>@M & opt=0 |-  cs::Chan{@S !1;;!v#%L(v);;!1;;!2}<> * %L(opt).
expect Valid.
print residue.

// should this succeed?
checkentail cs::Chan{@S !1;;GSb2<>;;!2}<>@M |-  cs::Chan{@S !1;;!v#%L(v);;!1;;!2}<> * %L(opt).
expect Fail.
print residue.

checkentail cs::Chan{@S (!1) or (!2);;!3;;!2}<>@M & opt=0 |-  cs::Chan{@S (!1) or (!2);;!m#%L(m);;!2}<> * %L(opt).
expect Fail.
print residue.

