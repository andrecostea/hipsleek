sleek_include 'msess/notes/node.slk'.
sleek_include 'msess/notes/hodef.slk'.


//1
checkentail c::Chan{@S Guard{emp & hbp(b12, c14)}<>;;!1}<P> *
           c2::Chan{@S Assume{emp & hbp(b23, c25)}<>;;!1}<P>
           & hbp(b12, c14)  
|- c::Chan{@S !1}<P>.
expect Valid.
print residue.

//2
checkentail c::Chan{@S Guard{emp & hbp(b12, c14)}<>;;!1}<P> *
           c2::Chan{@S Assume{emp & hbp(b23, c25)}<>;;!1}<P>
           & v=c14 & hbp(b12, v)
|- c::Chan{@S !1}<P>.
expect Valid.                                                                    
print residue.

//3
checkentail c::Chan{@S Guard{emp & hbp(b12, c14)}<>;;!1}<P> *
           c2::Chan{@S Assume{emp & hbp(b23, c25)}<>;;!1}<P>
           & v=c15 & hbp(b12,v)
|- c::Chan{@S !1}<P>.
expect Fail.                                                                    
print residue.

//4
checkentail c::Chan{@S Guard{emp & hbp(b12, c14)}<>;;!1}<P> *
           c2::Chan{@S Assume{emp & hbp(b23, c25)}<>;;!1}<P>
           & hbp(b12,c04) & hbp(c04,c14)
|- c::Chan{@S !1}<P>.
expect Valid.                                                                    
print residue.

//5
checkentail c::Chan{@S Guard{emp & hbp(b12, c14)}<>;;!1}<P> *
           c2::Chan{@S Assume{emp & hbp(b23, c25)}<>;;!1}<P>
           & hbp(b12,c05) & hbp(c04,c14)
|- c::Chan{@S !1}<P>.
expect Fail.                                                                    
print residue.

//6
checkentail c::Chan{@S Guard{emp & hbp(b12, c14)}<>;;!1}<P> *
           c2::Chan{@S Assume{emp & hbp(b23, c25)}<>;;!1}<P>
           & cb(b12,c02) & hbp(c02,c14)
|- c::Chan{@S !1}<P>.
expect Valid.                                                                    
print residue.

//7
checkentail c::Chan{@S Guard{emp & hbp(b12, c14)}<>;;!1}<P> *
           c2::Chan{@S Assume{emp & hbp(b23, c25)}<>;;!1}<P>
           & cb(b12,c02) & hbp(c02,c13) & hbp(c13,c14)
|- c::Chan{@S !1}<P>.
expect Valid.                                                                    
print residue.

//8 needs to trigger assume first
checkentail c::Chan{@S Guard{emp & hbp(b12, c14)}<>;;!1}<P> *
           c2::Chan{@S Assume{emp & hbp(c02, c13)}<>;;!1}<P>
           & cb(b12,c02) & hbp(c13,c14)
|- c::Chan{@S !1}<P>.
expect Valid.                                                                    
print residue.


//9 
checkentail c::Chan{@S Guard{emp & hbp(b12, c14)}<>;;!1}<P> *
           c2::Chan{@S !1}<P>
           & cb(b12,c02) & hbp(c13,c14)
|- c::Chan{@S !1}<P>.
expect Fail.                                                                    
print residue.

