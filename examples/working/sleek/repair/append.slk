data node {
  int val;
	node next;
}.

pred ll<n> == self = null & n = 0
	or self::node<_, q> * q::ll<n-1>
  inv n >= 0.

void append(node x, node y)
  requires x::ll<n1> * y::ll<n2> & x!=null
  ensures (exists n: x::ll<n> & n = n1 + n2);.

// synthesize [node x, node y]
// x::ll<n1> * y::ll<n2> & x!=null
// ~>
// x::ll<n1+n2>.

// synthesize [node q_63,node x,node y]
//  x::node<Anon_62,q_63>@M * y::ll<n2>@M&
// x!=null & flted_7_61+1=n1 & q_63=null & flted_7_61=0
// ~>
//  (exists flted_17_57: x::ll<flted_17_57>@M&flted_17_57=n2+n1).
// okay

synthesize [node q_63,node x,node y]
 q_63::node<Anon_77,q_78> * q_78::ll<flted_7_76> * 
 x::node<Anon_62,q_63> * y::ll<n2>&
x!=null & flted_7_61+1=n1 & flted_7_76+1=flted_7_61
~>
 (exists flted_17_57: x::ll<flted_17_57>@M&flted_17_57=n2+n1).
