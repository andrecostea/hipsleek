data node {
     node next
}.

pred ll<n> == self = null & n = 0
	or (exists q: self::node<q> * q::ll<n-1>).

int length(node x)
  requires x::ll<n>
  ensures x::ll<n> & res = n;.

// synthesize [node x]
// x::ll<n> & x!=null
// ~>
// (exists n2: x::ll<n2> & n2=n & res = n).

// unfold-pre
// synthesize [node x]
// x::node<q_54> * q_54::ll<f3> &x!=null & f3+1=n
// ~>
// (exists n2: x::ll<n2> & n2=n & res = n).

// fread x.next 
// synthesize [node q_54, node x]
// x::node<q_54> * q_54::ll<f3> &x!=null & f3+1=n
// ~>
// (exists n2: x::ll<n2> & n2=n & res = n).


// synthesize [node q_54,node x,int rs0]
// x::node<q_54> * q_54::ll<f3> & 1+f3=n & x!=null & rs0=f3a
// ~> 
// (exists n2: x::ll<n2> & n2=n & res = n).
// unfold post

synthesize [node q_54,node x,int rs0]
x::node<q_54> * q_54::ll<f3> & 1+f3=n & x!=null & rs0=f3
~> 
(exists flted_6_57,q_58,n2_50: x::node<q_58>@M * q_58::ll<flted_6_57>@M&
n2_50=n & res=n & flted_6_57+1=n2_50).