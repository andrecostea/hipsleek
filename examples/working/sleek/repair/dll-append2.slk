data node2 {
	node2 prev;
	node2 next;	
}.

pred dll<p,n> == self = null & n = 0 
  or (exists q: self::node2<p , q> * q::dll<self, n-1> & n > 0).

void append2(node2 x, node2 y)
	requires x::dll<q, m> * y::dll<p, n> & m>0
	ensures (exists k2: x::dll<q, k2> & k2 = m + n);.

synthesize [node2 x,node2 y]
s52::node2<q,q22> * q22::dll<s52,fl21> *  y::dll<p,n>&
(-1-fl21)<0 & q22!=null & x=s52 & p_7519=q & (m-1)-fl21=0

~>

(exists fr78: s52::dll<q,fr78>& y=y & x=s52 & x=s52 & p_7519=q & (m-1)-fl21=0 & 
fr78=fl21+n+1).

// synthesize [node2 q22,node2 s52,node2 x,node2 y]
// (exists k2: s52::node2<q,q22> * a::dll<s52,k2>&
// m=0+fl21+1 & p_7519=q & x=s52 & q22!=null & 0<(0+fl21+1) & k2=n+fl21)
// ~>
// (exists fr78_88: s52::dll<q,fr78_88>&
// x=s52 & x=s52 & p_7519=q & m=0+fl21+1 & fr78_88=1+fl21+n).
