data node2 {
  node2 prev;
  node2 next;
}.

pred dll<p,n> == self = null & n = 0
or (exists q: self::node2<p , q> * q::dll<self, n-1> & n > 0).

void delete(node2 x, int a)
	requires x::dll<p, n> & n > a & a > 0
	ensures exists k: x::dll<p, k> & k = n-1;.

// synthesize [node2 x,int a,node2 tmp]
// s92::node2<p91,fr22> * p91::node2<p_4667,s92>&
// p=p_4667 & self_4668=p91 & x=p91 & q_4670=s92 & q_4694=null & 
// flted_7_4693=0 & flted_7_4669=1 & n=2 & a=1 & fr22=null
// ~>
// (exists f_r_4823: p91::node2<p_4667,f_r_4823>&f_r_4823=null).

// synthesize [node2 x,int a,node2 tmp]
// x::dll<p,n> & a!=1 & 1<=a & (1+a)<=n
// ~>
// (exists fr67,q2, q44: q2::node2<x,q44> * x::node2<p,q2> * q44::dll<q2,fr67>&
// 3+fr67=n).


// synthesize [node2 x,int a,node2 tmp, node2 f_r_4823]
// s92::node2<x,fr22> * x::node2<p67,s92> &
// p=p67 & self_4668=x & q_4670=s92 & q_4694=null & flted_7_4693=0 & 
// flt69=1 & n=2 & a=1 & fr22=null & f_r_4823=null
// ~>
// x::node2<p67,f_r_4823>&f_r_4823=null.

// x.next.next.prev = x

synthesize [node2 x,int a]

x::node2<p,q12> * q12::node2<x,q24> * q24::dll<q12,fr25> &
1<=flt99 & q24!=null &
1+flt99=n & 2+flted_8_12423=n &
a=1 & 1+fr25=flt99
~>
(exists fr24,nxt49,pr57, nxt58:
nxt49::node2<pr57,nxt58> * x::node2<p,nxt49> * 
nxt58::dll<x,fr24> & 1+fr24=flt99).
