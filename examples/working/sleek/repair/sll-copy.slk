data node {
   // int val;
   node next
}.

pred ll<n> == self = null & n = 0
	or (exists q: self::node<q> * q::ll<n-1>).

node copy(node x)
requires x::ll<n>
ensures res::ll<n> * x::ll<n>;.

// synthesize [node x,node tmp,node k]
//  q7::ll<n1> * tmp::ll<n1> * x::node<q7> * 
//  k::node<tmp> & n1+1=n & x!=null
// ~>
//  res::ll<n> * x::ll<n>.

// synthesize [node x,node tmp,node k]
//  q_7408::ll<n_7411>@M * tmp::ll<n_7411>@M * x::node<Anon_7407,q_7408>@M * 
//  k::node<Anon_7407,tmp>@M&
// n_7411+1=n & !(v_bool_14_7390) & x!=null & flted_7_7406=n_7411 & x=x & 
// n_7414=n_7411 & n_7415=n_7411
// ~>
//  res::ll<n>@M * x::ll<n>@M.

synthesize [node x,node tmp,node k]
 q_7408::ll<n11> * tmp::ll<n11>@M * x::node<q_7408> * 
 k::node<tmp>& n11+1=n & x!=null & n11+1=n
~>
 res::ll<n> * x::ll<n>.


// synthesize [node x,node tmp,node k]
//  q7::ll<n1>@M * x::node<q7>@M&1+n1=n & x!=null
// ~>
//  (exists flted_7_46: x::ll<n>& k=res & tmp=q_47 & tmp=q_47 & n1=flted_7_46 & flted_7_46+1=n).

// synthesize [node q7,node x,node tmp,node k]
//  q7::ll<n1> * x::node<q7> & n1+1=n & x!=null
// ~>
//  (exists flted_7_54, q_47: x::ll<n>@M&
// k=res & tmp=q_47 & n1=flted_7_54 & 1+flted_7_54=n).
