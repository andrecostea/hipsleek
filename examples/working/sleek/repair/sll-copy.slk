data node {
	int val; 
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> & n > 0
  inv n >= 0.

node copy(node x)
requires x::ll<n>
ensures res::ll<n> * x::ll<n>;.

synthesize [node x,node tmp]
x::node<ann14,q15> * q15::ll<n18> * tmp::ll<n18> &
0<=n18 & n=1+n18 & n=1+flted_7_4413
~>
(exists ann9,q21,ann28,q29: res::node<ann9,q21> * x::node<ann28,q29> * 
       q21::ll<n18> * q29::ll<n18>).

// return new node(x.val, tmp);