data node {
   node next
}.

pred ll<n> == self = null & n = 0
	or (exists q: self::node<q> * q::ll<n-1>).

node copy(node x)
requires x::ll<n>
ensures res::ll<n> * x::ll<n>;.

// synthesize [node x,node tmp,node k]
//  q_7408::ll<n11> * tmp::ll<n11>@M * x::node<q_7408> * 
//  k::node<tmp>& n11+1=n & x!=null & n11+1=n
// ~>
//  res::ll<n> * x::ll<n>.


// synthesize [node x]
// emp&x=null & x=null & n=0
// ~>
// (exists f_r_10844: res::ll<f_r_10844>&x=null & x=null & n=0 & f_r_10844=0).

// synthesize [node tmp,node k,node x]
//  k::node<tmp> * x::node<q_19483> * q_19483::ll<n_19486> * tmp::ll<n_19486>&
// x=x & n+(-1-n_19486)=0 & (n-1)-flted_6_19482=0
// ~>
//  (exists f_r_19499,q_5: x::node<q_5> * q_5::ll<n_19486> * res::ll<f_r_19499>&
//  x=x & n+(-1-n_19486)=0 & (n-1)-flted_6_19482=0 & f_r_19499=n_19486+1).


synthesize [node tmp,node k,node x]
 k::node<tmp> * x::node<q_19483> * q_19483::ll<n_19486>&
n=1+n_19486 & n=flted_6_19482+1
~>
 (exists f_r_55,q_56: res::node<tmp> * x::node<q_56> * q_56::ll<n_19486>&
n= 1+n_19486 & n=flted_6_19482+1 & f_r_55=1+n_19486 & n_19486+1=f_r_55).
