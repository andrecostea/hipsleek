data node {
	int val; 
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> & n > 0.

node copy(node x)
requires x::ll<n>
ensures res::ll<n> * x::ll<n>;.

synthesize [node x,node tmp]
 x::ll<n>&x!=null
~>
(exists fr1,fr2,vl73,nx74: x::node<vl73,nx74> * nx74::ll<fr1> * tmp::ll<fr2> &
1<=n & 1+fr1=n & 1+fr2=n).
