data node {
	int val; 
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> & n > 0.

node copy(node x)
requires x::ll<n>
ensures res::ll<n> * x::ll<n>;.

synthesize [node x,node tmp]
 x::node<ann41,q11> * q11::ll<n14> * tmp::ll<n14> &
0<=n14 & n=1+n14 & n=1+flt9
~>
(exists ann89,q19,ann8,q9:
res::node<ann89,q19> * x::node<ann8,q9> *
       q19::ll<n14> * q9::ll<n14>).

// return new node(x.val, tmp);