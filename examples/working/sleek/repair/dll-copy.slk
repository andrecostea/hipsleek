data node2 {
	node2 prev;
	node2 next;	
}.

pred dll<p,n> == self = null & n = 0 
  or (exists q: self::node2<p , q> * q::dll<self, n-1> & n > 0).

node2 copy(node2 x)
requires x::dll<p, n>
ensures x::dll<p, n> * res::dll<p, n>;.

synthesize [node2 x,node2 tmp,node2 nd]

nd::node2<p1,tmp> * x::node2<p1,q4> * q4::dll<x,n9> *
 tmp::dll<x,n9> &
0<=n9 & tmp!=null & n=1+n9 & n=1+flted_8_4603
~>
(exists q39,q64: nd::node2<p1,q39> * x::node2<p1,q64> * 
       q39::dll<nd,n9> * q64::dll<x,n9>).
