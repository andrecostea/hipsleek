data node {
     int val;
     node next
}.

pred ll<n> == self = null & n = 0
	or (exists v, q: self::node<v, q> * q::ll<n-1>).

int length(node x)
  requires x::ll<n>
  ensures x::ll<n> & res = n;.

// synthesize [node x]
//  x::ll<n> & true
// ~>
//  x::ll<n> &   n=res.

synthesize [node x]
 x::ll<n> & !(v_bool_26_7340) & x=x & x!=null
~>
 x::ll<n>@M&n=res.

// synthesize [node x]
//  x = null & n = 0
// ~>
//  n = res & x = null & n = 0.

