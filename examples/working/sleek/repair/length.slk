data node {
     node next
}.

pred ll<n> == self = null & n = 0
	or (exists q: self::node<q> * q::ll<n-1> & n > 0).

int length(node x)
  requires x::ll<n>
  ensures x::ll<n> & res = n;.

// synthesize [int v_int_12_1881,int k,node x]
//  x::ll<n>&x!=null & x'=x
// ~>
//  (exists f_r_14864,r_3: x::node<r_3> * r_3::ll<f_r_14864>&
// x'=x & k'=n & f_r_14864=n-1).

synthesize [node x]
 x::ll<n>&x!=null & x=x
~>
(exists fr56,r_3: x::node<r_3> * r_3::ll<fr56> & x=x & n=res & fr56=n-1).
