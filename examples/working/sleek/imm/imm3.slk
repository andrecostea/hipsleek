data node { int val ; node next }.
pred ll<n> == self = null & n = 0
	or self::node<next = r> * r::ll<n-1> 
	inv n >= 0.

checkentail (x::ll<n>@I); p::ll<m> * ((t::ll<a>@I); z::ll<m>) & n > 0  |- (y::ll<m>@I & x::ll<n>@I).
//print residue.
// Fail

checkentail (y::ll<n>@I) |- y::ll<n1>. 
//print residue.
// Fail


checkentail y::ll<n> |- (y::ll<n1>@I). 
print residue.
// y
// Valid


checkentail (y::ll<n>@I); x::ll<m> * ((t::ll<a>@I); z::ll<m>) & n > 0  |- (z::ll<n1>@I). 
// y; x *(t;z)
print residue.
// Valid


checkentail (y::ll<n>@I); p::ll<m1> * ((t::ll<a>@I); z::ll<m>) & n > 0 & x=null |- x::ll<m2>. 
print residue.
// y ; p * (t; z)
// Valid

checkentail (x::ll<n>@I); y::ll<m>@I * ((t::ll<a>@I); z::ll<m>) & n > 0  |- (y::ll<m2>@I * t::ll<a2>@I).
print residue.
// x ; y * (t;z)
// Valid




