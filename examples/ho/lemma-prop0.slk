//CountDownLatch

pred_prim WAIT<b:bag(int)>.
pred_prim CNT<n:int>.

//synchronization lemma
lemma_prop "wait-for" c1::CNT<a>@L * x::WAIT<S> & a notin S ->  
x::WAIT<S1> & S1=union(S,{a}).

check_normalize x::WAIT<S> * c1::CNT<1> & S={}.
//output one state
/*
# lemma-propo0.slk

a_69 should be bound to flted_10_39

(exists c1_47,x_48,S1_58: x_48::WAIT{}<S1_58> * c1::CNT{}<flted_10_39>&
S1_58=union(S_50,{a_49}) & c1=c1_47 & x=x_48 & flted_10_39=1 & S={}&
{FLOW,(21,22)=__norm})[]
*/



check_normalize x::WAIT<S> * c1::CNT<1> * c2::CNT<2> & S={}.
//output one state

//check_normalize x::WAIT<S> * c1::CNT<1> * c2::CNT<(-1)> * c3::CNT<(-1)> & S={}.
//output two states since there are two normalization
//can improve by fixpoint

//checkentail flted_18_20=1 & flted_18_19+1=0  & S={} |- false.
//expect Fail.
