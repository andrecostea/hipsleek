data cell {int val}.

lemma "combineCell" self::cell(c1,t,0)<v> * self::cell(c2,t,0)<v> -> self::cell(c1+c2,t,0)<v>.

//(1)
checkentail x::cell(1,2,0)<v1> * x::cell(1,2,0)<v1>  |- x::cell(2,2,0)<v2>.
print residue. //valid, COMBINE, 1 residue

//(2)
checkentail x::cell(1,3,0)<v1> * x::cell(1,3,0)<v1>  |- x::cell(2,3,0)<v2>.
print residue. //valid, COMBINE, 1 residue

//(3)
checkentail x::cell(1,3,0)<v1> * x::cell(1,3,0)<v1> * x::cell(1,3,0)<v1>  |- x::cell(3,3,0)<v2>.
print residue. //valid, COMBINE, 1 residue

//(4)
checkentail x::cell(1,3,0)<v1> * x::cell(1,3,0)<v1> * x::cell(1,3,0)<v1>  * x::cell(1,3,0)<v1> |- x::cell(4,3,0)<v2>.
print residue. //valid, COMBINE,false context
