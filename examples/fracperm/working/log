
======================================
/usr/local/etc/reduce/bin/redcsl
Starting Reduce... 
Starting Omega... 
Entail(1)=Valid.
Entail(2)=Valid.
Entail(3)=Valid.
Entail(4)=Fail.(must) cause:(failure_code=213)  true |-  1+n+1=n+1 (RHS: contradiction).
Halting Reduce... 
Stop Omega... 52 invocations 

======================================
/usr/local/etc/reduce/bin/redcsl
Starting Reduce... 
Starting Omega... 
Entail(1)=Fail.(may) cause:(failure_code=213)  flted_8_62=1 & n=m & 2<=m & 1<=x | flted_8_62=1 & n=m & x<=(0 - 1) & 2<=m |-  2<m (may-bug).
: no residue 
Halting Reduce... 
Stop Omega... 29 invocations 

======================================
/usr/local/etc/reduce/bin/redcsl
Starting Reduce... 
Starting Omega... 
Entail(1)=Valid.
: no residue 
Entail(2)=Fail.(may) cause:(failure_code=213)  flted_10_82=1 & n=m & 1<=m & 1<=x | flted_10_82=1 & n=m & x<=(0 - 1) & 
1<=m | flted_10_82=1 & m=0 & n=0 & x=0 |-  0<m (may-bug).
Halting Reduce... 
Stop Omega... 31 invocations 

======================================
/usr/local/etc/reduce/bin/redcsl
Starting Reduce... 
Starting Omega... 
Entail(1)=Fail.(must) cause:(failure_code=213)  m=1 |-  m=2 (must-bug).
: no residue 
Entail(2)=Valid.
: no residue 
Entail(3)=Fail.(must) cause:(failure_code=213)  m=0 |-  1=m (must-bug).
: no residue 
Entail(4)=Fail.(must) cause:(failure_code=213)  m=1 |-  m=0 (must-bug).
: no residue 
Entail(5)=Valid.
: no residue 
Entail(6)=Valid.
: no residue 
Entail(7)=Valid.
: no residue 
Entail(8)=Fail.(may) cause:(failure_code=213)  flted_36_631=1 & flted_4_657=flted_4_645 - 1 & n=flted_4_645+1 & r1=3 & 
r_646=3 & r_658=r2 & x=4 & 3<=flted_4_645 & 1<=r2 | flted_36_631=1 & 
flted_4_657=flted_4_645 - 1 & n=flted_4_645+1 & r1=3 & r_646=3 & r_658=r2 & 
x=4 & r2<=(0 - 1) & 3<=flted_4_645 |-  r2=null (may-bug).
Halting Reduce... 
Stop Omega... 111 invocations 

======================================
/usr/local/etc/reduce/bin/redcsl
Starting Reduce... 
Starting Omega... 
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(1)=Valid.
: no residue 
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(2)=Fail.(must) cause:(failure_code=213)  n=10 |-  11<n (must-bug).
Entail(3)=Valid.
: no residue 
Halting Reduce... 
Stop Omega... 41 invocations 

======================================
/usr/local/etc/reduce/bin/redcsl
Starting Reduce... 
Starting Omega... 
Entail(1)=Valid.
: no residue 
Entail(2)=Valid.
: no residue 
Halting Reduce... 
Stop Omega... 20 invocations 

======================================
/usr/local/etc/reduce/bin/redcsl
Starting Reduce... 
Starting Omega... 
Entail(1)=Valid.
: no residue 
Entail(2)=Valid.
: no residue 
Halting Reduce... 
Stop Omega... 28 invocations 

======================================
/usr/local/etc/reduce/bin/redcsl
Starting Reduce... 
Starting Omega... 
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(1)=Valid.
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(2)=Valid.
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(3)=Valid.
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(4)=Fail.(may) cause:may[(failure_code=213)  flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & p=r2 & r_781=r1 & 10<=n & 
1<=b_765 & 1<=r1 & 1<=a_764 & 1<=x | flted_26_758=1 & flted_8_779=1 & 
flted_8_780=1 & p=r2 & r_781=r1 & r1<=(0 - 1) & 10<=n & 1<=b_765 & 
1<=a_764 & 1<=x | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & r1=r2 & 
p=r2 & b_765=0 & r_781=r2 & 10<=n & 1<=a_764 & 1<=x | flted_26_758=1 & 
flted_8_779=1 & flted_8_780=1 & p=r2 & r_781=r1 & x<=(0 - 1) & 10<=n & 
1<=b_765 & 1<=r1 & 1<=a_764 | flted_26_758=1 & flted_8_779=1 & 
flted_8_780=1 & p=r2 & r_781=r1 & x<=(0 - 1) & r1<=(0 - 1) & 10<=n & 
1<=b_765 & 1<=a_764 | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & 
r1=r2 & p=r2 & b_765=0 & r_781=r2 & x<=(0 - 1) & 10<=n & 1<=a_764 | 
flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & p=r2 & r_781=r1 & a_764=0 & 
x=r1 & 10<=n & 1<=b_765 & 1<=r1 | flted_26_758=1 & flted_8_779=1 & 
flted_8_780=1 & p=r2 & r_781=r1 & a_764=0 & x=r1 & r1<=(0 - 1) & 10<=n & 
1<=b_765 | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & r1=r2 & p=r2 & 
b_765=0 & r_781=r2 & a_764=0 & x=r2 & 10<=n |-  11<=n (may-bug).,(failure_code=213)  flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & 
flted_8_800=1 & r_801=r2 & r_781=r1 & 10<=n & 1<=b_785 & 1<=r2 & 1<=a_784 & 
1<=r1 & 1<=a_764 & 1<=x | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & 
flted_8_799=1 & flted_8_800=1 & r_801=r2 & r_781=r1 & r2<=(0 - 1) & 10<=n & 
1<=b_785 & 1<=a_784 & 1<=r1 & 1<=a_764 & 1<=x | flted_26_758=1 & 
flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & p=r2 & 
b_785=0 & r_801=r2 & r_781=r1 & 10<=n & 1<=a_784 & 1<=r1 & 1<=a_764 & 1<=x | 
flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & 
flted_8_800=1 & r_801=r2 & r_781=r1 & r1<=(0 - 1) & 10<=n & 1<=b_785 & 
1<=r2 & 1<=a_784 & 1<=a_764 & 1<=x | flted_26_758=1 & flted_8_779=1 & 
flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & r_801=r2 & r_781=r1 & 
r2<=(0 - 1) & r1<=(0 - 1) & 10<=n & 1<=b_785 & 1<=a_784 & 1<=a_764 & 1<=x | 
flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & 
flted_8_800=1 & p=r2 & b_785=0 & r_801=r2 & r_781=r1 & r1<=(0 - 1) & 10<=n & 
1<=a_784 & 1<=a_764 & 1<=x | flted_26_758=1 & flted_8_779=1 & 
flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & r2=r1 & r_801=r1 & a_784=0 & 
r_781=r1 & 10<=n & 1<=b_785 & 1<=r1 & 1<=a_764 & 1<=x | flted_26_758=1 & 
flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & r2=r1 & 
r_801=r1 & a_784=0 & r_781=r1 & r1<=(0 - 1) & 10<=n & 1<=b_785 & 1<=a_764 & 
1<=x | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & 
flted_8_800=1 & r2=r1 & p=r1 & b_785=0 & r_801=r1 & a_784=0 & r_781=r1 & 
10<=n & 1<=a_764 & 1<=x | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & 
flted_8_799=1 & flted_8_800=1 & r_801=r2 & r_781=r1 & x<=(0 - 1) & 10<=n & 
1<=b_785 & 1<=r2 & 1<=a_784 & 1<=r1 & 1<=a_764 | flted_26_758=1 & 
flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & r_801=r2 & 
r_781=r1 & r2<=(0 - 1) & x<=(0 - 1) & 10<=n & 1<=b_785 & 1<=a_784 & 1<=r1 & 
1<=a_764 | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & 
flted_8_800=1 & p=r2 & b_785=0 & r_801=r2 & r_781=r1 & x<=(0 - 1) & 10<=n & 
1<=a_784 & 1<=r1 & 1<=a_764 | flted_26_758=1 & flted_8_779=1 & 
flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & r_801=r2 & r_781=r1 & x<=(0 -
1) & r1<=(0 - 1) & 10<=n & 1<=b_785 & 1<=r2 & 1<=a_784 & 1<=a_764 | 
flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & 
flted_8_800=1 & r_801=r2 & r_781=r1 & r2<=(0 - 1) & x<=(0 - 1) & r1<=(0 -
1) & 10<=n & 1<=b_785 & 1<=a_784 & 1<=a_764 | flted_26_758=1 & 
flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & p=r2 & 
b_785=0 & r_801=r2 & r_781=r1 & r1<=(0 - 1) & x<=(0 - 1) & 10<=n & 
1<=a_784 & 1<=a_764 | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & 
flted_8_799=1 & flted_8_800=1 & r2=r1 & r_801=r1 & a_784=0 & r_781=r1 & 
x<=(0 - 1) & 10<=n & 1<=b_785 & 1<=r1 & 1<=a_764 | flted_26_758=1 & 
flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & r2=r1 & 
r_801=r1 & a_784=0 & r_781=r1 & r1<=(0 - 1) & x<=(0 - 1) & 10<=n & 
1<=b_785 & 1<=a_764 | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & 
flted_8_799=1 & flted_8_800=1 & r2=r1 & p=r1 & b_785=0 & r_801=r1 & 
a_784=0 & r_781=r1 & x<=(0 - 1) & 10<=n & 1<=a_764 | flted_26_758=1 & 
flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & r_801=r2 & 
r_781=r1 & a_764=0 & x=r1 & 10<=n & 1<=b_785 & 1<=r2 & 1<=a_784 & 1<=r1 | 
flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & 
flted_8_800=1 & r_801=r2 & r_781=r1 & a_764=0 & x=r1 & r2<=(0 - 1) & 10<=n & 
1<=b_785 & 1<=a_784 & 1<=r1 | flted_26_758=1 & flted_8_779=1 & 
flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & p=r2 & b_785=0 & r_801=r2 & 
r_781=r1 & a_764=0 & x=r1 & 10<=n & 1<=a_784 & 1<=r1 | flted_26_758=1 & 
flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & r_801=r2 & 
r_781=r1 & a_764=0 & x=r1 & r1<=(0 - 1) & 10<=n & 1<=b_785 & 1<=r2 & 
1<=a_784 | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & 
flted_8_800=1 & r_801=r2 & r_781=r1 & a_764=0 & x=r1 & r1<=(0 - 1) & r2<=(0 -
1) & 10<=n & 1<=b_785 & 1<=a_784 | flted_26_758=1 & flted_8_779=1 & 
flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & p=r2 & b_785=0 & r_801=r2 & 
r_781=r1 & a_764=0 & x=r1 & r1<=(0 - 1) & 10<=n & 1<=a_784 | 
flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & 
flted_8_800=1 & r2=r1 & r_801=r1 & a_784=0 & r_781=r1 & a_764=0 & x=r1 & 
10<=n & 1<=b_785 & 1<=r1 | flted_26_758=1 & flted_8_779=1 & flted_8_780=1 & 
flted_8_799=1 & flted_8_800=1 & r2=r1 & r_801=r1 & a_784=0 & r_781=r1 & 
a_764=0 & x=r1 & r1<=(0 - 1) & 10<=n & 1<=b_785 | flted_26_758=1 & 
flted_8_779=1 & flted_8_780=1 & flted_8_799=1 & flted_8_800=1 & r2=r1 & 
p=r1 & b_785=0 & r_801=r1 & a_784=0 & r_781=r1 & a_764=0 & x=r1 & 10<=n |-  exists1(b_785:0<=b_785 & flted_8_779=1. & flted_26_758=1. & (b_785+11)<=n & 
9<=n) (may-bug).]
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(5)=Valid.
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(6)=Valid.
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(7)=Valid.
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(8)=Valid.
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(9)=Fail.(must) cause:union[(failure_code=213)  n1=7 |-  n1=3;  n2=0 |-  n2=5 (must-bug).,union[(failure_code=213)  n=7 |-  n=3+5 (must-bug).,(failure_code=213)  flted_48_2201=1 & flted_8_2222=1 & n=7 |-  exists1(b_2228:0<=b_2228 & flted_8_2222=1. & flted_48_2201=1. & 0<=5 & 
0<=3 & 0<=(5+b_2228) & n=3+b_2228+5) (must-bug).]]
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
!!! do_coercion should try directly lemma: lem_29
Entail(10)=Valid.
Halting Reduce... 
Stop Omega... 341 invocations 
