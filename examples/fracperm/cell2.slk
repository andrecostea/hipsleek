data Cell2{
  int lck;
  int val;
}.

/*
pred cellInv2<> == self::Cell2<#,v> & v>=0
  inv true.

declare_lock LOCKB<> == self::Cell2::<_,#>
  inv self::cellInv2<>;
*/

checkentail x::Cell2<a,b> |- x::Cell2<x1,#> * x::Cell2<#,x2>.
print residue. //valid

//init
checkentail x::Cell2<0,0> |- x::Cell2<_,#>.
print residue. // valid

/*
//acquire
checkentail l::LOCKB<> |- l::LOCKB<>.
//TO DO

//finalize
checkentail l::LOCKB<> * l::cellInv<> |- l::LOCKB<>.
//TO DO: l::LOCKB<> == self::Cell2::<_,#>

//release
checkentail l::LOCKB<> * l::Cell2::<#,v> & v>=0 |- l::LOCKB<> * l::cellInv<>.
// how to entail this???
*/
