/*
*In a method:
 - Proving PRE-CONDITION: @p_val and @p_ref

   Variable permissions:
   v@zero  |- v@p_val --> fail
   v@zero  |- v@p_ref --> fail

     not(v \in S)
  --------------------
  S@zero |- v@p_val  --> S@zero

         not(v \in S)
  -----------------------
  S@zero |- v@p_ref  --> S+{v}@zero

 - Proving POST-CONDITION: @full

     (v \in S)
  --------------------
  S@zero |- v@full  --> S-{v}@zero

     not(v \in S)
  --------------------
  S@zero |- v@full  --> FAIL

*/


//(1)
checkentail @zero[v1,v2] |- @p_ref[x1].
//valid   --> @zero[v1,v2,x1].

//(2)
checkentail @zero[v1,v2] |- @p_val[x1].
//valid   --> @zero[v1,v2].

//(3)
checkentail @zero[v1,v2] |- @full[v1].
//valid   --> @zero[v2].

//(4)
checkentail @zero[v1,v2] |- @p_ref[v1].
//fail

//(5)
checkentail @zero[v1,v2] |- @p_val[v1].
//fail 

//(6)
checkentail @zero[v1,v2] |- @full[v3].
//fail.

//(7)
checkentail @zero[v1,v2] |- @p_val[x1,x2] & @p_ref[x3,x4].
//valid   --> @zero[v1,v2,x3,x4].

//(8)
checkentail @zero[v1,v2] |- @p_val[x1,x2] & @p_ref[v1,x4].
// Fail

//(9)
checkentail @zero[v1,v2] |- @p_val[x1,v2] & @p_ref[x3,x4].
// Fail
