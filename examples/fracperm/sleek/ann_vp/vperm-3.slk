/*
  Variable permissions
*/

//(1)
checkentail @zero[v1,v2] & x>0 |- x>=0.
print residue.

//(2)
checkentail @zero[v1,v2] |- @full[x1].
print residue.
//valid   --> @zero[v1,v2,x1].

//(3)
checkentail @zero[v1,v2] |- @full[v1].
// Fail
// @full var [v1] cannot have possibly zero permission

//(4)
checkentail @zero[v1,v2] & v1=x1 |- @full[x1].
print residue.
// x1 and v1 are distinct stack variables if equal values
//valid   --> @zero[v1,v2,x1]

//(5)
checkentail @zero[v1,v2] |- @value[x1].
print residue.
// valid --> @zero[v1,v2]

//(6)
checkentail @zero[v1,v2] |- @value[v1].
// Fail
// @value var cannot have possibly zero permission

//(7)
checkentail @zero[v1',v2] & x>0 |- @value[v1].
// Fail. v' and v denote the same stack variable

//(8)
checkentail @zero[v1,v2] or @zero[v2] |- @value[v1].
// OK to fail

//(9)
checkentail @zero[v1,v2] |- @value[x2] or @value[x1].
print residue.
// succeed with 2 answers

//(10)
checkentail @zero[v1,v2] |- @value[v1] or @value[x1].
print residue.
// succeed with 1 answer

//(11)
checkentail @zero[v1,v2] or @zero[v2] |- @value[x3].
// succeed with an OR
print residue.

//examples with threads

//(12)
checkentail @zero[x] and @full[x] & x'=x+1 & thread=id |- @full[y].
print residue.
// valid --> @zero[x,y] and @full[x] & x'=x+1

//(13)
checkentail @zero[x] & y'=y+1 & id=z and @full[x] & x'=x+1 & thread=z
            |- [i] @value[id] and @full[x] & x'=i+1 & thread=id.
print residue.
// valid -> @zero[x] & i=x & y'=1+y & id=z
