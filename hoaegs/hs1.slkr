Starting Omega... 
Generated SMT input :
(set-logic AUFNIA)
(declare-fun a () Int)
(declare-fun b () Int)
(declare-fun c () Int)
(assert (and (< 0 a) (= c (+ b a))))
(assert (not (< b c)))
(check-sat)
==> SMT output : unsat
Valid.
Generated SMT input :
(set-logic AUFNIA)
(declare-fun a () Int)
(declare-fun b () Int)
(declare-fun c () Int)
(declare-fun sum (Int Int Int) Bool)
(assert (forall (a Int) (b Int) (c Int) (= (sum a b c) (= c (+ a b)))))
(assert (and (< 0 a) (sum a b c)))
(assert (not (< b c)))
(check-sat)
==> SMT output : unsat
Valid.
Stop Omega... 0 invocations 