Starting Omega... 
Generated SMT input :
(set-logic AUFNIA)
(declare-fun a () (Array Int Int))
(declare-fun intarray ((Array Int Int)) Bool)
(assert (forall (a (Array Int Int)) (= (intarray a) true)))
(assert (and (and (intarray a) (= (select a 0) 1)) (= (select a 1) 2)))
(assert (not (< (select a 0) (select a 1))))
(check-sat)
==> SMT output : unsat
Valid.
Generated SMT input :
(set-logic AUFNIA)
(declare-fun a () (Array Int Int))
(declare-fun intarray ((Array Int Int)) Bool)
(declare-fun sorted ((Array Int Int) Int Int) Bool)
(assert (forall (a (Array Int Int)) (= (intarray a) true)))
(assert (forall (a (Array Int Int)) (i Int) (j Int) (= (sorted a i j) (or (>= i j) (and (and (< i j) (< (select a i) (select a (+ i 1)))) (sorted a (+ i 1) j))))))
(assert (and (and (and (intarray a) (= (select a 0) 1)) (= (select a 1) 2)) (= (select a 2) 3)))
(assert (not (sorted a 0 2)))
(check-sat)
==> SMT output : unsat
Valid.
Generated SMT input :
(set-logic AUFNIA)
(declare-fun a () (Array Int Int))
(declare-fun n () Int)
(declare-fun sorted ((Array Int Int) Int Int) Bool)
(assert (forall (a (Array Int Int)) (i Int) (j Int) (= (sorted a i j) (or (>= i j) (and (and (< i j) (< (select a i) (select a (+ i 1)))) (sorted a (+ i 1) j))))))
(assert (and (< (select a 0) (select a 1)) (sorted a 1 n)))
(assert (not (sorted a 0 n)))
(check-sat)
==> SMT output : unsat
Valid.
Generated SMT input :
(set-logic AUFNIA)
(declare-fun a () (Array Int Int))
(declare-fun n () Int)
(declare-fun sorted ((Array Int Int) Int Int) Bool)
(assert (forall (a (Array Int Int)) (i Int) (j Int) (= (sorted a i j) (or (>= i j) (and (and (< i j) (< (select a i) (select a (+ i 1)))) (sorted a (+ i 1) j))))))
(assert (and (sorted a 0 n) (< (select a n) (select a (+ n 1)))))
(assert (not (sorted a 0 (+ n 1))))
(check-sat)
==> SMT output : unknown
Fail.
Generated SMT input :
(set-logic AUFNIA)
(declare-fun ud (Int) Bool)
(assert (forall (x Int) (= (ud x) (forall (?y Int) (< ?y x)))))
(assert true)
(assert (not (ud 1)))
(check-sat)
==> SMT output : unknown
Fail.
Stop Omega... 0 invocations 