Starting Omega... 
Generated SMT input :
(set-logic AUFNIA)
(declare-fun a () (Array Int Int))
(declare-fun s () Int)
(declare-fun sum ((Array Int Int) Int Int Int) Bool)
(assert (forall (a (Array Int Int)) (i Int) (j Int) (s Int) (= (sum a i j s) (or (and (> i j) (= s 0)) (and (<= i j) (exists (?s1 Int) (and (sum a (+ i 1) j ?s1) (= s (+ ?s1 (select a i))))))))))
(assert (and (and (and (= (select a 2) 3) (= (select a 1) 2)) (= (select a 0) 1)) (sum a 0 2 s)))
(assert (not (= s 6)))
(check-sat)
==> SMT output : unsat
Valid.
Generated SMT input :
(set-logic AUFNIA)
(declare-fun i () Int)
(declare-fun s () Int)
(declare-fun a () (Array Int Int))
(declare-fun j () Int)
(declare-fun sum ((Array Int Int) Int Int Int) Bool)
(assert (forall (a (Array Int Int)) (i Int) (j Int) (s Int) (= (sum a i j s) (or (and (> i j) (= s 0)) (and (<= i j) (exists (?s1 Int) (and (sum a (+ i 1) j ?s1) (= s (+ ?s1 (select a i))))))))))
(assert (and (< i j) (sum a i j s)))
(assert (not (sum a i (+ j 1) (+ s (select a (+ j 1))))))
(check-sat)
==> SMT output : unknown
Fail.
Stop Omega... 0 invocations 