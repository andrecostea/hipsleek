
Processing file "hoahipex4.ss"
Parsing...
Starting Omega... 
Translating global variables to procedure parameters...
Translating to core language...
 done
Procedure sigma$int[]~int~int:
int sigma$int[]~int~int(  int[] a,  int i,  int j)
static  EBase true & true & {FLOW,(12,13)=__norm,}
         EAssume 
           true & sumarray(,a,i,j,res) & {FLOW,(12,13)=__norm,}
dynamic  
int r_34;
r_34 = 0;
boolean v_bool_14_173;
v_bool_14_173 = {
gt___$int~int(i,j)
};
if (v_bool_14_173) LABEL! 7,0: r_34 = 0
else LABEL! 7,1: r_34 = {
int v_int_17_172;
v_int_17_172 = {
array_get_elm_at___$int[]~int(a,i)
};
int v_int_17_171;
v_int_17_171 = {
int v_int_17_170;
v_int_17_170 = {
int v_int_17_169;
v_int_17_169 = 1;
add___$int~int(i,v_int_17_169)
};
sigma$int[]~int~int(a,v_int_17_170,j) rec
};
add___$int~int(v_int_17_172,v_int_17_171)
}
;
int v_int_18_174;
v_int_18_174 = r_34;
return v_int_18_174

{(9,0),(19,1)}

Checking procedure sigma$int[]~int~int... ==> SMT output : sat
==> SMT output : sat
==> SMT output : sat
==> SMT output : sat
==> SMT output : sat
==> SMT output : unsat
==> SMT output : sat
==> SMT output : sat
==> SMT output : unsat
==> SMT output : sat
==> SMT output : sat
==> SMT output : unknown
==> SMT output : unknown
==> SMT output : unsat
==> SMT output : unsat

Procedure sigma$int[]~int~int SUCCESS
Stop Omega... 0 invocations 
0 false contexts at: ()

Total verification time: 0.37 second(s)
	Time spent in main process: 0.13 second(s)
	Time spent in child processes: 0.24 second(s)
Counters: 
 impl_cache_count = 2
impl_conseq_count = 2
impl_proof_count = 2
sat_cache_count = 13
sat_proof_count = 13
stat_countimply = 2
stat_countsat = 13
stat_disj_countimply = 4
stat_disj_countsat = 13
stat_size_countimply = 17
stat_size_countsat = 101
true_imply_count = 2
z_stat_disj_imply = 2
z_stat_disj_sat = 13
