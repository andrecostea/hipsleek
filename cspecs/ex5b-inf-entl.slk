relation P2(int n).

infer[] n=0 |- n+5>=0 .
print residue.

infer[] n=0 |- n>5.
print residue.

infer[] n=0 & flow __Error |- n>=0 & flow __MayError.
print residue.

infer[] n=0 & flow __MayError |- n>=0 & flow __Error.
print residue.

infer[] n=0 & flow __MayError |- n>0 & flow __Error.
print residue.

infer[] n=0  |- n>0 & flow __Error.
print residue.

infer[] false  |- true & flow __Error.
print residue.


infer[] x<=0 & flow __Error  |- true & flow __Error.
print residue.

infer[] x<=0 & flow __Error  |- x<=0 & flow __Error.
print residue.

infer[] x<=0 & flow __Error  |- x>0 & flow __Error.
print residue.

infer[P2] P2(x) & x>0  |- true & flow __Error.
print residue.
// expects P(2) -> not(x>0)

infer[P2] P2(x) & x<=0 & flow __Error  |- emp & flow __Error.
print residue.
// expects Valid.


infer[P2] x<=0 & flow __Error  |- emp & flow __Error.
print residue.
// expects Valid.


infer[] x<=0 & flow __MayError  |- emp & flow __MayError.
print residue.

//infer[P2] P2(n) & n=0 |- false.

//infer[P2] P2(n) & n=0 |- !(n+5>=0).
//print residue.

infer[] emp & flow __MayError  |- emp & flow __Error or emp & flow __norm.
print residue.

infer[] emp & flow __Error or emp & flow __norm
|- emp & flow __MayError.
print residue.

/*

  pre:   P(x,y)
  post : true & flow __Error
  code


    X1 & __norm | X2 & __Error |- true & ___Error


  foo(x)

  if (x>0) then ()
  else error()

  P(x) & x>0 * norm 
   \/ P(x) & x<=0 & Error  |- true & Error

  P(x) & x>0 -> false
  P(x)       -> not(x>0)


infer[] P1 & flow __MayError  |- P2 & flow __Error.
print residue.

infer[] P1 & flow __Error 
      or  P1 & flow __norm  |- P2 & flow __Error.


infer[] P1 & flow __Error |- P2 & flow __Error  (P1 --> P2)
        P1 & flow __norm  |- P2 & flow __Error.  P1 --> false
print residue.

  P1 & Err |- P2 & MayErr
  P1 & Err |- P2 & norm \/ P2 & Err \/ P2 & ?
  P1 & Err |- P2 & norm \/ P2 & Err
  P1 & Err |- P2 & Err

  P1 & Err \/ P1 & norm |- P2 & MayErr
  P2 & MayErr |- P1 & Err \/ P1 & norm 

*/