
data Refnode {
	Refnode next;
}.

pred ls<y_3> ==   emp & self=y_3
	or  exists u_4: self::Refnode<u_4:next> * u_4::ls<y_3>
.

pred ls2<y_6> ==   emp & self=y_6
	or  exists u_7: self::Refnode<u_7:next> * u_7::ls2<y_6>
	or  exists u_8,v_9: u_8::Refnode<v_9:next> * self::Refnode<u_8:next> * v_9::ls2<y_6>
.

pred ls_odd<y_14> ==  self::Refnode<y_14:next>
	or  exists u_15: self::Refnode<u_15:next> * u_15::ls_even<y_14>
.

pred ls_even<y_11> ==   emp & self=y_11
	or  exists u_12: self::Refnode<u_12:next> * u_12::ls_odd<y_11>
.


checkentail u::Refnode<v:next> * v::Refnode<t:next> * t::ls_odd<y> * x::ls_odd<u>
	 |- (exists x1: x1::Refnode<y:next> * x::ls2<x1> ) .
