dgata node {
	int val;
	node next;
}.

/*
ll_tail<tx> == self::node<_, null> & tx=self
	or self::node<_, r> * r::ll_tail<tx> & r!=null;

lseg<p> == self=p
	or self::node<_, r> * r::lseg<p>;
*/

pred lseg2<p, n> == self=p & n=0
	or self::node<_, r> * r::lseg2<p, n-1>
	inv n>=0.

pred ll_tail2<tx, n> == self::node<_, null> & tx=self & n=1
	or self::node<_, r> * r::ll_tail2<tx, n-1> & r!=null
	inv self!=null & tx!=null & n>=1.


lemma "lseg2" self::lseg2<p, n> <- self::lseg2<q, n1>@D * q::lseg2<p, n2>@D & n=n1+n2.
lemma "ll_tail2" self::ll_tail2<t, n> <-> self::lseg2<t, n-1> * t::node<_, null>.


checkentail exists tx_2048,
ty_2049: x::ll_tail2<tx_2048,n>@M * y::ll_tail2<ty_2049,m>@M&
ty_2049=ty & tx_2048=tx & ty'=ty & y'=y & tx'=tx & x'=x
 |-  tx'::node<val_41_1958',next_41_1959'>.
print residue.
