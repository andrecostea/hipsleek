
!!!Full processing file "t/wloop.ss"
Parsing file "t/wloop.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega.../usr/local/bin/oc

Checking procedure while_7_2$int~int... 
Procedure while_7_2$int~int SUCCESS.

*************************************
******pure relation assumption*******
*************************************
[RELDEFN post_1340: ( y<x & post_1340(x,1+y,y')) -->  post_1340(x,y,y'),
RELDEFN post_1340: ( y'=y & x<=y) -->  post_1340(x,y,y')]
*************************************

Post Inference result:
while_7_2$int~int
 EBase htrue&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
         EAssume ref [y]
           htrue&((x>=(1+y) & x=y') | (y>=x & y=y'))&{FLOW,(4,5)=__norm#E}[]
           

Checking procedure while_7_2$int~int... 

*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume !(v_bool_7_1323') & x'<=y' & y'=y & 
x'=x --> while_7_2post_1363(x,y).

 termAssume v_bool_7_1323' & y_1376<x' & y_1376=y & x'=x & y_1383=1+y_1376 & 
(((x'>=(1+y_1383) & x'=y') | (y_1383>=x' & 
y_1383=y'))) & while_7_2post_1363(x',y_1383) --> while_7_2post_1363(x,y).

 termAssume v_bool_7_1323' & y_1376<x' & y_1376=y & x'=x & y'=1+
y_1376 & while_7_2pre_0(x,y) --> while_7_2pre_0(x',y').


Base/Rec Case Splitting:
[	while_7_2: [[2] x<=y@B,[3] y<x@R]
]
Starting z3... 
Termination Inference Result:
while_7_2:  requires true * N & truecase {
                          x<=y -> requires emp * N & Term[68,1]
     ensures true * N & ((x>=(1+
                          y) & x=y') | (y>=x & y=y')); 
                          y<x -> requires emp * N & Term[68,2,-1+(1*x)+(-1*
                          y)]
     ensures true * N & ((x>=(1+y) & x=y') | 
                          (y>=x & y=y')); 
                          }

Checking procedure main$int~int... 
Procedure main$int~int SUCCESS.

*************************************
******pure relation assumption*******
*************************************
[RELDEFN post_1391: ( x=x' & y'=y & x'<=y) -->  post_1391(x,y,x',y'),
RELDEFN post_1391: ( x'=x & y'=x & y<x) -->  post_1391(x,y,x',y')]
*************************************

Post Inference result:
main$int~int
 EBase htrue&MayLoop[]&{FLOW,(4,5)=__norm#E}[]
         EAssume ref [x;y]
           htrue&((x'=x & y'=x & y<x) | (x=x' & y'=y & x'<=y))&
           {FLOW,(4,5)=__norm#E}[]
           

Checking procedure main$int~int... 

*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume (((x'>=(1+y) & x'=y') | (y>=x' & y=y'))) & x'=x & 
y<x' --> mainpost_1398(x,y).

 termAssume (((x'>=(1+y) & x'=y') | (y>=x' & y=y'))) & x'=x & 
x'<=y --> mainpost_1398(x,y).


Base/Rec Case Splitting:
[	main: [[1] true@B]
]
Termination Inference Result:
main:  requires true * N & truerequires emp * N & Term[69,1]
     ensures true * N & ((x'=x & 
y'=x & y<x) | (x=x' & y'=y & x'<=y));

0 false contexts at: ()

Total verification time: 0.461341 second(s)
	Time spent in main process: 0.377594 second(s)
	Time spent in child processes: 0.083747 second(s)

