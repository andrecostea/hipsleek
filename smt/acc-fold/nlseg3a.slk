// nlseg3a.slk --imm
// folding with @L node needs to be fixed.

data node {
   node nxt;
}.

pred nlseg<p> == 
  (exists a: self::node<a> * a::node<p>@L)
 inv true.

checkentail x::node<y>*y::node<p> |- x::nlseg<p>.
print residue.

/*
 <1>emp&{FLOW,(21,22)=__norm}[]
[[ SEARCH ==>  Fold ==>  Match ==>  Match ==> ]]
 why @L eaten node up?

The view form for folding not quite correct
since @L node absent ..

!!!nlseg3.slk:11: 37: do_fold: RHS view:  x::nlseg<p_26>
!!!nlseg3.slk:11: 37: do_fold: view_form:  EBase (* lbl: *){1}->(exists p_27,a_28: x::node<a_28> * a_28::node<p_27>&
       p_26=p_27&{FLOW,(1,24)=__flow})[]
!!!nlseg3.slk:11: 37: heap_entail_one_context_struc:

*/


