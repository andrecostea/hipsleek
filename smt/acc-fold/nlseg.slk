data node {
   node nxt;
}.

pred nlseg<p> == self=p
  or (exists a: self::node<a> * a::nlseg<p> & self!=p)
 inv true.

lemma_safe self::nlseg<p> -> (exists u: self::nlseg<u> * u::nlseg<p>).

/*
lemma_safe self::nlseg<p> <- (exists u: self::nlseg<u> * u::nlseg<p> 
           * p::node<_>@L).
*/

checkentail_exact x::node<a>*a::nlseg<p> * p::node<_>@L
                |- x::nlseg<p>.
print residue.
