
data node {
     node next;
}.

pred b1<y,z> ==
     (self:node) = y
     or self::node<y>
     or (exists u,uz: self::node<y> * z::node<u>*u::b1<y,uz>).



checkentail false |- true.
print residue.
expect Valid.

checkentail true |- false.
print residue.
expect Valid.


/*
# bseg3.slk

!!! [[([], self=y),([self], true),([z,self], true)]]
!!! [[([], self=y),([self], true),([z,self], true)
                    ,([z,self], true),([z,self], true)]]
!!! baga inv(b1):[([], self=y),([self], true),([z,self], true)
                    ,([z,self], true),([z,self], true)]Stop Omega...

need normalization.

*/