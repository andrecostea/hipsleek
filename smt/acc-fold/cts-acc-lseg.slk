data node {
    int val;
    node next
}.

pred lseg<p> == self = p
    or self::node<_,r> * r::lseg<p> & self != p.


checkentail_exact
    x::node<_,p> * p::node<_,q> * q::node<_,_>@L
        |- x::lseg<_>.
print residue.
expect Valid.

checkentail_exact
    x::node<_,p> * p::node<_,q> * q::node<_,u> * u::node<_,v> * v::node<_,_>@L
        |- x::lseg<_>.
print residue.
expect Valid.


// apply cts-acc-fold is useful here
checkentail_exact
    x::node<_,p> * p::node<_,q> * q::node<_,u> * u::node<_,v> * v::node<_,_>@L
        |- x::lseg<k> * k::node<_,v>.
print residue.
expect Valid.
