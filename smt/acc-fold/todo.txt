# elseg.slk

Below seems to have triggered folding and unfolding loop?

pred elseg<p> == self=p
  or (exists a,b: self::node<a> * a::node<b> * b::elseg<p>)
 inv true.

// lemma_safe self::elseg<p> <-> (exists u: self::elseg<u> * u::elseg<p>).

checkentail_exact x::node<a>*a::elseg<p> |- x::elseg<p>.
====================================================================
# smt/acc-fold/nlseg.slk

// below should succeed @L should not be considered
   a residue for --classic reasoning
 <1>p::node<_>@L&p!=x&{FLOW,(21,22)=__norm}[]

checkentail_exact x::node<a>*a::nlseg<p> *  p::node<_>@L
                |- x::nlseg<p>.
print residue.
====================================================================
# nlseg3.slk

 folding with -L not working properly..


pred nlseg<p> == 
  (exists a: self::node<a> * a::node<p>@L)
 inv true.

checkentail x::node<y>*y::node<p> |- x::nlseg<p>.
print residue.

/*
 <1>emp&{FLOW,(21,22)=__norm}[]
[[ SEARCH ==>  Fold ==>  Match ==>  Match ==> ]]
 why @L eaten node up?
*/
====================================================================
# nlseg3d.slk not working for @A

checkentail x::node<_>@A * x::node<_>@A   |-  false.
print residue.
// fail but should have aucceeede..

====================================================================
# nlseg3c.slk not working for @A

not working for unfolding..
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
====================================================================
