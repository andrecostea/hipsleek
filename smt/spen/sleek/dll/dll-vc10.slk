data pto {
     pto next;
     pto prev;
}.

/*
; doubly-linked list
(define-fun dll ((?in Dll_t) (?ex Dll_t) (?pr Dll_t) (?hd Dll_t))
  Space (tospace (or (and (= ?in ?pr) (= ?hd ?ex)) 
    (exists ((?u Dll_t)) (tobool (ssep
      (pto ?in (sref (ref next ?u) (ref prev ?pr)))
      (dll ?u ?ex ?in ?hd))
)))))
*/

pred dll<ex1,pr,hd> == self=hd & pr=ex1 // self=pr & hd=ex1 --> Valid
     or (exists u: self::pto<u,pr> * u::dll<ex1,self,hd>).

// Fail -> expected Valid.

checkentail w_emp::pto<t_emp,u_emp> * x_emp::dll<u_emp,y_emp,w_emp> *
            t_emp::dll<y_emp,w_emp,x_emp> |-
            x_emp::dll<y_emp,y_emp,x_emp>.
