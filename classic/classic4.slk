data cell {
    int val;
}.

// do not allow residue heap
checkentail x::cell<a> |- x::cell<n> * y::cell<n> * htrue.
print residue.

checkentail x::cell<_> * y::cell<_> * z::cell<_> |- y::cell<_> * x::cell<_>.
print residue.

checkentail x::cell<a> *  y::cell<_> * z::cell<_> |-  x::cell<a>.
print residue.

checkentail x::cell<a> * y::cell<b> |- htrue *  x::cell<a>.
print residue.

checkentail htrue |- htrue.
print residue.

checkentail emp |- htrue.
print residue.

checkentail emp |- emp.
print residue.

checkentail htrue |- emp.
print residue.

checkentail x::cell<a> * y::cell<b> * htrue |- x::cell<a> * htrue.
print residue.

checkentail x::cell<a> * y::cell<b> * z::cell<d> |- x::cell<a> * htrue * z::cell<d>.
print residue.

checkentail x::cell<a> * emp * y::cell<b> * z::cell<d> |- x::cell<a> * htrue * z::cell<d>.
print residue.


checkentail htrue |- htrue * emp.
print residue.

checkentail x::cell<a> |- x::cell<a> * y::cell<b> * htrue.
print residue.

checkentail x::cell<a> |- x::cell<a> * htrue.
print residue.

checkentail x::cell<a> |- x::cell<a>.
print residue.

checkentail x::cell<a> & n>2 |- x::cell<a> * htrue & n>1.
print residue.

checkentail x::cell<a> & n>2 |- x::cell<a> & n>1.
print residue.

checkentail x::cell<a> * htrue & n>2 |- x::cell<a> & n>1.
print residue.

checkentail x::cell<_> |- htrue .
print residue.

checkentail htrue |- x::cell<_>.
print residue.

checkentail emp |- x::cell<_>.
print residue.

checkentail x::cell<_> |- emp.
print residue.

// allow residue heap
//checkentail x::cell<a> * y::cell<a> |- x::cell<a> * htrue .
//print residue.
