
# t-2.slk

simplify true & not(x>0).

Why is there a parser error?

ERROR: at t-2.slk_9:20_9:23 
Message: expected cexp, found pure_constr
 File "t-2.slk", line 9, characters 22-23
 error: Failure("expected cexp, found pure_constr")
 at:(Program not linked with -g, cannot print stack backtrace)
Fatal error: exception Failure("expected cexp, found pure_constr")
========================================================================
# i5-4a.slk

infer [y] true   |- y!=0.
print residue.

 <1>emp&((y+1)<=0 | 1<=y)&{FLOW,(19,20)=__norm}[]
 inferred pure: [((y+1)<=0 | 1<=y)]

# can we have simpler result, namely y!=0

========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
========================================================================
