// examples from bi-abduction paper

data node {
	node next;	
}.

pred lseg<p> == self = p 
	or self::node<q> * q::lseg<p> & self!=p 
  inv true.

HeapPred H1(node a).

//(5)

checkentail x::node<z>   |- x::lseg<z>.
print residue.

infer [z] x::node<z>   |- x::lseg<z>.
print residue.

//infer [H1] x::node<z> * H1(y)  |- x::lseg<z> * y::lseg<null>.

//infer [z,H1] x::node<z> * H1(y)  |- x::lseg<z> * y::lseg<null>.
//print residue.


/*
# i13-5.slk

infer [z,H1] x::node<z> * H1(y)  |- x::lseg<z> * y::lseg<null>.

Succeeds individually but fails when put together

!!! >>>>>> mismatch ptr z::lseg<z_32>@M is not found (or inst) in the lhs <<<<<<
!!! dumping for sleek_dump(fail)
Entail (1) : Fail.

infer [z,H1] x::node<z>   |- x::lseg<z>.
print residue.
--> OK

infer [z,H1] H1(y)  |- y::lseg<null> .
print residue.
--> OK

infer [z,H1] x::node<z> * H1(y)  |- x::lseg<z>.
print residue.
--> OK

infer [z,H1] H1(y)*x::node<z>  |- x::lseg<z> * y::lseg<null> .
print residue.

*/