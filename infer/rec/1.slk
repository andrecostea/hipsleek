data node {
  int val;
  node next;
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> 
  inv n >= 0.

// TODO : res is a reserved identifier, can overload?
relation R(int rs, int n).
//  ==> res=0 & n=0 --> R(res,n)
infer [n,R] x::ll<n>@L & x=null & rs=0 |- R(rs,n).

relation F(int rs, int n).
//  ==> res=0 & n=0 --> R(res,n)
infer [n,F] x::ll<n>@L & x=null & rs=0 |- F(rs,n).

relation A(int n, int m, int z).
//  ==> A(n,m,z) <- n=1 & z =1+m
infer [n,A] x::node<_,y> * y::ll<m> & n=1 |- x::ll<z> & A(n,m,z).
