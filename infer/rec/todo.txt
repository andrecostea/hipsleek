echo "======= 2 ======"


bug1a.slk
 - extra false case, why?
infer [n,A] x::node<_,y> * y::ll<m> & n=1 |- x::ll<z> & A(n,m,z).
print residue.
Entail  (1): Valid. 
<1>true & n=1 & Anon_34=Anon_12 & q_35=y & m+1=z & {FLOW,(17,18)=__norm}
inferred rel: [( (m=0 | 1<=m) & m+1=z & n=1) -->  A(n,m,z)]
<2>false & false & {FLOW,(17,18)=__norm}
inferred pure: [n!=1]


Implicit z important for inference (see r1c-i.ss)
             EXISTS(z: x::ll<z>@M[Orig][LHSCase] & A(n,m,z) &
             {FLOW,(20,21)=__norm})

FIXED
=====

existential elimination for inferred rel.
// redlog exist_eliminator left some residue of form 0-0
ntail  (2): Valid. 
<1>x::ll<n>@L[Orig][LHSCase] & x=null & rs=t & t=0 & {FLOW,(17,18)=__norm}
inferred rel: [( n=0 & rs=0 - (0 - 0)) -->  R(rs,n); 
              ( x=null & rs=0 - (0 - 0)) -->  P(x,rs)]
further simplified to:
inferred rel: [( n=0 & rs=0) -->  R(rs,n); ( x=null & rs=0) -->  P(x,rs)]


--eps problem solved using stronger_drop_rel_formula for
  conseq

bug1a.slk
 - error with --eps

r1a-i.ss (to fix)
WARNING : converting the following ivs_unk vars from UNK to RelT type
WARNING (must fix) : ivs_unk = [R]
