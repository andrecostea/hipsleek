Starting Omega...oc
Translating global variables to procedure parameters...

case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][](self = null) & (n = 0) FLOW __flow 
EOrEBase: [][](true ; (true ; ((self::node<a, q@v1>@M[1]) * (q::ll2<n-1, v1>@M[1]))))*(true)( FLOW __flow) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][](self = null) & (n = 0) FLOW __flow 
EOrEBase: [][](EX flted_21_38 . (true ; (true ; ((self::node<a, q@v1>@M[1]) * (q::ll2<flted_21_38, v1>@M[1]))))*(flted_21_38 = n-1)( FLOW __flow)) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][](self = null) & (n = 0) FLOW __flow 
EOrEBase: [][](true ; (true ; ((self::node<a@v1, q>@M[1]) * (q::ll1<n-1, v1>@M[1]))))*(true)( FLOW __flow) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][](self = null) & (n = 0) FLOW __flow 
EOrEBase: [][](EX flted_17_41 . (true ; (true ; ((self::node<a@v1, q>@M[1]) * (q::ll1<flted_17_41, v1>@M[1]))))*(flted_17_41 = n-1)( FLOW __flow)) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][](self = null) & (n = 0) FLOW __flow 
EOrEBase: [][](true ; (true ; ((self::node<a@v1, q@v2>@M[1]) * (q::ll<n-1, v1, v2>@M[1]))))*(true)( FLOW __flow) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][](self = null) & (n = 0) FLOW __flow 
EOrEBase: [][](EX flted_13_44 . (true ; (true ; ((self::node<a@v1, q@v2>@M[1]) * (q::ll<flted_13_44, v1, v2>@M[1]))))*(flted_13_44 = n-1)( FLOW __flow)) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][](self = null) & (n = 0) FLOW __flow 
EOrEBase: [][](true ; (true ; ((self::node<v1, q>@M[1]) * (q::ll0<n-1, v1>@M[1]))))*(true)( FLOW __flow) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][](self = null) & (n = 0) FLOW __flow 
EOrEBase: [][](EX flted_9_48 . (true ; (true ; ((self::node<v1, q>@M[1]) * (q::ll0<flted_9_48, v1>@M[1]))))*(flted_9_48 = n-1)( FLOW __flow)) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 271,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 270,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 271,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 270,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 269,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 268,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 269,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 268,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 267,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 266,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 267,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 266,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 265,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 264,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 265,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 264,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 263,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 262,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 263,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 262,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 261,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 260,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 261,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 260,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 259,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 258,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 259,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 258,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 257,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 256,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 257,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 256,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 255,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 254,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 255,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 254,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 253,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 252,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 253,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 252,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 251,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 250,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 251,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 250,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 249,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 248,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 249,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 248,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 247,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 246,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 247,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 246,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 245,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 244,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 245,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 244,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 243,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 242,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 243,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 242,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 241,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 240,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 241,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 240,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 239,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 238,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 239,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 238,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 237,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 236,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 237,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 236,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 235,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 234,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 235,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 234,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 233,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 232,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 233,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 232,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 231,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 230,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 231,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 230,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 229,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 228,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 229,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 228,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 227,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 226,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 227,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 226,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 225,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 224,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 225,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 224,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 223,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 222,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 223,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 222,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 221,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 220,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 221,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 220,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 219,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 218,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 219,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 218,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 217,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 216,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 217,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 216,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 215,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 214,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 215,:res FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 214,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 213,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 212,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 213,:!(res) FLOW __norm}

	 a = null->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 212,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 211,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 210,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 211,:res FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 210,:!(res) FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 209,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 208,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 209,:!(res) FLOW __norm}

	 a = b->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 208,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 105,:dom(res,0,dim-1) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 105,:dom(res,0,dim-1) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 104,:update_array_2d(a,res,v,i,j) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 104,:update_array_2d(a,res,v,i,j) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][ ahalb ahaub](domb(a,ahalb,ahaub)) & ((ahalb <= i) & (i <= ahaub)) FLOW __norm {EAssume: 103,:(domb(res,ahalb,ahaub)) & (update_array_1d_b(a,res,v,i)) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][ ahalb ahaub](domb(a,ahalb,ahaub)) & ((ahalb <= i) & (i <= ahaub)) FLOW __norm {EAssume: 103,:(domb(res,ahalb,ahaub)) & (update_array_1d_b(a,res,v,i)) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][ ahalb ahaub](dom(a,ahalb,ahaub)) & ((ahalb <= i) & (i <= ahaub)) FLOW __norm {EAssume: 102,:(dom(res,ahalb,ahaub)) & (update_array_1d(a,res,v,i)) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][ ahalb ahaub](dom(a,ahalb,ahaub)) & ((ahalb <= i) & (i <= ahaub)) FLOW __norm {EAssume: 102,:(dom(res,ahalb,ahaub)) & (update_array_1d(a,res,v,i)) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 101,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 101,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 100,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 100,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 99,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 99,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 98,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 98,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 97,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 97,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 96,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 96,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 95,:res = a[i, j] FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 95,:res = a[i, j] FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][ ahalb ahaub](domb(a,ahalb,ahaub)) & ((ahalb <= i) & (i <= ahaub)) FLOW __norm {EAssume: 94,:res = a[i] FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][ ahalb ahaub](domb(a,ahalb,ahaub)) & ((ahalb <= i) & (i <= ahaub)) FLOW __norm {EAssume: 94,:res = a[i] FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][ ahalb ahaub](dom(a,ahalb,ahaub)) & ((ahalb <= i) & (i <= ahaub)) FLOW __norm {EAssume: 93,:res = a[i] FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][ ahalb ahaub](dom(a,ahalb,ahaub)) & ((ahalb <= i) & (i <= ahaub)) FLOW __norm {EAssume: 93,:res = a[i] FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 92,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 92,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 !(a)->

(None,[]): EAssume: 91,:res FLOW __norm

	 a->

(None,[]): EAssume: 90,:!(res) FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 !(a)->

(None,[]): EAssume: 91,:res FLOW __norm

	 a->

(None,[]): EAssume: 90,:!(res) FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 !(a)->

(None,[]): case{ECase:

	 !(b)->

(None,[]): EAssume: 89,:!(res) FLOW __norm

	 b->

(None,[]): EAssume: 88,:res FLOW __norm
}

	 a->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 87,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 !(a)->

(None,[]): case{ECase:

	 !(b)->

(None,[]): EAssume: 89,:!(res) FLOW __norm

	 b->

(None,[]): EAssume: 88,:res FLOW __norm
}

	 a->

(None,[]): EBase: [][]true FLOW __norm {EAssume: 87,:res FLOW __norm}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 !(a)->

(None,[]): EAssume: 86,:!(res) FLOW __norm

	 a->

(None,[]): case{ECase:

	 !(b)->

(None,[]): EAssume: 85,:!(res) FLOW __norm

	 b->

(None,[]): EAssume: 84,:res FLOW __norm
}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 !(a)->

(None,[]): EAssume: 86,:!(res) FLOW __norm

	 a->

(None,[]): case{ECase:

	 !(b)->

(None,[]): EAssume: 85,:!(res) FLOW __norm

	 b->

(None,[]): EAssume: 84,:res FLOW __norm
}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a < b->

(None,[]): EAssume: 83,:!(res) FLOW __norm

	 a >= b->

(None,[]): EAssume: 82,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a < b->

(None,[]): EAssume: 83,:!(res) FLOW __norm

	 a >= b->

(None,[]): EAssume: 82,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a <= b->

(None,[]): EAssume: 81,:!(res) FLOW __norm

	 a > b->

(None,[]): EAssume: 80,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a <= b->

(None,[]): EAssume: 81,:!(res) FLOW __norm

	 a > b->

(None,[]): EAssume: 80,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a > b->

(None,[]): EAssume: 79,:!(res) FLOW __norm

	 a <= b->

(None,[]): EAssume: 78,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a > b->

(None,[]): EAssume: 79,:!(res) FLOW __norm

	 a <= b->

(None,[]): EAssume: 78,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a >= b->

(None,[]): EAssume: 77,:!(res) FLOW __norm

	 a < b->

(None,[]): EAssume: 76,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a >= b->

(None,[]): EAssume: 77,:!(res) FLOW __norm

	 a < b->

(None,[]): EAssume: 76,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EAssume: 75,:res FLOW __norm

	 a = b->

(None,[]): EAssume: 74,:!(res) FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EAssume: 75,:res FLOW __norm

	 a = b->

(None,[]): EAssume: 74,:!(res) FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EAssume: 73,:res FLOW __norm

	 a = b->

(None,[]): EAssume: 72,:!(res) FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EAssume: 73,:res FLOW __norm

	 a = b->

(None,[]): EAssume: 72,:!(res) FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EAssume: 71,:!(res) FLOW __norm

	 a = b->

(None,[]): EAssume: 70,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EAssume: 71,:!(res) FLOW __norm

	 a = b->

(None,[]): EAssume: 70,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EAssume: 69,:!(res) FLOW __norm

	 a = b->

(None,[]): EAssume: 68,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a != b->

(None,[]): EAssume: 69,:!(res) FLOW __norm

	 a = b->

(None,[]): EAssume: 68,:res FLOW __norm
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a < 0->

(None,[]): case{ECase:

	 ((0-1) < b) & (b < 1)->

(None,[]): EAssume: 67,:true FLOW __DivByZeroErr

	 b <= 0-1->

(None,[]): EAssume: 66,:(EX q . true & (a = ((b) * (q))+res) & ((q >= 1) & ((0 <= res) & (res <= (0-b)-1))))

	 b >= 1->

(None,[]): EAssume: 65,:(EX q . true & (a = ((b) * (q))+res) & ((q <= 0-1) & ((0 <= res) & (res <= b-1))))
}

	 a >= 0->

(None,[]): case{ECase:

	 ((0-1) < b) & (b < 1)->

(None,[]): EAssume: 64,:true FLOW __DivByZeroErr

	 b <= 0-1->

(None,[]): EAssume: 63,:(EX q . true & (a = ((b) * (q))+res) & ((q <= 0) & ((0 <= res) & (res <= (0-b)-1))))

	 b >= 1->

(None,[]): case{ECase:

	 a >= b->

(None,[]): case{ECase:

	 a >= (2) * (b)->

(None,[]): EAssume: 62,:(EX q . true & (a = ((b) * (q))+res) & ((q >= 0) & ((0 <= res) & (res <= b-1))))

	 a < (2) * (b)->

(None,[]): EAssume: 61,:res = a-b FLOW __norm
}

	 a < b->

(None,[]): EAssume: 60,:res = a FLOW __norm
}
}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a < 0->

(None,[]): case{ECase:

	 ((0-1) < b) & (b < 1)->

(None,[]): EAssume: 67,:true FLOW __DivByZeroErr

	 b <= 0-1->

(None,[]): EAssume: 66,:(EX q . true & (a = ((b) * (q))+res) & ((q >= 1) & ((0 <= res) & (res <= (0-b)-1))))

	 b >= 1->

(None,[]): EAssume: 65,:(EX q . true & (a = ((b) * (q))+res) & ((q <= 0-1) & ((0 <= res) & (res <= b-1))))
}

	 a >= 0->

(None,[]): case{ECase:

	 ((0-1) < b) & (b < 1)->

(None,[]): EAssume: 64,:true FLOW __DivByZeroErr

	 b <= 0-1->

(None,[]): EAssume: 63,:(EX q . true & (a = ((b) * (q))+res) & ((q <= 0) & ((0 <= res) & (res <= (0-b)-1))))

	 b >= 1->

(None,[]): case{ECase:

	 a >= b->

(None,[]): case{ECase:

	 a >= (2) * (b)->

(None,[]): EAssume: 62,:(EX q . true & (a = ((b) * (q))+res) & ((q >= 0) & ((0 <= res) & (res <= b-1))))

	 a < (2) * (b)->

(None,[]): EAssume: 61,:res = a-b FLOW __norm
}

	 a < b->

(None,[]): EAssume: 60,:res = a FLOW __norm
}
}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]b != 0 FLOW __norm {EAssume: 59,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]b != 0 FLOW __norm {EAssume: 59,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 b != 0->

(None,[]): EAssume: 58,:true FLOW __norm

	 b = 0->

(None,[]): EBase: [][]false*(false)( FLOW __norm) {EAssume: 57,:false*(false)( FLOW __norm)}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 b != 0->

(None,[]): EAssume: 58,:true FLOW __norm

	 b = 0->

(None,[]): EBase: [][]false*(false)( FLOW __norm) {EAssume: 57,:false*(false)( FLOW __norm)}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {case{ECase:

	 b = 0->

(None,[]): EAssume: 56,:true FLOW __DivByZeroErr

	 b != 0->

(None,[]): EAssume: 55,:true FLOW __norm
}}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {case{ECase:

	 b = 0->

(None,[]): EAssume: 56,:true FLOW __DivByZeroErr

	 b != 0->

(None,[]): EAssume: 55,:true FLOW __norm
}}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): case{ECase:

	 a < 0->

(None,[]): case{ECase:

	 ((0-1) < b) & (b < 1)->

(None,[]): EAssume: 54,:true FLOW __DivByZeroErr

	 b <= 0-1->

(None,[]): EAssume: 53,:(EX r . true & (a = ((b) * (res))+r) & ((res >= 1) & ((0 <= r) & (r <= (0-b)-1))))

	 b >= 1->

(None,[]): EAssume: 52,:(EX r . true & (a = ((b) * (res))+r) & ((res <= 0-1) & ((0 <= r) & (r <= b-1))))
}

	 a >= 0->

(None,[]): case{ECase:

	 ((0-1) < b) & (b < 1)->

(None,[]): EAssume: 51,:true FLOW __DivByZeroErr

	 b <= 0-1->

(None,[]): EAssume: 50,:(EX r . true & (a = ((b) * (res))+r) & ((res <= 0) & ((0 <= r) & (r <= (0-b)-1))))

	 b >= 1->

(None,[]): EAssume: 49,:(EX r . true & (a = ((b) * (res))+r) & ((res >= 0) & ((0 <= r) & (r <= b-1))))
}
}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): case{ECase:

	 a < 0->

(None,[]): case{ECase:

	 ((0-1) < b) & (b < 1)->

(None,[]): EAssume: 54,:true FLOW __DivByZeroErr

	 b <= 0-1->

(None,[]): EAssume: 53,:(EX r . true & (a = ((b) * (res))+r) & ((res >= 1) & ((0 <= r) & (r <= (0-b)-1))))

	 b >= 1->

(None,[]): EAssume: 52,:(EX r . true & (a = ((b) * (res))+r) & ((res <= 0-1) & ((0 <= r) & (r <= b-1))))
}

	 a >= 0->

(None,[]): case{ECase:

	 ((0-1) < b) & (b < 1)->

(None,[]): EAssume: 51,:true FLOW __DivByZeroErr

	 b <= 0-1->

(None,[]): EAssume: 50,:(EX r . true & (a = ((b) * (res))+r) & ((res <= 0) & ((0 <= r) & (r <= (0-b)-1))))

	 b >= 1->

(None,[]): EAssume: 49,:(EX r . true & (a = ((b) * (res))+r) & ((res >= 0) & ((0 <= r) & (r <= b-1))))
}
}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 48,:res = (a) * (b) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 48,:res = (a) * (b) FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 47,:res = a-b FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 47,:res = a-b FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 46,:res = a+b FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][]true FLOW __norm {EAssume: 46,:res = a+b FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll<a, @L, @L>@M[1])))*(true)( FLOW __norm) {EAssume: 42,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_217_61 flted_217_60 . (true ; (true ; (x::ll<a, flted_217_60, flted_217_61>@M[1])))*((flted_217_60 = @L) & (flted_217_61 = @L))( FLOW __norm)) {EAssume: 42,:true FLOW __norm}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll0<n, 5>@M[1])))*(true)( FLOW __norm) {EAssume: 38,:(true ; (true ; (x::ll0<n, 8>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_205_65 . (true ; (true ; (x::ll0<n, flted_205_65>@M[1])))*(flted_205_65 = 5)( FLOW __norm)) {EAssume: 38,:(EX flted_206_64 . (true ; (true ; (x::ll0<n, flted_206_64>@M[1])))*(flted_206_64 <= 8)( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll2<n, @M>@M[1])))*(true)( FLOW __norm) {EAssume: 34,:(true ; (true ; (x::ll2<n, @I>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_192_70 . (true ; (true ; (x::ll2<n, flted_192_70>@M[1])))*(flted_192_70 = @M)( FLOW __norm)) {EAssume: 34,:(EX flted_193_69 . (true ; (true ; (x::ll2<n, flted_193_69>@M[1])))*(flted_193_69<:@I)( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll2<n, @I>@M[1])))*(true)( FLOW __norm) {EAssume: 30,:(true ; (true ; (x::ll2<n, @M>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_178_76 . (true ; (true ; (x::ll2<n, flted_178_76>@M[1])))*(flted_178_76 = @I)( FLOW __norm)) {EAssume: 30,:(EX flted_179_75 . (true ; (true ; (x::ll2<n, flted_179_75>@M[1])))*(flted_179_75<:@M)( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll2<n, @I>@M[1])))*(true)( FLOW __norm) {EAssume: 28,:(true ; (true ; (x::ll2<n, @M>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_162_82 . (true ; (true ; (x::ll2<n, flted_162_82>@M[1])))*(flted_162_82 = @I)( FLOW __norm)) {EAssume: 28,:(EX flted_163_81 . (true ; (true ; (x::ll2<n, flted_163_81>@M[1])))*(flted_163_81<:@M)( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll2<n, @A>@M[1])))*(true)( FLOW __norm) {EAssume: 24,:(true ; (true ; (x::ll2<n, @A>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_147_88 . (true ; (true ; (x::ll2<n, flted_147_88>@M[1])))*(flted_147_88 = @A)( FLOW __norm)) {EAssume: 24,:(EX flted_148_87 . (true ; (true ; (x::ll2<n, flted_148_87>@M[1])))*(flted_148_87<:@A)( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll1<n, @M>@M[1])))*(true)( FLOW __norm) {EAssume: 20,:(true ; (true ; (x::ll1<n, @I>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_132_94 . (true ; (true ; (x::ll1<n, flted_132_94>@M[1])))*(flted_132_94 = @M)( FLOW __norm)) {EAssume: 20,:(EX flted_133_93 . (true ; (true ; (x::ll1<n, flted_133_93>@M[1])))*(flted_133_93<:@I)( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll1<n, @I>@M[1])))*(true)( FLOW __norm) {EAssume: 16,:(true ; (true ; (x::ll1<n, @M>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_118_100 . (true ; (true ; (x::ll1<n, flted_118_100>@M[1])))*(flted_118_100 = @I)( FLOW __norm)) {EAssume: 16,:(EX flted_119_99 . (true ; (true ; (x::ll1<n, flted_119_99>@M[1])))*(flted_119_99<:@M)( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll1<n, @M>@M[1])))*(true)( FLOW __norm) {EAssume: 12,:(true ; (true ; (x::ll1<n, @M>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_104_106 . (true ; (true ; (x::ll1<n, flted_104_106>@M[1])))*(flted_104_106 = @M)( FLOW __norm)) {EAssume: 12,:(EX flted_105_105 . (true ; (true ; (x::ll1<n, flted_105_105>@M[1])))*(flted_105_105<:@M)( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll1<n, @I>@M[1])))*(true)( FLOW __norm) {EAssume: 8,:(true ; (true ; (x::ll1<n, @I>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_90_112 . (true ; (true ; (x::ll1<n, flted_90_112>@M[1])))*(flted_90_112 = @I)( FLOW __norm)) {EAssume: 8,:(EX flted_91_111 . (true ; (true ; (x::ll1<n, flted_91_111>@M[1])))*(flted_91_111<:@I)( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll<n, @M, @I>@M[1])))*(true)( FLOW __norm) {EAssume: 4,:(true ; (true ; (x::ll<n, @M, @M>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_76_120 flted_76_119 . (true ; (true ; (x::ll<n, flted_76_119, flted_76_120>@M[1])))*((flted_76_119 = @M) & (flted_76_120 = @I))( FLOW __norm)) {EAssume: 4,:(EX flted_77_118 flted_77_117 . (true ; (true ; (x::ll<n, flted_77_117, flted_77_118>@M[1])))*((flted_77_117<:@M) & (flted_77_118<:@M))( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll<n, @M, @I>@M[1])))*(true)( FLOW __norm) {EAssume: 2,:(true ; (true ; (x::ll<n, @M, @M>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_65_130 flted_65_129 . (true ; (true ; (x::ll<n, flted_65_129, flted_65_130>@M[1])))*((flted_65_129 = @M) & (flted_65_130 = @I))( FLOW __norm)) {EAssume: 2,:(EX flted_66_128 flted_66_127 . (true ; (true ; (x::ll<n, flted_66_127, flted_66_128>@M[1])))*((flted_66_127<:@M) & (flted_66_128<:@M))( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = 

(None,[]): EBase: [][](true ; (true ; (x::ll<n, @M, @I>@M[1])))*(true)( FLOW __norm) {EAssume: 1,:(true ; (true ; (x::ll<n, @M, @M>@M[1])))*(true)( FLOW __norm)}
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = 

(None,[]): EBase: [][](EX flted_58_139 flted_58_138 . (true ; (true ; (x::ll<n, flted_58_138, flted_58_139>@M[1])))*((flted_58_138 = @M) & (flted_58_139 = @I))( FLOW __norm)) {EAssume: 1,:(EX flted_59_137 flted_59_136 . (true ; (true ; (x::ll<n, flted_59_136, flted_59_137>@M[1])))*((flted_59_136<:@M) & (flted_59_137<:@M))( FLOW __norm))}
case_normalize_struc_formula :: CHECK POINT 1 ==> nf = EBase: [][]false*(false)( FLOW __false) 
case_normalize_struc_formula :: CHECK POINT 2 ==> nf = EBase: [][]false*(false)( FLOW __false) 
compute_ann_list@1
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@1 EXIT out :, @L, @A

compute_ann_list@2
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@2 EXIT out :, @A, @L

compute_ann_list@3
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@3 EXIT out :, @A, @L

compute_ann_list@4
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@4 EXIT out :, @L, @A

compute_ann_list@5
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@M
compute_ann_list@5 EXIT out :, @M, @A

compute_ann_list@6
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@6 EXIT out :, @A, @L

compute_ann_list@7
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@7 EXIT out :, @L, @A

compute_ann_list@8
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@M
compute_ann_list@8 EXIT out :, @M, @A

compute_ann_list@9
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@9 EXIT out :, @A, @L

compute_ann_list@10
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@10 EXIT out :, @L, @A

compute_ann_list@11
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@M
compute_ann_list@11 EXIT out :, @M, @A

compute_ann_list@12
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@12 EXIT out :, @A, @L

compute_ann_list@13
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@13 EXIT out :, @A, @L

compute_ann_list@14
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@14 EXIT out :, @L, @A

compute_ann_list@15
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@M
compute_ann_list@15 EXIT out :, @M, @A

compute_ann_list@16
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@16 EXIT out :, @A, @L

compute_ann_list@17
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@17 EXIT out :, @L, @A

compute_ann_list@18
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@M
compute_ann_list@18 EXIT out :, @M, @A

compute_ann_list@19
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@19 EXIT out :, @A, @L

compute_ann_list@20
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@20 EXIT out :, @L, @A

compute_ann_list@21
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@M
compute_ann_list@21 EXIT out :, @M, @A

compute_ann_list@22
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@22 EXIT out :, @A, @L

compute_ann_list@23
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@23 EXIT out :, @L, @A

compute_ann_list@24
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@M
compute_ann_list@24 EXIT out :, @M, @A

compute_ann_list@25
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@25 EXIT out :, @A, @L

compute_ann_list@26
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@26 EXIT out :, @L, @A

compute_ann_list@27
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@M
compute_ann_list@27 EXIT out :, @M, @A

compute_ann_list@28
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@28 EXIT out :, @A, @L

compute_ann_list@29
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@L
compute_ann_list@29 EXIT out :, @L, @A

compute_ann_list@30
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, val
compute_ann_list inp3 :@M
compute_ann_list@30 EXIT out :, @M, @A

compute_ann_list@31
compute_ann_list inp1 :, val, next
compute_ann_list inp2 :, next
compute_ann_list inp3 :@L
compute_ann_list@31 EXIT out :, @A, @L

Checking procedure update22$node... 
(andreeac)Specs :
 ((None,[]),EBase exists (Expl)(Impl)[n](ex)EXISTS(flted_162_84: x::ll2<n,flted_162_84>@M[Orig][LHSCase]&
                  flted_162_84=@I&{FLOW,(20,21)=__norm})[]
                    EBase true&MayLoop&{FLOW,(1,23)=__flow}[]
                            EAssume 28::
                              EXISTS(n_85,
                              flted_163_83: x::ll2<n_85,flted_163_83>@M[Orig][LHSCase]&
                              flted_163_83<:@M & n_85=n&
                              {FLOW,(20,21)=__norm})[])
(andreeac) ctx: es_formula: 
  EXISTS(flted_162_84: x::ll2<n,flted_162_84>@M[Orig][LHSCase]&x'=x & 
  flted_162_84=@I & MayLoop&{FLOW,(20,21)=__norm})[]
 es_pure: true
 es_orig_ante: None
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: None
 es_term_err: None
 es_var_zero_perm: 
heap_entail_failesc_prefix_init#1@32
heap_entail_failesc_prefix_init#1 inp1 : List of Failesc Context: [FEC(0, 0, 1  )]

Successful States:
[
 Label: 
 State:EXISTS(flted_162_84: x::ll2<n,flted_162_84>@M[Orig][LHSCase]&x'=x & flted_162_84=@I & MayLoop&{FLOW,(20,21)=__norm})[]

 ]
heap_entail_failesc_prefix_init#1 inp2 : ((None,[]),ECase case {
                   x'=null -> ((None,[]),EBase true&true&
                                               {FLOW,(20,21)=__norm}[]
                                                 EBase true&Term&
                                                       {FLOW,(1,23)=__flow}[]
                                                         EAssume 260::
                                                           true&res & 
                                                           x'=null&
                                                           {FLOW,(20,21)=__norm}[])
                   ;
                   x'!=null -> ((None,[]),EBase true&true&
                                                {FLOW,(20,21)=__norm}[]
                                                  EBase true&Term&
                                                        {FLOW,(1,23)=__flow}[]
                                                          EAssume 261::
                                                            true&!(res) & 
                                                            x'!=null&
                                                            {FLOW,(20,21)=__norm}[])
                   
                   })
heap_entail_failesc_prefix_init#1@32 EXIT out : List of Failesc Context: [FEC(0, 0, 1  )]

Successful States:
[
 Label: 
 State:or[x::ll2<n,flted_162_963>@M[Orig][LHSCase]&x'=x & flted_162_963=@I & x'=null & res & x'=null&{FLOW,(20,21)=__norm}[]
          es_var_measures: MayLoop
; 
         x::ll2<n,flted_162_965>@M[Orig][LHSCase]&x'=x & flted_162_965=@I & x'!=null & !(res) & x'!=null&{FLOW,(20,21)=__norm}[]
         es_var_measures: MayLoop
]
 ]

(andreeac) bind 15 to deleteWN1 ctx:  List of Failesc Context: [FEC(0, 0, 1  [(144::,1 ); (144::,1 )])]

Successful States:
[
 Label: [(144::,1 ); (144::,1 )]
 State:x::ll2<n,flted_162_965>@M[Orig][LHSCase]&x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782')&{FLOW,(20,21)=__norm}[]
       es_var_measures: MayLoop

 ]
WN1 tmp_ctx:  List of Failesc Context: [FEC(0, 0, 1  [(144::,1 ); (144::,1 )])]

Successful States:
[
 Label: [(144::,1 ); (144::,1 )]
 State:x::ll2<n,flted_162_965>@M[Orig][LHSCase]&x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782')&{FLOW,(20,21)=__norm}[]
       es_var_measures: MayLoop

 ]

(andreeac)bind: unfolded context:
 List of Failesc Context: [FEC(0, 0, 1  [(144::,1 ); (144::,1 )])]

Successful States:
[
 Label: [(144::,1 ); (144::,1 )]
 State:EXISTS(v1_976,flted_21_977,a_978,q_979: x'::node<a_978@M,q_979@flted_162_965>@M[Orig] * q_979::ll2<flted_21_977,v1_976>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_977+1=n & v1_976=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782')&{FLOW,(20,21)=__norm})[]
       es_var_measures: MayLoop

 ]

(andreea)struc_vheap:  EBase x'::node<val_169_780'@A,next_169_781'@L>@L[Orig]&true&
       {FLOW,(1,23)=__flow}[]
replace_list_ann@34@33
replace_list_ann inp1 :[@flted_162_965, @M, ]; 
replace_list_ann inp2 :[@L, @A, ]; 
replace_list_ann@34 EXIT out :[@[@flted_162_965], @M, ]; 

(andreeac) spatial_ctx_extarct helper initial f:  x'::node<a_987@M,q_988@flted_162_965>@M[Orig]
(andreeac) spatial_ctx_extarct helper new f:  x'::node<a_987@M,q_988@[@flted_162_965]>@M[Orig]
(andreeac) lhs_rest spatial_ctx_extract  x'::node<a_987@M,q_988@[@flted_162_965]>@M[Orig] * 
q_988::ll2<flted_21_986,v1_985>@M[Orig]
(andreeac) f0:  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * 
q_988::ll2<flted_21_986,v1_985>@M[Orig]
(andreeac) lhs_rest:  x'::node<a_987@M,q_988@[@flted_162_965]>@M[Orig] * 
q_988::ll2<flted_21_986,v1_985>@M[Orig]
(andreeac) initial estate  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * q_988::ll2<flted_21_986,v1_985>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782')&{FLOW,(20,21)=__norm}[]
  es_var_measures: MayLoop
(andreeac) new estate  x'::node<a_987@M,q_988@[@flted_162_965]>@M[Orig] * q_988::ll2<flted_21_986,v1_985>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782')&{FLOW,(20,21)=__norm}[]
  es_var_measures: MayLoop

(andreeac)[do_match] input LHS =  es_formula: 
  x'::node<a_987@M,q_988@[@flted_162_965]>@M[Orig] * 
  q_988::ll2<flted_21_986,v1_985>@M[Orig]&0<=0 & 0<=flted_162_965 & 
  flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & 
  x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782')&
  {FLOW,(20,21)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: Some(MayLoop)
 es_term_err: None
 es_var_zero_perm: 
[do_match] RHS =  true&true&{FLOW,(1,23)=__flow}[]
[do_match] matching  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] |-  x'::node<val_169_780'@A,next_169_781'@L>@L[Orig]

subtype_ann_gen@35@33
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :?
subtype_ann_gen inp3 :?
subtype_ann_gen@35 EXIT out :(true,None,None)

subtype_ann_gen@36@33
subtype_ann_gen inp1 :[]
subtype_ann_gen inp2 :?
subtype_ann_gen inp3 :?
subtype_ann_gen@36 EXIT out :(true,None,Some( flted_162_965<:@L))

(andreeac) solver.ml r_h:  true
(andreeac) solver.ml l_h: x'::node<a_987@M,q_988@[@flted_162_965]>@M[Orig] * 
q_988::ll2<flted_21_986,v1_985>@M[Orig]cris: to_rhs =  flted_162_965<:@L

cris: new_consumed =  true
cris: new_ante =  x'::node<a_987@M,q_988@[@flted_162_965]>@M[Orig] * 
q_988::ll2<flted_21_986,v1_985>@M[Orig]&0<=0 & 0<=flted_162_965 & 
flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & 
x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & 
val_169_780'=a_987 & next_169_781'=q_988&{FLOW,(20,21)=__norm}[]
heap_entail_failesc_prefix_init#1@33
heap_entail_failesc_prefix_init#1 inp1 : List of Failesc Context: [FEC(0, 0, 1  [(144::,1 ); (144::,1 )])]

Successful States:
[
 Label: [(144::,1 ); (144::,1 )]
 State:EXISTS(v1_976,flted_21_977,a_978,q_979: x'::node<a_978@M,q_979@flted_162_965>@M[Orig] * q_979::ll2<flted_21_977,v1_976>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_977+1=n & v1_976=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782')&{FLOW,(20,21)=__norm})[]
       es_var_measures: MayLoop

 ]
heap_entail_failesc_prefix_init#1 inp2 : EBase x'::node<val_169_780'@A,next_169_781'@L>@L[Orig]&true&
       {FLOW,(1,23)=__flow}[]
heap_entail_failesc_prefix_init#1@33 EXIT out : List of Failesc Context: [FEC(0, 0, 1  [(144::,1 ); (144::,1 )])]

Successful States:
[
 Label: [(144::,1 ); (144::,1 )]
 State:x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * q_988::ll2<flted_21_986,v1_985>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & val_169_780'=a_987 & next_169_781'=q_988&{FLOW,(20,21)=__norm}[]
       es_var_measures: MayLoop

 ]

dprint: ll-ann-param-no-infer.ss:170: ctx:  List of Failesc Context: [FEC(0, 0, 1  [(144::,1 ); (144::,1 )])]

Successful States:
[
 Label: [(144::,1 ); (144::,1 )]
 State:x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * q_988::ll2<flted_21_986,v1_985>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & y_86'=q_988&{FLOW,(20,21)=__norm}[]
       es_var_measures: MayLoop

 ]

(andreeac) lhs_rest spatial_ctx_extract  x'::node<a_987@M,q_988@flted_162_965>@M[Orig]
(andreeac) f0:  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * 
q_988::ll2<flted_21_986,v1_985>@M[Orig]
(andreeac) lhs_rest:  x'::node<a_987@M,q_988@flted_162_965>@M[Orig]
(andreeac) initial estate  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * q_988::ll2<flted_21_986,v1_985>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & y_86'=q_988&{FLOW,(20,21)=__norm}[]
  es_var_measures: MayLoop
(andreeac) new estate  x'::node<a_987@M,q_988@flted_162_965>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & y_86'=q_988&{FLOW,(20,21)=__norm}[]
  es_var_measures: MayLoop

(andreeac)[do_match] input LHS =  es_formula: 
  x'::node<a_987@M,q_988@flted_162_965>@M[Orig]&0<=0 & 0<=flted_162_965 & 
  flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & 
  x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & 
  y_86'=q_988&{FLOW,(20,21)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: true
 es_evars: [flted_162_993]
 es_gen_impl_vars: [n_990]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: Some(MayLoop)
 es_term_err: None
 es_var_zero_perm: 
[do_match] RHS =  true&true&{FLOW,(20,21)=__norm}[]
[do_match] matching  q_988::ll2<flted_21_986,v1_985>@M[Orig] |-  y_86'::ll2<n_990,flted_162_993>@M[Orig][LHSCase]

(andreeac) solver.ml r_h:  true
(andreeac) solver.ml l_h: x'::node<a_987@M,q_988@flted_162_965>@M[Orig]cris: to_rhs =  true

cris: new_consumed =  true
cris: new_ante =  x'::node<a_987@M,q_988@flted_162_965>@M[Orig]&0<=0 & 0<=flted_162_965 & 
flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & 
x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & 
y_86'=q_988 & n_990=flted_21_986&{FLOW,(20,21)=__norm}[]
heap_entail_failesc_prefix_init#1@37
heap_entail_failesc_prefix_init#1 inp1 : List of Failesc Context: [FEC(0, 0, 1  [(144::,1 ); (144::,1 )])]

Successful States:
[
 Label: [(144::,1 ); (144::,1 )]
 State:x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * q_988::ll2<flted_21_986,v1_985>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & y_86'=q_988&{FLOW,(20,21)=__norm}[]
       es_var_measures: MayLoop

 ]
heap_entail_failesc_prefix_init#1 inp2 : ((None,[]),EBase exists (Expl)(Impl)[n_990](ex)EXISTS(flted_162_84: 
                  y_86'::ll2<n_990,flted_162_84>@M[Orig][LHSCase]&
                  flted_162_84=@I&{FLOW,(20,21)=__norm})[]
                    EBase true&MayLoop&{FLOW,(1,23)=__flow}[]
                            EAssume 28::
                              EXISTS(n_937,
                              flted_163_938: y_86'::ll2<n_937,flted_163_938>@M[Orig][LHSCase]&
                              flted_163_938<:@M & n_937=n_990 & 0<=n_990&
                              {FLOW,(20,21)=__norm})[])
heap_entail_failesc_prefix_init#1@37 EXIT out : List of Failesc Context: [FEC(0, 0, 1  [(144::,1 ); (144::,1 )])]

Successful States:
[
 Label: [(144::,1 ); (144::,1 )]
 State:EXISTS(n_997,flted_163_998: x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * y_86'::ll2<n_997,flted_163_998>@M[Orig][LHSCase]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & y_86'=q_988 & n_990=flted_21_986 & flted_163_998<:@M & n_997=n_990 & 0<=n_990&{FLOW,(20,21)=__norm})[]
       es_var_measures: MayLoop

 ]

 WN 1 : List of Partial Context: [PC(0, 2)]
Failed States:

Successful States:
[
 Label: [(144::,0 ); (144::,0 )]
 State:es_formula: 
        x::ll2<n,flted_162_963>@M[Orig][LHSCase]&x'=x & flted_162_963=@I & 
        x'=null & v_bool_165_782' & x'=null & v_bool_165_782'&
        {FLOW,(14,15)=__Ret}[]
       es_pure: true
       es_orig_ante: None
       es_heap: true
       es_aux_conseq: true
       es_must_error: None
       es_var_measures: Some(MayLoop)
       es_term_err: None
       es_var_zero_perm: ;
 Label: [(144::,1 ); (144::,1 )]
 State:es_formula: 
        EXISTS(flted_163_998: x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * 
        y_86'::ll2<n_990,flted_163_998>@M[Orig][LHSCase]&0<=0 & 
        0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & 
        flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & 
        !(v_bool_165_782') & y_86'=q_988 & n_990=flted_21_986 & 
        flted_163_998<:@M & 0<=n_990&{FLOW,(20,21)=__norm})[]
       es_pure: true
       es_orig_ante: None
       es_heap: true
       es_aux_conseq: true
       es_must_error: None
       es_var_measures: Some(MayLoop)
       es_term_err: None
       es_var_zero_perm: 
 ]
 WN 2 :  List of Partial Context: [PC(0, 2)]
Failed States:

Successful States:
[
 Label: [(144::,0 ); (144::,0 )]
 State:es_formula: 
        x::ll2<n,flted_162_963>@M[Orig][LHSCase]&x'=x & flted_162_963=@I & 
        x'=null & v_bool_165_782' & x'=null & v_bool_165_782'&
        {FLOW,(20,21)=__norm}[]
       es_pure: true
       es_orig_ante: None
       es_heap: true
       es_aux_conseq: true
       es_must_error: None
       es_var_measures: Some(MayLoop)
       es_term_err: None
       es_var_zero_perm: ;
 Label: [(144::,1 ); (144::,1 )]
 State:es_formula: 
        EXISTS(flted_163_998: x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * 
        y_86'::ll2<n_990,flted_163_998>@M[Orig][LHSCase]&0<=0 & 
        0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & 
        flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & 
        !(v_bool_165_782') & y_86'=q_988 & n_990=flted_21_986 & 
        flted_163_998<:@M & 0<=n_990&{FLOW,(20,21)=__norm})[]
       es_pure: true
       es_orig_ante: None
       es_heap: true
       es_aux_conseq: true
       es_must_error: None
       es_var_measures: Some(MayLoop)
       es_term_err: None
       es_var_zero_perm: 
 ]got into check_post on the succCtx branch

(andreeac)context before post:  List of Partial Context: [PC(0, 2)]
Failed States:

Successful States:
[
 Label: [(144::,0 ); (144::,0 )]
 State:es_formula: 
        x::ll2<n,flted_162_963>@M[Orig][LHSCase]&x'=x & flted_162_963=@I & 
        x'=null & v_bool_165_782' & x'=null & v_bool_165_782'&
        {FLOW,(20,21)=__norm}[]
       es_pure: true
       es_orig_ante: None
       es_heap: true
       es_aux_conseq: true
       es_must_error: None
       es_var_measures: Some(MayLoop)
       es_term_err: None
       es_var_zero_perm: ;
 Label: [(144::,1 ); (144::,1 )]
 State:es_formula: 
        EXISTS(flted_163_998: x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * 
        y_86'::ll2<n_990,flted_163_998>@M[Orig][LHSCase]&0<=0 & 
        0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & 
        flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & 
        !(v_bool_165_782') & y_86'=q_988 & n_990=flted_21_986 & 
        flted_163_998<:@M & 0<=n_990&{FLOW,(20,21)=__norm})[]
       es_pure: true
       es_orig_ante: None
       es_heap: true
       es_aux_conseq: true
       es_must_error: None
       es_var_measures: Some(MayLoop)
       es_term_err: None
       es_var_zero_perm: 
 ]
(andreeac) lhs_rest spatial_ctx_extract  true
(andreeac) f0:  x::ll2<n,flted_162_963>@M[Orig][LHSCase]
replace_list_ann@38
replace_list_ann inp1 :[@flted_162_965, @M, ]; 
replace_list_ann inp2 :[]; 
replace_list_ann@38 EXIT out :[@flted_162_965, @M, ]; 

(andreeac) spatial_ctx_extarct helper initial f:  x'::node<a_987@M,q_988@flted_162_965>@M[Orig]
(andreeac) spatial_ctx_extarct helper new f:  x'::node<a_987@M,q_988@flted_162_965>@M[Orig]
(andreeac) lhs_rest spatial_ctx_extract  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * 
y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]
(andreeac) f0:  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * 
y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]
replace_list_ann@39
replace_list_ann inp1 :[@flted_162_965, @M, ]; 
replace_list_ann inp2 :[@flted_163_1007, @M, ]; 
replace_list_ann@39 EXIT out :[@flted_162_965, @A, ]; 

(andreeac) spatial_ctx_extarct helper initial f:  x'::node<a_987@M,q_988@flted_162_965>@M[Orig]
(andreeac) spatial_ctx_extarct helper new f:  x'::node<a_987@A,q_988@flted_162_965>@M[Orig]
(andreeac) lhs_rest spatial_ctx_extract  x'::node<a_987@A,q_988@flted_162_965>@M[Orig] * 
y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]
(andreeac) f0:  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * 
y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]
(andreeac) lhs_rest:  x'::node<a_987@A,q_988@flted_162_965>@M[Orig] * 
y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]
(andreeac) initial estate  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] * y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & y_86'=q_988 & n_990=flted_21_986 & flted_163_1005<:@M & 0<=n_990&{FLOW,(20,21)=__norm}[]
  es_var_measures: MayLoop
(andreeac) new estate  x'::node<a_987@A,q_988@flted_162_965>@M[Orig] * y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & y_86'=q_988 & n_990=flted_21_986 & flted_163_1005<:@M & 0<=n_990&{FLOW,(20,21)=__norm}[]
  es_var_measures: MayLoop

(andreeac)[do_match] input LHS =  es_formula: 
  x'::node<a_987@A,q_988@flted_162_965>@M[Orig] * 
  y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]&0<=0 & 
  0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & 
  flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & 
  !(v_bool_165_782') & y_86'=q_988 & n_990=flted_21_986 & 
  flted_163_1005<:@M & 0<=n_990&{FLOW,(20,21)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: true
 es_evars: [v1_1015; flted_21_1016; n_1006; flted_163_1007]
 es_gen_impl_vars: [a_1008; q_1009]
 es_rhs_eqset: [(n_1006,n); (v1_1015,flted_163_1007)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: Some(MayLoop)
 es_term_err: None
 es_var_zero_perm: 
[do_match] RHS =  q_1009::ll2<flted_21_1016,v1_1015>@M[Orig]&true&{FLOW,(1,23)=__flow}[]
[do_match] matching  x'::node<a_987@M,q_988@flted_162_965>@M[Orig] |-  x::node<a_1008@M,q_1009@flted_163_1007>@M[Orig]

subtype_ann_gen@40
subtype_ann_gen inp1 :[a_1008,q_1009]
subtype_ann_gen inp2 :?
subtype_ann_gen inp3 :?
subtype_ann_gen@40 EXIT out :(true,None,None)

subtype_ann_gen@41
subtype_ann_gen inp1 :[a_1008,q_1009]
subtype_ann_gen inp2 :?
subtype_ann_gen inp3 :?
subtype_ann_gen@41 EXIT out :(true,None,Some( flted_162_965<:flted_163_1007))

(andreeac) solver.ml r_h:  q_1009::ll2<flted_21_1016,v1_1015>@M[Orig]
(andreeac) solver.ml l_h: x'::node<a_987@A,q_988@flted_162_965>@M[Orig] * 
y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]cris: to_rhs =  flted_162_965<:flted_163_1007

cris: new_consumed =  true
cris: new_ante =  x'::node<a_987@A,q_988@flted_162_965>@M[Orig] * 
y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]&0<=0 & 0<=flted_162_965 & 
flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & 
x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & 
y_86'=q_988 & n_990=flted_21_986 & flted_163_1005<:@M & 0<=n_990 & 
a_1008=a_987 & q_1009=q_988&{FLOW,(20,21)=__norm}[]
(andreeac) lhs_rest spatial_ctx_extract  x'::node<a_987@A,q_988@flted_162_965>@M[Orig]
(andreeac) f0:  x'::node<a_987@A,q_988@flted_162_965>@M[Orig] * 
y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]
(andreeac) lhs_rest:  x'::node<a_987@A,q_988@flted_162_965>@M[Orig]
(andreeac) initial estate  x'::node<a_987@A,q_988@flted_162_965>@M[Orig] * y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & y_86'=q_988 & n_990=flted_21_986 & flted_163_1005<:@M & 0<=n_990 & a_1008=a_987 & q_1009=q_988&{FLOW,(20,21)=__norm}[]
  es_var_measures: MayLoop
(andreeac) new estate  x'::node<a_987@A,q_988@flted_162_965>@M[Orig]&0<=0 & 0<=flted_162_965 & flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & y_86'=q_988 & n_990=flted_21_986 & flted_163_1005<:@M & 0<=n_990 & a_1008=a_987 & q_1009=q_988&{FLOW,(20,21)=__norm}[]
  es_var_measures: MayLoop

(andreeac)[do_match] input LHS =  es_formula: 
  x'::node<a_987@A,q_988@flted_162_965>@M[Orig]&0<=0 & 0<=flted_162_965 & 
  flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & 
  x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & 
  y_86'=q_988 & n_990=flted_21_986 & flted_163_1005<:@M & 0<=n_990 & 
  a_1008=a_987 & q_1009=q_988&{FLOW,(20,21)=__norm}[]
 es_pure: true
 es_orig_ante: None
 es_heap: true
 es_evars: [v1_1015; flted_21_1016; n_1006; flted_163_1007]
 es_rhs_eqset: [(n_1006,n); (v1_1015,flted_163_1007)]
 es_aux_conseq: true
 es_must_error: None
 es_var_measures: Some(MayLoop)
 es_term_err: None
 es_var_zero_perm: 
[do_match] RHS =  true&flted_162_965<:flted_163_1007&{FLOW,(1,23)=__flow}[]
[do_match] matching  y_86'::ll2<n_990,flted_163_1005>@M[Orig][LHSCase] |-  q_1009::ll2<flted_21_1016,v1_1015>@M[Orig]

(andreeac) solver.ml r_h:  true
(andreeac) solver.ml l_h: x'::node<a_987@A,q_988@flted_162_965>@M[Orig]cris: to_rhs =  true

cris: new_consumed =  true
cris: new_ante =  x'::node<a_987@A,q_988@flted_162_965>@M[Orig]&0<=0 & 0<=flted_162_965 & 
flted_21_986+1=n & v1_985=flted_162_965 & x'=x & flted_162_965=@I & 
x'!=null & !(v_bool_165_782') & x'!=null & !(v_bool_165_782') & 
y_86'=q_988 & n_990=flted_21_986 & flted_163_1005<:@M & 0<=n_990 & 
a_1008=a_987 & q_1009=q_988&{FLOW,(20,21)=__norm}[]
(andreeac)TMP CTX:  List of Partial Context: [PC(0, 1)]
Failed States:

Successful States:
[
 Label: [(144::,0 ); (144::,0 )]
 State:es_formula: 
        true&x=null & n=0 & x'=x & flted_162_963=@I & x'=null & 
        v_bool_165_782' & x'=null & v_bool_165_782' & (n=0 | x=null)&
        {FLOW,(20,21)=__norm}[]
       es_pure: true
       es_orig_ante: None
       es_heap: true
       es_evars: [n_999; flted_163_1000]
       es_aux_conseq: n_999=0
       es_must_error: None
       es_var_measures: Some(MayLoop)
       es_term_err: None
       es_var_zero_perm: 
 ]

(andreeac)New Base true&MayLoop&{FLOW,(1,23)=__flow}[]
(andreeac)New Base EXISTS(flted_162_84: x::ll2<n,flted_162_84>@M[Orig][LHSCase]&
flted_162_84=@I&{FLOW,(20,21)=__norm})[]
(andreeac)!!!! SPECS (after specs_infer) 0  ((None,[]),EBase exists (Expl)(Impl)[n](ex)EXISTS(flted_162_84: x::ll2<n,flted_162_84>@M[Orig][LHSCase]&
                  flted_162_84=@I&{FLOW,(20,21)=__norm})[]
                    EBase true&MayLoop&{FLOW,(1,23)=__flow}[]
                            EAssume 28::
                              EXISTS(n_85,
                              flted_163_83: x::ll2<n_85,flted_163_83>@M[Orig][LHSCase]&
                              flted_163_83<:@M & n_85=n&
                              {FLOW,(20,21)=__norm})[])

Procedure update22$node SUCCESS

Termination checking result:

Stop Omega... 82 invocations 
0 false contexts at: ()

Total verification time: 0.33 second(s)
	Time spent in main process: 0.3 second(s)
	Time spent in child processes: 0.03 second(s)
