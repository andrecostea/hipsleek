// 5.slk (9) lhs & rhs -> false
// TODO : should drop m
// --> (exists m: m<n & 1<=n)
infer [n] n>0 & n>m  |- false.
print residue.

// (13) 
infer [p] x::node<p,q> & m>2  |- x::node<a,b> & a>m.
print residue.
//Inferred Pure:[ 5<=m & m<p]

// (14) 
infer [p] m>2  |- p>m & m>4.
print residue.
//Inferred Pure:[ 5<=m & m<p]
//Should be: (exists m:5<=m & m<p) then fail

// (15) 
infer [m] m>2  |- p>m & m>4.
print residue.
//Inferred Pure:[ 5<=m & m<p]
//Should be: (exists p:5<=m & m<p) then fail

// (14) 
infer [p,m] m>2  |- p>m & m>4.
print residue.
//Inferred Pure:[ 5<=m & m<p]


// (15) 
infer [p,m] m>6  |- p>m & m>4.
print residue.
//Inferred Pure:[ m<p]
//Should be: (exists m:m<p) then fail?

// (15) 
infer [p] m>6  |- p>m & m>4.
print residue.
//Inferred Pure:[ m<p]
//Should be: (exists m:m<p) then fail?

// (15) 
infer [p] m>6  |- p>m & m>z.
print residue.
//Inferred Pure:[ (z+1)<=m & m<p]
//Should be: (exists z,m:(z+1)<=m & m<p) then fail?



//Fail
infer [q] n!=0 |- q::ll<n> .
print residue.
//Fail
infer [x] n<0   |- x::ll<n>.
print residue.
