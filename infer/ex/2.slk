data node {
	int val; 
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> 
  inv n >= 0.

// ok
//infer [y] true |- y::node<a,b>.

// ok
//infer [ia,ib] y::node<ia,ib> |- y::node<a,b>.

// not working
//infer [y] true |- y::node<a,null>.
/*
//must fix inferring of pure condition on empty_rhs
Infer  (1): Fail. (may) cause:(failure_code=213)  true |-  inf_flted_17_31=null (may-bug).
*/

// OK
//infer [m] y::ll<m> |- y::ll<n>.


// not working
//infer [y] true |- y::ll<n>.
/*
result below indicates a base-case unfold which should not
have succeeded! 

!!!:0: 0: [entail:0][post:0]do_base_case_unfold attempt for :  y::ll<inf_27>[Orig][LHSCase]

!!!:0: 0: [entail:0][post:0]IMP #20

!!!:0: 0: [entail:0][post:0]ante:  y=null & inf_27=0 | y!=null & 1<=inf_27

!!!:0: 0: [entail:0][post:0]conseq:  exists(y:y=null | inf_27=0)

!!!:0: 0: [entail:0][post:0]IMP #3.0

!!!:0: 0: [entail:0][post:0]SAT #21

!!!:0: 0: [entail:0][post:0] y=null & inf_27=0 & (y=null | inf_27=0)

!!!:0: 0: [entail:0][post:0]do_base_case_unfold attempt : successful :  y::ll<inf_27>[Orig][LHSCase]
 Start Ante : y::ll<inf_27>[Orig][LHSCase] & true & {FLOW,(17,18)=__norm}
 New Ante : [
  true & y=null & inf_27=0 & (y=null | inf_27=0) & {FLOW,(17,18)=__norm}
  ]

*/



//infer [x] n=0 & x=y  |- y::ll<n>.
// expected pre: x::ll<n31> & n31=n
// expected infer_vars
// expected residue: n31=n & n=0 & x=y & n31>=0

print residue.
/*

infer_heap_nodes
infer var: [x]
new infer var: [inf_n_31]
root: Some(y)
rhs node:  y::ll<n_28>[Orig][LHSCase]
renamed rhs node:  y::ll<inf_n_31>[Orig][LHSCase]
root in iv: true

Here, root_in_iv indicates that root is
in the infer set.

New heap node to add to LHS is:
    y::ll<inf_n_31>
New infer var is:
    [inf_n_31]


*/
