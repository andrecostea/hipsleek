data node {
	int val; 
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> 
  inv n >= 0.

infer [p] x::node<1,p> |- x::ll<n> .
print residue.

infer [p] x::node<1,r>*r::node<a,p> |- x::node<1,x2>*x2::ll<m> & m>3.
print residue.

infer [x,z] x::node<z>  |- x::lseg<z>.
print residue.



/*
Currently obtained:
 Entail  (1): Valid. 
 <1>
   true & x!=z & q_27=z & {FLOW,(17,18)=__norm}
   or x::node<z>@M[Orig] & x=z & {FLOW,(17,18)=__norm}

Since [x,a] to be inferred, I was expecting
the outcomes from a proof search, namely:
   Inferred x!=z
      x!=z  & norm
/\ Inferred x=z
     x::node<z>@M[Orig] & x=z

*/

