data node {
	int val; 
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> 
  inv n >= 0.

infer [x] n=0 & x=y  |- y::ll<n>.
print residue.

infer [aa]  y::node<aa,null> |- y::node<a,null> & a>0.
print residue.

infer [x] n<0   |- x::ll<n>.
print residue.

infer [q] n!=0 |- q::ll<n> .
print residue.


infer [p] x::node<1,p> |- x::ll<n>.
print residue.
