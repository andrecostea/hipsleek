data node {
	int val; 
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> 
  inv n >= 0.

// expecting x!=null 
// & flow should be just __norm
//infer [x] x=null |- x::node<_,b>.
//print residue.
/* got below:
Infer  (15): Valid.
Inferred Heap:[]
Inferred Pure:[ x!=null]
<1>false & false &
{FLOW,(1,20)=__flow}
*/

// expecting x!=null to be inferred
// with resude b::ll<n-1>.
infer [x] x::ll<n> |- x::node<_,b>.
print residue.
/*
Infer  (16): Valid.
<1>true & Anon_172=inf_Anon_173 & b=inf_174 &
{FLOW,(17,18)=__norm}
*/


