# infer/ex6.slk  --smtinp

Why is this z3 problem still there?

(declare-fun Q (Int Int) Bool)
(declare-fun Q (Int Int) Bool)

WARNING: _0:0_0:0:Z3 error message: (error "line 83 column 29: invalid declaration, function 'Q' (whith the given signature) already declared")
WARNING: _0:0_0:0:Z3 error message: (error "line 100 column 29: invalid declaration, function 'Q' (whith the given signature) already declared")

=========================================================================
# ex5.slk

test

!Why relAssume do't work? Is it because it
is not being pushed into stack?

relation Q(int a, int b).
relAssume
  n=0 & m=0 -->  Q(m,n).
relAssume
  m1=m-1 & r=r1+2 & Q(m1,r1) -->  Q(m,r).
relation_infer [][Q].

# RelAssume seems to be part of shape inference.
  Can we convert them to pure form too and add to infer_rel_stk?

let process_rel_assume cond_path (ilhs : meta_formula) (igurad_opt : meta_formula option) (irhs: meta_formula)=

!!! **sleekengine.ml#1257: emp&nnnn=0 & m=0 --> emp&Q(m,nnnn)
!!! **sleekengine.ml#1257: emp&m1+1=m & r=2+r1 & Q(m1,r1) --> emp&Q(m,r)
!!! fixpoint2:[]
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
=========================================================================
