# ex41b.ss

# What is t_foo_20_1??

Procedure foo: TRUE
 requires emp & 0<=b & b<=5
 case {
   x<=(0-1) -> requires emp & Term[35,1]
               ensures true & true;
               
                 
   1<=b & 0<=x -> requires emp & Term[35,2,0+(1*b)+(6*x)]
                  ensures true & true;
                  
                    
   b<=0 & 0<=x -> 
   requires emp & Term[35,2,0+(t_foo_20_1*b)+(6*x)]
   ensures true & true;
   }
============================================================
# ex41c.ss

# cannot handle..

!!! **ti2.ml#1957:Analyzing scc: [47389984,32897]
!!! **ti2.ml#1957:Analyzing scc: [396880784788426,396669340607048,396669312440779,567053328,47370513,47360779,29104636,33155]
!!! **terminf.ml#374:#ctx of infer-lex: 56
!!! **ti2.ml#1697:assume_nondet:[]
!!! **ti2.ml#1697:assume_nondet:[]
!!! **ti2.ml#1697:assume_nondet:[]
!!! **ti2.ml#1697:assume_nondet:[]
!!! **ti2.ml#1697:assume_nondet:[]
!!! **ti2.ml#1697:assume_nondet:[]
!!! **ti2.ml#1697:assume_nondet:[]
!!! **ti2.ml#1697:assume_nondet:[]
!!! **ti2.ml#1697:assume_nondet:[]
!!! **ti2.ml#1957:Analyzing scc: [1070795059982885885,1070398390670445103,1121521764784591,396880784788426,567053328,47370513,29104636,33155,-349869337465623154]
!!! **terminf.ml#374:#ctx of infer-lex: 64

Procedure foo: UNKNOWN
 requires emp & 0<=b & b<=n
 case {
   x<=(0-1) -> requires emp & Term[35,1]
               ensures true & true;
               
                 
   ((6<=b & 0<=x) | (b<=0 & 2<=x & 2<=n)) -> 
   requires emp & MayLoop[]
   ensures true & true;
   
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================
============================================================

