// README:

//       Use @arr_ba for bi-abduction
//       Use @arr_en for classical entailment.
// 	 Use @arr_enfr for entailment with frame inference

//       In classical entailment, by default, it will just return TRUE or FALSE.
//       To generate pre-condition instead of just TRUE or FALSE, run with "--arr-pre".
//       For example, ../../sleek ex1.slk --arr-pre
//       To print all the intermediate steps, run with --verbose-arr
      
pred_prim Aseg<start:int, end:int> inv 0<=start<=end. // possibly empty
pred_prim AsegNE<start:int, end:int> inv 0<start<end. // definitely bounded
pred_prim Elem<start:int,value:int> inv 0<start. // non-null

checkentail x::Aseg<s,e> |- s<e.
expect Fail.

checkentail x::Aseg<s,e> |- s<=e.
expect Valid.



