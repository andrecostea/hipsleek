
data node {
	int val; 
	node next; 
}.

pred  sortll<mi> == self=null & mi=\inf
   or self::node<mi, p> * p::sortll<m2> & mi<=m2
inv true.


//(1) fail
checkentail v<\inf |- v=\inf.

//(2) valid
checkentail true |- v=min(v,\inf).

//(3) Valid
checkentail v=\inf |- v>=1.

//(4)
checkentail true |- v=max(v,-w).
// w+v=max(w+v,0)

//(5)
checkentail true |- v=max(v,-\inf).
//v=max(v,0+INF)

//(6)
checkentail true |- v=max(v,0-\inf).
// (0+(INF))<v

//(7)
checkentail true |- v>-\inf.
// (0+INF)<v


//(8) 
checkentail true |- v>=-\inf.
// (0+INF)<=v

//(9) valid
checkentail res=null |- res::sortll<m> & m=\inf.
