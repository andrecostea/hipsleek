//CountDownLatch
data CDL {}.

data cell { int val; }.

pred_prim LatchIn{-%P@Split}<>.

pred_prim LatchOut{+%P@Split}<>.

pred_prim CNT<n:int>
  inv n>=(-1).

lemma "split" self::CNT<n> & a>=0 & b>=0 & n=a+b -> self::CNT<a> * self::CNT<b>.

lemma "combine" self::CNT<a> * self::CNT<b> & a,b>=0 -> self::CNT<a+b>.

checkentail //c'::LatchIn{ - p'::cell<Anon_11>@M * q'::cell<Anon_12>@M}<>@M & 
// c'::LatchOut{ + p'::cell<Anon_11>@M * q'::cell<Anon_12>@M}<>@M * 
c'::CNT<v_int_44_2195>@M &
 //U@full[p,q]@lend[c]&
v_int_44_2195=1 & 0<v_int_44_2195
 |-  (exists flted_48_99: //c'::LatchIn{ - p'::cell<Anon_13>@M * q'::cell<Anon_14>@M}<>@M ). 
                      c'::CNT<flted_48_99>@M). //&
print residue.
//U@full[p,q]@lend[c]&
//flted_48_99=1).

checkentail c'::LatchIn{ - p'::cell<Anon_11>@M * q'::cell<Anon_12>@M}<>@M *
c'::CNT<v_int_44_2195>@M &
v_int_44_2195=1 & 0<v_int_44_2195
 |-  (exists flted_48_99: c'::LatchIn{ - p'::cell<Anon_13>@M * q'::cell<Anon_14>@M}<>@M *
                      c'::CNT<flted_48_99>@M).
print residue.


checkentail c'::LatchOut{ + p'::cell<Anon_11>@M * q'::cell<Anon_12>@M}<>@M *
c'::CNT<v_int_44_2195>@M &
v_int_44_2195=1 & 0<v_int_44_2195
 |-  (exists flted_48_99: c'::LatchOut{ + p'::cell<Anon_13>@M * q'::cell<Anon_14>@M}<>@M *
                      c'::CNT<flted_48_99>@M).    
print residue.
