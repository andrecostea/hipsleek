data node {
  int val;
  node next;
}.

data tree {
  tree left;
  tree right;
}.
  
pred tlseg<p,f,d,n> ==
     self::node<d,p> & n=1 & d=f 
  or self::tlseg<r,f,d+1,n1> * r::tlseg<p,_,d+1,n2> & n=n1+n2
  inv self!=null & n>=1 & f>=d .

lemma self::tlseg<p,f,d,n>@I -> self::node<f,q>@I.
/* this is a data losing lemma that should only be used
   with immitable spec */

//checkentail x::tlseg<p,f,d,n> |- x::node<v,_>@I.
// two anwers; need only have one really

//checkentail x::tlseg<p,f,d,n> |- x::tlseg<a,b,c,d>.
// why is there a fail! I am expecting two answers


checkentail x::node<_,q> |- x::tlseg<a,b,c,d>.


//checkentail x::node<p,q> |- x::tlseg<a,b,c,d>.
// WHY ERROR: File "t8.slk", line 30, col 28 : gather_type_info_var : unexpected exceptionFailure("TYPE ERROR : Found node but expecting int") 

checkentail x::node<pp,q> |- x::tlseg<a,f,d,n>.

print residue.
