data node {
	int val;
	node next;
}.

pred lseg<p, n> == self=p & n=0
	or self::node<_, r> * r::lseg<p, n-1>
	inv n>=0.

lemma_unsafe "ll_tail2" self::lseg<p, n> 
   <- self::lseg<t, n-1> * t::node<_, p>.


// unfold body
checkentail (exists p_80,flted_7_81,Anon_82,r_83,p_65,Anon_66,flted_11_67,
    t_68: self_ll_tail2::node<Anon_82,r_83> * r_83::lseg<p_80,flted_7_81> *
    t_68::node<Anon_66,p_65>&flted_7_81+1=flted_11_67 & p_80=t_68 &
    flted_11_67+1=n & p_65=p)
    |- (exists p_53,n_54: self_ll_tail2::lseg<p_53,n_54>&p_53=p & n_54=n).
expect Valid.

/*
checkentail (exists p_80,flted_7_81,Anon_82,r_83,p_65,Anon_66,flted_11_67,
    t_68: self_ll_tail2::node<Anon_82,r_83> * r_83::lseg<p_80,flted_7_81> *
    t_68::node<Anon_66,p_65>&flted_7_81+1=flted_11_67 & p_80=t_68 &
    flted_11_67+1=n & p_65=p)
    |- self_ll_tail2::lseg<p,n>.
expect Valid.
*/

// fold
checkentail  (exists p_80,flted_7_81,Anon_82,r_83,p_65,Anon_66,flted_11_67,
    t_68: self_ll_tail2::node<Anon_82,r_83> * r_83::lseg<p_80,flted_7_81> *
    t_68::node<Anon_66,p_65>&flted_7_81+1=flted_11_67 & p_80=t_68 &
    flted_11_67+1=n & p_65=p)
    |- (exists p_53,n_54,r: self_ll_tail2::node<_, r> * r::lseg<p_53,n_54-1>&p_53=p & n_54=n).
expect Valid.
