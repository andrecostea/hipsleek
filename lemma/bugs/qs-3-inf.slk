data node {
	int val; 
	node next; 
}.


pred lseg<n, p, sm, lg> == case {
  n=0 -> [] self=p & sm=\inf & lg=-\inf;
 (n!=0) -> [nn] self::node<sm, r> * r::lseg<nn, p, sm1, lg1> 
               & nn=n-1 & sm<=sm1 & -\inf<sm<\inf & lg=max(lg1,sm)
                     & lg<\inf; 
}	
//inv n >= 0  -\inf<sm & lg<\inf
//inv n = 0 & sm=\inf & lg=-\inf |
  //  n>0 & -\inf<sm & sm<=lg & lg<\inf
//.
 inv n>=0 .

pred ll_tail<n, t, sm, lg> == 
   case {
     n=1 -> [] self::node<sm, null> & t=self & n=1 & sm=lg & -\inf<sm<\inf;
     n!=1 -> [] self::node<sm, r> * r::ll_tail<nn, t, sm1, lg> & r!=null & sm<=sm1 & nn=n-1 & -\inf<sm<\inf;
   }
//inv n>=1 & self!=null & -\inf<sm & sm<=lg & lg<\inf.
inv n>=1.
  /* todo: m=n-1 for case struct */
 
lemma "ll_tail2lsegL" self::ll_tail<n, t, sm, lg> & m=n-1
       -> self::lseg<m, t, sm, lg1> * t::node<lg, null> & lg1<=lg.

/*
why --esl leads to:

ERROR : top of empty stackERROR : popping empty stackFatal error: exception Gen.Stack_Error
loris@loris-desktop:/home2/loris/hg/sl_clean/lemma/bugs$ 
** (emacs:24684): CRITICAL **: murrine_style_draw_box: assertion `height >= -1' failed


*/

