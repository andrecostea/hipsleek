data node {
   node n;
}.

HeapPred P(node x).
HeapPred P2(node x).

relAssume 
  P(x) --> x::node<q>*P2(q).

relAssume 
  P2(x)  --> P(x).

shape_infer[P][].

/*

WRONG:
*************************************
*******relational definition ********
*************************************
[ P(x_28) ::= x_28::node<q_21>@M * (P(q_21)) * (P(q_23)) * q_21::node<q_23>@M&true]


========

  P(x) --> x::node<q>*P2(q).
       --> x::node<q> & XPURE(P2(q)).

  P2(x)  --> P(x).

(1)
  P(x)   <-> x::node<q> & XPURE(P2(q)).
  P2(x)  <-> x::node<q> & XPURE(P2(q))  
             // wrong since P2(x) is given defn

  P2(x)  <-> P(x).
  P(x)   <-> x::node<q> & XPURE(P(q)).


*/

