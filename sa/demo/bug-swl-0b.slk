data node{
	int val;
	node next;
}.

pred lseg<p> == self=p 
  or self::node<_,nxt> * nxt::lseg<p> & self!=p 
inv true.

 checkentail nxt_921::ll<>@M * prev::lseg<sent_922>@M * cur_929::node<Anon_920,prev_928>@M&
cur=cur_929 & prev=prev_928 & sent=sent' & cur!=null & sent=sent_922 & 
n_37'=nxt_921 & next_63_927=nxt_921 & cur_929=prev_941 & cur_940=n_37' & 
cur_940!=sent' & !(v_bool_67_889') & cur_940!=sent' & !(v_bool_67_889') & 
cur_940=null & v_bool_68_890' & cur_940=null & v_bool_68_890' & 
cur'=prev_941 & prev'=null&{FLOW,(22,23)=__norm}[]
 |-  (exists sent_948: cur'::ll<>@M * prev'::lseg<sent_948>@M&
{FLOW,(22,23)=__norm})[]. 

).


/*
# bug-swl-9b.slk

cannot prove sen

 id: 14; caller: []; line: 73; classic: false; kind: PRE-2; hec_num: 5; evars: [sent_948]; infer_vars: []; c_heap: emp


 checkentail nxt_921::ll<>@M * prev::lseg<sent_922>@M * cur_929::node<Anon_920,prev_928>@M&
cur=cur_929 & prev=prev_928 & sent=sent' & cur!=null & sent=sent_922 & 
n_37'=nxt_921 & next_63_927=nxt_921 & cur_929=prev_941 & cur_940=n_37' & 
cur_940!=sent' & !(v_bool_67_889') & cur_940!=sent' & !(v_bool_67_889') & 
cur_940=null & v_bool_68_890' & cur_940=null & v_bool_68_890' & 
cur'=prev_941 & prev'=null&{FLOW,(22,23)=__norm}[]
 |-  EXISTS(sent_948: cur'::ll<>@M * prev'::lseg<sent_948>@M&
{FLOW,(22,23)=__norm})[]. 


*/
