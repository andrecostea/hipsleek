# app.ss

Problem with hip invoking shape_infer...

[ H1(c,y)&true --> c::node<val_16_787,next_16_788>@M * 
  (HP_789(next_16_788,y))&true,
 HP_789(next_16_788,y)&next_16_788!=null --> H1(next_16_788,y)&true,
 c::node<val_16_787,next_16_788>@M * (G1(next_16_788,y))&
  next_16_788!=null --> G1(c,y)&true,
 (HP_789(next_16_788,y)) * c::node<val_16_787,y>@M&
  next_16_788=null --> G1(c,y)&true]

Dangling predicate derived is wrong...

[ H1(c_836,y_837) ::= c_836::node<val_16_787,next_16_788>@M
    & XPURE(HP_789(next_16_788,y_837)),
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 G1(c_838,y_839) ::= c_838::node<val_16_787,y_840>@M * (HP_841(y_840,y_839))&true,
 HP_841(y_840,y_839) ::= 
 emp& XPURE(HP_789(next_16_788,y_839)) & y_839=y_840 & next_16_788=null
 or y_840::node<val_16_787,y_842>@M * (HP_841(y_842,y_839))&true
 ]

However, app.slk is OK it produced the correct result.
How come hip did not invoke shape_infer correctly?


[ H1(c_87,y_88) ::= c_87::node<val_16_751',next_16_752'>@M * (HP_4(next_16_752',y_88))&true,
 HP_4(next_16_89,y_90) ::= 
 emp&next_16_89=null
 or next_16_89::node<val_16_751',next_16_752'>@M * (HP_4(next_16_752',y_90))&
    true
 ,
 G1(c_91,y_92) ::= c_91::node<Anon_11,t>@M * (HP_93(t,y_92))&true,
 HP_93(t,y_92) ::= 
 emp&t=y_92
 or t::node<Anon_11,t_94>@M * (HP_93(t_94,y_92))&true
 ]

===================================================================
# sll-dll-bug2.slk

infer [H1,HP_2,HP_3,G1]
 HP_2(pp,p) * HP_3(nn,p) * c::node<_,p,nn>@M 
  |-  H1(nn,c).

print residue.
/*
GOT:
====
 <1>emp&true&{FLOW,(19,20)=__norm}[]
 inferred hprel: [(HP_2(pp,p)) * (HP_3(nn,p)) * c::node<Anon_11,p,nn>@M&
                   true --> H1(nn,c)&true]
Expecting:
==========
   HP_3(nn,p) --> H1(nn,c)
   residue: HP_2(pp,p) * c::node<_,p,nn>@M


=====================================================================
# tree.slk

/* 

Why got two definitions for H?
Got: 
[ H(x) ::= x::node<l,r>@M& XPURE(HP_2(r)) &  XPURE(HP_1(l)),
 H(l_48) ::= l_48::node<l,r>@M * (H(l)) * (H(r))&true]


Expecting: [ H(x_119) ::= 
 emp&x_119=null
 or (H(r_63)) * (H(l_62)) * x_119::node<l_62,r_63>@M&true ]

*/


=====================================================================
# dll-append2.slk


 /* error durign shape inference
 
 !!! >>>>>> pre-predicates: step pre-6: combine<<<<<<Fatal error: exception Failure("tl")

*/

similarly obtained for dll-append and dll_append2 and simpl-tree-trav




=====================================================================
# tll.ss

Why got two definitions for G?

got: 
[ H(x_980,r_981) ::= x_980::node<l,r,n>@M * HP_849(r,r_981)


 G(r,rr,l_47') ::=  H(l,l_47') & r!=null
 or HP_849(r,l_47') & r!=null
 
 G(x_984,r_985,res_986) ::= x_984::node<l,r,r_987> * HP_988(l,r,r_987,r_985,res_986)


 HP_849(r2,r_983) ::=  emp&r2=null
 or r2::node<l,r,n>@M * HP_849(r,r_983) & r!=null



 HP_988(l,r,r_987,r_995,res_986) ::= emp & r=null
 or l::node<l1,r2,r_991>@M * HP_988(l1,r2,r_991,l_879,res_986) & r!=null ]

