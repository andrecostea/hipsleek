Starting Omega...oc
H1 is defined.
HP_1 is defined.
HP_2 is defined.
HP_8 is defined.
G1 is defined.

!!! >>>>>> step 1: find dangling ptrs, link pre and post-preds dangling preds<<<<<<
!!! >>>>>> step 2: split constraints based on pre and post-preds<<<<<<
!!! *** NO SPLITTING DONE ***
!!! >>>>>> step 3: apply transitive implication<<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> pre-predicates<<<<<<
!!! >>>>>> step pre-4: remove unused predicates<<<<<<
!!! >>>>>> pre-predicates: step pre-5: group & simpl impl<<<<<<
!!! >>>>>> pre-predicates: step pre-6: combine<<<<<<
!!! >>>>>> pre-predicates: step pre-7: remove redundant x!=null<<<<<<
!!! >>>>>> pre-predicates: step pre-8: strengthen<<<<<<
!!! >>>>>> step 6: generalization <<<<<<
!!! >>>>>> generalize_one_cs_hp: <<<<<<
!!! >>>>>> post-predicates<<<<<<
!!! >>>>>> step post-4: step remove unused predicates<<<<<<
!!! >>>>>> post-predicates: step post-5: remove redundant x!=null : not implemented yet<<<<<<
!!! >>>>>> post-predicates: step post-61: weaken<<<<<<

*************************************
*******relational definition ********
*************************************
[ H1(x_85,y_86) ::=  
 H1(next_24_76,next_25_74) * y_86::node<val_25_73,next_25_74>@M * 
 x_85::node<val_24_75,next_24_76>@M
 or emp&x_85=null
 ,
 G1(x_87,y_88,res_89) ::=  
 emp&res_89=x_87 & res_89=null & x_87=null
 or y_88::node<val_25_826,next_25_827>@M * res_89::node<val_24_819,nn>@M * 
    G1(nn,next_25_827,rr)&nn=rr & res_89=x_87
 ]
*************************************
Stop Omega... 7 invocations 
SAT Count   : 6
SAT % Hit   : 0.%
IMPLY Count : 1
IMPLY % Hit : 0.%
Time(cache overhead) : 0. (seconds)

Total verification time: 0.068002 second(s)
	Time spent in main process: 0.052002 second(s)
	Time spent in child processes: 0.016 second(s)

