========tree-1-bug-1.slk ==========
Starting Omega...oc
H is defined.
HP_1 is defined.
HP_2 is defined.
G is defined.

!!! >>>>>> step 1: find dangling ptrs, link pre and post-preds dangling preds<<<<<<
!!! >>>>>> step 2: split constraints based on pre and post-preds<<<<<<
!!! *** NO SPLITTING DONE ***
!!! >>>>>> step 3: apply transitive implication<<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> pre-predicates<<<<<<
!!! >>>>>> step pre-4: remove unused predicates<<<<<<
!!! >>>>>> pre-predicates: step pre-5: group & simpl impl<<<<<<
!!! >>>>>> pre-predicates: step pre-6: combine<<<<<<
!!! >>>>>> pre-predicates: step pre-7: remove redundant x!=null<<<<<<
!!! >>>>>> pre-predicates: step pre-8: strengthen<<<<<<
!!! >>>>>> step 6: generalization <<<<<<
!!! >>>>>> post-predicates<<<<<<
!!! >>>>>> step post-4: step remove unused predicates<<<<<<
!!! >>>>>> post-predicates: step post-5: remove redundant x!=null : not implemented yet<<<<<<
!!! >>>>>> post-predicates: step post-61: weaken<<<<<<

*************************************
*******relational definition ********
*************************************
[ HP_1(left_25_44) ::= 
 left_25_44::node<key_25_788,left_25_789,right_25_790>@M * 
 HP_1(left_25_789) * HP_2(right_25_790)
 or emp&left_25_44=null
 ,
 H(x_45) ::= x_45::node<key_25_788,left_25_789,right_25_790>@M * HP_1(left_25_789) * 
HP_2(right_25_790),
 G(x_46) ::= 
 HP_2(right_25_790) * x_46::node<key_25_788,left_25_789,right_25_790>@M&
 left_25_789=null
 or HP_2(right_25_790) * x_46::node<key_25_788,left_25_789,right_25_790>@M * 
    G(left_25_789)&left_25_789!=null
 ,
 HP_2(a) ::= NONE]
*************************************
====================
