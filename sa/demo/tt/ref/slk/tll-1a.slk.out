========tll-1a.slk ==========
Starting Omega...oc
H is defined.
G is defined.
H_0 is defined.
H_8 is defined.
H_9 is defined.

!!! >>>>>> step 1: find dangling ptrs, link pre and post-preds dangling preds<<<<<<
!!! >>>>>> step 2: split constraints based on pre and post-preds<<<<<<
!!! *** NO SPLITTING DONE ***
!!! >>>>>> step 3: apply transitive implication<<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> pre-predicates<<<<<<
!!! >>>>>> step pre-4: remove unused predicates<<<<<<
!!! >>>>>> pre-predicates: step pre-5: group & simpl impl<<<<<<
!!! >>>>>> pre-predicates: step pre-6: combine<<<<<<
!!! >>>>>> pre-predicates: step pre-7: remove redundant x!=null<<<<<<
!!! >>>>>> pre-predicates: step pre-8: strengthen<<<<<<
!!! >>>>>> step 6: generalization <<<<<<
!!! >>>>>> post-predicates<<<<<<
!!! >>>>>> step post-4: step remove unused predicates<<<<<<
!!! >>>>>> post-predicates: step post-5: remove redundant x!=null : not implemented yet<<<<<<
!!! >>>>>> post-predicates: step post-61: weaken<<<<<<

*************************************
*******relational definition ********
*************************************
[ H_9(right_29_94,r_95) ::= 
 H(right_29_94,r_95)&right_29_94!=null
 or emp&right_29_94=null
 ,
 H_8(left_29_96,r_97) ::= H(left_29_96,l_47'),
 H(x_98,r_99) ::= x_98::node<left_29_80,flted_30_82,next_29_81>@M * (H(left_29_80,l_47') * 
H_0(next_29_81,r_99)/&\H(left_29_80,l_47') * H_9(flted_30_82,r_99) * 
H_0(next_29_81,r_99))&flted_30_82=null,
 H_0(a,b) ::= NONE]
*************************************
====================
