========app.slk ==========
Starting Omega...oc
H1 is defined.
HP_4 is defined.
G1 is defined.

!!! >>>>>> step 1: find dangling ptrs, link pre and post-preds dangling preds<<<<<<
!!! >>>>>> step 2: split constraints based on pre and post-preds<<<<<<
!!! **********************************
!!! **** split_base ****
!!! **********************************
!!! post_hps:[G1]
!!! prog_vars:[]
!!! BEFORE:[(1): H1(c,y) --> c::node<val_16_751',next_16_752'>@M * HP_4(next_16_752',y),
(2): HP_4(t_31',y)&t_31'!=null --> H1(t_31',y),
(3): c::node<Anon_11,t>@M * G1(t,y)&t!=null --> G1(c,y),
(4): HP_4(next_16_788,y) * c::node<val_16_787,y>@M&next_16_788=null --> G1(c,y)]
!!! =============>>>>
!!! AFTER:[(1): H1(c,y) --> c::node<val_16_751',next_16_752'>@M * HP_4(next_16_752',y),
(2): HP_4(t_31',y)&t_31'!=null --> H1(t_31',y),
(3): c::node<Anon_11,t>@M * G1(t,y)&t!=null --> G1(c,y),
(4): c::node<val_16_787,y>@M --> G1(c,y),
(5): HP_4(next_16_788,y)&next_16_788=null --> emp]
!!! UNKNOWN added:[]
!!! **********************************
!!! **** end of split_base ****
!!! **********************************
!!! >>>>>> step 3: apply transitive implication<<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> pre-predicates<<<<<<
!!! >>>>>> step pre-4: remove unused predicates<<<<<<
!!! >>>>>> pre-predicates: step pre-5: group & simpl impl<<<<<<
!!! >>>>>> pre-predicates: step pre-6: combine<<<<<<
!!! >>>>>> pre-predicates: step pre-7: remove redundant x!=null<<<<<<
!!! >>>>>> pre-predicates: step pre-8: strengthen<<<<<<
!!! >>>>>> step 6: generalization <<<<<<
!!! >>>>>> post-predicates<<<<<<
!!! >>>>>> step post-4: step remove unused predicates<<<<<<
!!! >>>>>> post-predicates: step post-5: remove redundant x!=null : not implemented yet<<<<<<
!!! >>>>>> post-predicates: step post-61: weaken<<<<<<

*************************************
*******relational definition ********
*************************************
[ H1(c_44,y_45) ::= c_44::node<val_16_751',next_16_752'>@M * HP_4(next_16_752',y_45),
 HP_4(t_46,y_47) ::= 
 t_46::node<val_16_751',next_16_752'>@M * HP_4(next_16_752',y_47)
 or emp&t_46=null
 ,
 G1(c_48,y_49) ::= 
 c_48::node<Anon_11,t>@M * G1(t,y_49)&t!=null
 or c_48::node<Anon_11,y_49>@M
 ]
*************************************
====================
