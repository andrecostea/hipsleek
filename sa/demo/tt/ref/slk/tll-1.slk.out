========tll-1.slk ==========
Starting Omega...oc
H is defined.
G is defined.
H_0 is defined.
H_8 is defined.
H_9 is defined.

!!! >>>>>> step 1: find dangling ptrs, link pre and post-preds dangling preds<<<<<<
!!! >>>>>> step 2: split constraints based on pre and post-preds<<<<<<
!!! *** NO SPLITTING DONE ***
!!! >>>>>> step 3: apply transitive implication<<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> pre-predicates<<<<<<
!!! >>>>>> step pre-4: remove unused predicates<<<<<<
!!! >>>>>> pre-predicates: step pre-5: group & simpl impl<<<<<<
!!! >>>>>> pre-predicates: step pre-6: combine<<<<<<
!!! >>>>>> pre-predicates: step pre-7: remove redundant x!=null<<<<<<
!!! >>>>>> pre-predicates: step pre-8: strengthen<<<<<<
!!! >>>>>> step 6: generalization <<<<<<
!!! >>>>>> post-predicates<<<<<<
!!! >>>>>> step post-4: step remove unused predicates<<<<<<
!!! >>>>>> post-predicates: step post-5: remove redundant x!=null : not implemented yet<<<<<<
!!! >>>>>> post-predicates: step post-61: weaken<<<<<<

*************************************
*******relational definition ********
*************************************
[ H(x_55,r_56) ::= x_55::node<left_29_845,right_29_846,next_29_847>@M * 
H_8(left_29_845,r_56) * H_9(right_29_846,r_56) * H_0(next_29_847,r_56),
 H_8(left_29_57,r_58) ::= H(left_29_57,l_47'),
 H_9(right_29_59,r_60) ::= 
 H(left_29_50,l_47') * 
 right_29_59::node<left_29_50,right_29_51,next_29_52>@M * 
 H_9(right_29_51,r_60) * H_0(next_29_52,r_60)
 or emp&right_29_59=null
 ,
 H_0(next_29_61,r_62) ::= emp]
*************************************
====================
