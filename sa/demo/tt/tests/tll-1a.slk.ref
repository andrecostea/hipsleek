Starting Omega...oc
H is defined.
G is defined.
H_0 is defined.
H_8 is defined.
H_9 is defined.

!!! >>>>>> step 1: find dangling ptrs, link pre and post-preds dangling preds<<<<<<
!!! >>>>>> step 2: split constraints based on pre and post-preds<<<<<<
!!! *** NO SPLITTING DONE ***
!!! >>>>>> step 3: apply transitive implication<<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> pre-predicates<<<<<<
!!! >>>>>> step pre-4: remove unused predicates<<<<<<
!!! >>>>>> pre-predicates: step pre-5: group & simpl impl<<<<<<
!!! >>>>>> pre-predicates: step pre-6: combine<<<<<<
!!! >>>>>> pre-predicates: step pre-7: remove redundant x!=null<<<<<<
!!! >>>>>> pre-predicates: step pre-8: strengthen<<<<<<
!!! >>>>>> step 6: generalization <<<<<<
!!! >>>>>> post-predicates<<<<<<
!!! >>>>>> step post-4: step remove unused predicates<<<<<<
!!! >>>>>> post-predicates: step post-5: remove redundant x!=null : not implemented yet<<<<<<
!!! >>>>>> post-predicates: step post-61: weaken<<<<<<

*************************************
*******relational definition ********
*************************************
[ H(x_108,r_109) ::= x_108::node<left_29_83,flted_30_85,next_29_84>@M * (H(left_29_83,l_47') * 
H_0(next_29_84,r_109)/&\H(left_29_83,l_47') * H_0(next_29_84,r_109))&
flted_30_85=null,
 H_9(right_29_111,r_112) ::= 
 H(left_29_93,l_47') * 
 right_29_111::node<left_29_93,flted_30_95,next_29_94>@M * 
 H_0(next_29_94,r_112)&flted_30_95=null
 or emp&right_29_111=null
 ,
 H_8(left_29_113,r_114) ::= H(left_29_113,l_47'),
 H_0(a,b) ::=UNKNOWN]
*************************************

