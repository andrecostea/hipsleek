Starting Omega...oc
H is defined.
G is defined.
HP_6 is defined.
HP_7 is defined.

!!! >>>>>> step 1: find dangling ptrs, link pre and post-preds dangling preds<<<<<<
!!! >>>>>> step 2: split constraints based on pre and post-preds<<<<<<
!!! *** NO SPLITTING DONE ***
!!! >>>>>> step 3: apply transitive implication<<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> pre-predicates<<<<<<
!!! >>>>>> step pre-4: remove unused predicates<<<<<<
!!! >>>>>> pre-predicates: step pre-5: group & simpl impl<<<<<<
!!! >>>>>> pre-predicates: step pre-6: combine<<<<<<
!!! >>>>>> pre-predicates: step pre-7: remove redundant x!=null<<<<<<
!!! >>>>>> pre-predicates: step pre-8: strengthen<<<<<<
!!! >>>>>> step 6: generalization <<<<<<
!!! >>>>>> post-predicates<<<<<<
!!! >>>>>> step post-4: step remove unused predicates<<<<<<
!!! >>>>>> post-predicates: step post-5: remove redundant x!=null : not implemented yet<<<<<<
!!! >>>>>> post-predicates: step post-61: weaken<<<<<<

*************************************
*******relational definition ********
*************************************
[ H(rest_48,h_49) ::= 
 H(next_36_45,h_49) * rest_48::node<val_36_44,next_36_45>@M * 
 HP_7(h_49,rest_48)&h_49!=rest_48
 or emp&h_49=rest_48
 ,
 HP_6(next_36_50,h_51) ::= H(next_36_50,h_51),
 G(rest_52,h_53) ::= 
 rest_52::node<val_36_824,next_36_825>@M * G(next_36_825,h_53) * 
 HP_7(h_53,rest_52)&h_53!=rest_52
 or emp&h_53=rest_52
 ,
 HP_7(a,b) ::=UNKNOWN]
*************************************

