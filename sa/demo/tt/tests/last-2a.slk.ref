Starting Omega...oc
H is defined.
HP_1 is defined.
HP_4 is defined.
G is defined.
HP_2 is defined.
HP_3 is defined.

!!! unknown: [((),(HP_2,[a,b]))]

!!! unknown: [((),(HP_3,[a,b]))]

!!! >>>>>> step 1: find dangling ptrs, link pre and post-preds dangling preds<<<<<<
!!! >>>>>> step 2: split constraints based on pre and post-preds<<<<<<
!!! *** NO SPLITTING DONE ***
!!! >>>>>> step 3: apply transitive implication<<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> step 3a: simplification <<<<<<
!!! >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!! >>>>>> pre-predicates<<<<<<
!!! >>>>>> step pre-4: remove unused predicates<<<<<<
!!! >>>>>> pre-predicates: step pre-5: group & simpl impl<<<<<<
!!! >>>>>> pre-predicates: step pre-6: combine<<<<<<
!!! >>>>>> pre-predicates: step pre-7: remove redundant x!=null<<<<<<
!!! >>>>>> pre-predicates: step pre-8: strengthen<<<<<<
!!! >>>>>> step 6: generalization <<<<<<
!!! >>>>>> post-predicates<<<<<<
!!! >>>>>> step post-4: step remove unused predicates<<<<<<
!!! >>>>>> post-predicates: step post-5: remove redundant x!=null : not implemented yet<<<<<<
!!! >>>>>> post-predicates: step post-61: weaken<<<<<<

*************************************
*******relational definition ********
*************************************
[ H(x_33) ::=  x_33::node<val_18_812,next_18_813>@M * HP_4(next_18_813),
 HP_4(next_18_34) ::=  
 next_18_34::node<val_18_812,next_18_813>@M * HP_4(next_18_813)
 or emp&next_18_34=null
 ,
 HP_2(a,b) ::= NONE,
 HP_3(a,b) ::= NONE]
*************************************

