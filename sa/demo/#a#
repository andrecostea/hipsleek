Starting Omega...oc

choose_context@2@1
choose_context inp1 :LHS node: x::ltwo<y>@M[0][Orig][LHSCase]
choose_context inp2 :RHS node: res::ll@M[0][Orig][LHSCase]
choose_context inp3 :LHS pure: x=null & res=null & res=x
choose_context inp4 :RHS pure: true
choose_context inp5 :right aliase:[]
choose_context@2 EXIT out :[ 
  Type: Root
  LHS: x::ltwo<y>@M[0][Orig][LHSCase]
  RHS: res::ll@M[0][Orig][LHSCase]
 lhs_rest: emp
 rhs_rest: y::ll@M[0][Orig][LHSCase]]

choose_context@3@1
choose_context inp1 :LHS node: x::ltwo<y>@M[0][Orig][LHSCase]
choose_context inp2 :RHS node: y::ll@M[0][Orig][LHSCase]
choose_context inp3 :LHS pure: x=null & res=null & res=x
choose_context inp4 :RHS pure: true
choose_context inp5 :right aliase:[]
choose_context@3 EXIT out :[ 
  Type: MaterializedArg (y,partial,) view_defn_mater
  LHS: x::ltwo<y>@M[0][Orig][LHSCase]
  RHS: y::ll@M[0][Orig][LHSCase]
 lhs_rest: htrue
 rhs_rest: res::ll@M[0][Orig][LHSCase]]

@1! weighted action:[(1): Prio:-1COND =>[Prio:1BaseCaseUnfold =>
                                        LHS: x::ltwo<y>@M[0][Orig][LHSCase]
                                        RHS: res::ll@M[0][Orig][LHSCase];Prio:1NothingToDo => mis-matched LHS:ltwo and RHS: ll],
(2): Prio:-1SEARCH =>[
         Prio:1Unfold 1 =>
                           LHS: x::ltwo<y>@M[0][Orig][LHSCase]
                           RHS: y::ll@M[0][Orig][LHSCase];
         Prio:1BaseCaseUnfold =>
                                 LHS: x::ltwo<y>@M[0][Orig][LHSCase]
                                 RHS: y::ll@M[0][Orig][LHSCase]
         ]]

@1! sorted action:[(1): Prio:1COND =>[Prio:1BaseCaseUnfold =>
                                       LHS: x::ltwo<y>@M[0][Orig][LHSCase]
                                       RHS: res::ll@M[0][Orig][LHSCase];Prio:1NothingToDo => mis-matched LHS:ltwo and RHS: ll],
(2): Prio:1SEARCH =>[
        Prio:1Unfold 1 =>
                          LHS: x::ltwo<y>@M[0][Orig][LHSCase]
                          RHS: y::ll@M[0][Orig][LHSCase];
        Prio:1BaseCaseUnfold =>
                                LHS: x::ltwo<y>@M[0][Orig][LHSCase]
                                RHS: y::ll@M[0][Orig][LHSCase]
        ]]
compute_actions@1
compute_actions inp1 :EQ ptr:[]
compute_actions inp2 :LHS heap: x::ltwo<y>@M[0][Orig][LHSCase]
compute_actions inp3 :LHS pure: x=null & res=null & res=x
compute_actions inp4 :RHS cand:[ res::ll@M[0][Orig][LHSCase], y::ll@M[0][Orig][LHSCase]]
compute_actions inp5 :right alias:[]
compute_actions@1 EXIT out : COND =>[Prio:1BaseCaseUnfold =>
                                 LHS: x::ltwo<y>@M[0][Orig][LHSCase]
                                 RHS: res::ll@M[0][Orig][LHSCase];Prio:1NothingToDo => mis-matched LHS:ltwo and RHS: ll]

Entail (1) : Fail.

Stop Omega... 9 invocations 
SAT Count   : 10
SAT % Hit   : 50.%
IMPLY Count : 2
IMPLY % Hit : 0.%
Time(cache overhead) : 0. (seconds)

Total verification time: 0.080003 second(s)
	Time spent in main process: 0.064003 second(s)
	Time spent in child processes: 0.016 second(s)

