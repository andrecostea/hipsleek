data node{
	int val;
	node next;
}.

HeapPred H1(node a, node b).
HeapPred HP_1(node a, node b).
HeapPred HP_2(node a, node b).
HeapPred HP_8(node a, node b).
HeapPred G1(node a, node b, node c).

relAssume H1
 H1(x,y)&x!=null --> x::node<val_24_819,next_24_820>@M * 
  HP_1(next_24_820,y) * HP_2(y,x).

relAssume HP_2
 HP_2(y,x)
   --> y::node<val_25_826,next_25_827> * HP_8(next_25_827,x).

relAssume H1
 HP_8(next_25_827,x) * HP_1(next_24_820,y) & true 
 --> H1(next_24_820,next_25_827).

relAssume G1
 x=null & res=null --> G1(x,y,res).

relAssume H1
 H1(x,y)&x=null  --> emp.

relAssume G1
 y::node<val_25_826,next_25_827> * x::node<val_24_819,nn>
  * G1(nn,next_25_827,rr) & nn=rr
  & res=x --> G1(x,y,res).
 
shape_infer[H1,HP_2,HP_1,HP_8][G1].

/*

# zip1.slk

[ HP_8(next_25_827,x_77) ::= emp& XPURE(HP_8(next_25_827,x_77)),
 HP_1(next_24_75,y_76) ::= emp& XPURE(HP_1(next_24_75,y_76)),
 H1(x_176,y_177) ::= emp&x_176=null,
 HP_2(y_178,x_179) ::= y_178::node<val_25_826,next_25_827>@M& XPURE(HP_8(next_25_827,x_179)),
 G1(x_180,y_181,res_183) ::= 
 emp&x_180=null
 or y_181::node<val_25_826,next_25_827>@M * x_180::node<val_24_819,nn>@M * 
    (G1(nn,next_25_827,nn))&true
 ]

WHY do we use XPURE(..) when I have specified all the predicates as non-dangling??

*/