// simpler tll working example

data node{
	node left;
	node right;
}.


HeapPred H(node a).
PostPred G(node a, node c).
HeapPred H_2(node a).
HeapPred H_3(node a).
HeapPred H_2a(node a).
HeapPred H_3a(node a).

//Declare_Unknown(2;1)[H_2]

relAssume (1)
 H(x) --> x::node<left_25_800,right_25_801>@M * H_2(left_25_800) 
  * H_3(right_25_801).
relAssume (1;1)
 H_3(right_25_801)&right_25_801!=null --> H(right_25_801).
relAssume (1;1)
 H_2(left_25_800) --> H(left_25_800).
relAssume (2;1)
 H_3(right_25_801)&right_25_801=null --> emp.

shape_divide [H,H_2,H_3][].


/*
# tll-if.slk

For the first divide, I would first process H_2.
Then H_3.
Finally H, where H_2 and H_3 could be both inlined.

*************************************
*******relational definition ********
*************************************
  H_3(right_25_34)<-> H(right_25_34)&right_25_34!=null
  H_2(left_25_35)<-> H(left_25_35)
  H(x_36)<-> x_36::node<left_25_800,right_25_801>@M * H_2(left_25_800) * 
H_3(right_25_801)
*************************************

*************************************
*******relational definition ********
*************************************
  H_3(right_25_37)<-> emp&right_25_37=null
*************************************

*/
