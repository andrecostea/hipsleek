data node {
	int val; 
	node next;	
}.

pred ll<> == self=null
 or self::node<_,q>*q::ll<>
inv true.

pred H<> == self=null
 or self::node<_,q>*q::H<>
// or self::node<_,q>*q::node<_,r>*r::H<>
inv true.


lemma "weak" self::ll<> -> self::H<>.
lemma "strong" self::ll<> <- self::H<>.
lemma "equal" self::ll<> <-> self::H<>.

/*
pred G<> == self::node<_,_>
inv true.
lemma "weak" self::ll<> -> self::G<>.
lemma "strong" self::ll<> <- self::G<>.
lemma "equal" self::ll<> <-> self::G<>.
*/

