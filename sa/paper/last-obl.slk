data node{
       int val;
       node next;
}

ll<> == self = null  or self::node<_, q> * q::ll<>;

//ll<D> == self = null & D={}  or self::node<_, q> * q::ll<>;

lseg<p> == self = p & self!=null  or self::node<_, q> * q::lseg<p>& self!=p;
lshd<p> == p::lseg<self>*self::node<_,null>;

HeapPred H(node a).
PostPred G(node a, node b).

node last (node x)
//requires x::ll<> & x!=null ensures res::lshd<x>;
infer[H,G] requires H(x) ensures G(res,x);
{
   if (x.next==null) return x;
   else
   {
       node t = last(x.next);
       //t.val = t.val+1;
       node v = t.next;
       // dprint;
       assert v' = null assume true;//'
       return t;
       }
}
/*
{
   node y = x.next;
   if (y==null) return x;
   else {
     //assume false;
     node t = last(y);
     t.next=null;
     return t;
   }
}*/

/*
# single_paper.ss


HeapPred H(node a).
HeapPred HP_944(node next_20_943).
PostPred GP_961(node next_25_960, node@NI next_20_943).
PostPred GP_962(node next_20_943, node@NI t_37').
PostPred G(node a, node b).

[ H(x_972) ::= x_972::node<val_20_942,next_20_943>@M * HP_944(next_20_943),
 G(res_974,x_975) ::= 
 res_974::node<val_20_942,next_20_943>@M&res_974=x_975 & next_20_943=null
 or x_975::node<val_20_976,next_20_977>@M * 
    GP_961(next_20_943,next_20_977) * GP_962(next_20_977,res_974) * 
    res_974::node<val_20_942,next_20_943>@M&next_20_943=null
 ,
 HP_944(next_20_973) ::= 
 next_20_973::node<val_20_942,next_20_943>@M * HP_944(next_20_943)
 or emp&next_20_973=null
 ,
 GP_961(next_25_1040,next_20_1041) ::= 
 emp&next_25_1040=null
 or GP_961(next_25_1040,next_20_1037)&next_20_1039=next_25_1040 & 

 id: 24; caller: []; line: 0; classic: false; kind: POST OBLIGATION; hec_num: 5; evars: []; infer_vars: [GP_961,GP_962]; c_heap: emp
 checkentail t_37'::G<next_20_943>@M[0][Orig][LHSCase]&next_20_943!=null&
{FLOW,(22,23)=__norm}[]
 |-  t_37'::node<val_25_959,next_25_960>@M[Orig] * 
GP_961(next_25_960,next_20_943) * GP_962(next_20_943,t_37')&
{FLOW,(1,25)=__flow}[]. 
hprel_ass: [ next_20_943::node<val_20_1036,next_20_1037>@M * 
  GP_962(next_20_1037,t_37') --> GP_962(next_20_943,t_37'),
 GP_961(next_20_1039,next_20_1037)&next_20_1039=next_25_960 & 
  next_20_1039=null & 
  next_25_960=null |#| next_20_943::node<val_20_1036,next_20_1037>@M --> GP_961(next_25_960,next_20_943),
 emp&next_20_943=t_37' & next_20_943!=null --> GP_962(next_20_943,t_37'),
 emp&next_25_960=null --> GP_961(next_25_960,next_20_943)]
res:  [
  or[emp&next_20_943=t_37' & next_20_1031=null & next_20_943!=null & val_20_1030=val_25_959 & next_20_1031=next_25_960&{FLOW,(22,23)=__norm}[]; emp&next_20_1039=null & next_20_943!=null & val_20_1038=val_25_959 & next_20_1039=next_25_960&{FLOW,(22,23)=__norm}[]]
  ]



*/
