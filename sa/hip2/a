Starting Omega...oc
H is defined.
HP_1 is defined.
HP_2 is defined.
G is defined.

!!!:0: 0: >>>>>> step 3: apply transitive implication<<<<<<
!!!:0: 0: >>>>>> step 3a: simplification <<<<<<
!!!:0: 0: >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!!:0: 0: IMP #1
!!!:0: 0: imply_timeout: ante:  true
!!!:0: 0: imply_timeout: conseq:  true
!!!:0: 0:    new cs:[ (H(x_39,y_40)) * x::node<Anon_12,y_40>@M&true --> (G(x,y_40)) * 
  x_39::node<Anon_37,next_38>@M&true]
!!!:0: 0: >>>>>> step 3a: simplification <<<<<<
!!!:0: 0: >>>>>> step 3b: do apply_transitive_imp <<<<<<
!!!:0: 0:    new cs:[]
!!!:0: 0: >>>>>> pre-predicates<<<<<<
!!!:0: 0: >>>>>> step pre-4: remove unused predicates<<<<<<
!!!:0: 0: pre-preds: [HP_2] are removed
!!!:0: 0:    After removing, derived:
[ H(x,y)&true --> x::node<Anon_11,next>@M& XPURE(HP_2(next,y)),
 (H(x_39,y_40)) * x::node<Anon_12,y_40>@M&true --> (G(x,y_40)) * 
  x_39::node<Anon_37,next_38>@M&true]
!!!:0: 0:    uu map:[((HP_2,[0,1]),XPURE(HP_2(next,y)))]
!!!:0: 0: >>>>>> pre-predicates: step pre-5: group & simpl impl<<<<<<
!!!:0: 0: >>>>>> pre-predicates: step pre-6: combine<<<<<<
!!!:0: 0: >>>>>> pre-predicates: step pre-7: remove redundant x!=null: not implemented yet<<<<<<
!!!:0: 0: >>>>>> pre-predicates: step pre-8: strengthen<<<<<<
!!!:0: 0: >>>>>> step 6: generalization <<<<<<
!!!:0: 0: before remove redundant:[[(H,[x,y], x::node<Anon_11,next>@M& XPURE(HP_2(next,y)),[next,y])]]
!!!:0: 0: after remove redundant:[HP_RELDEFN H:  H(x_49,y_50) ::=  x_49::node<Anon_11,next>@M& XPURE(HP_2(next,y_50))]
!!!:0: 0: >>>>>> post-predicates<<<<<<
!!!:0: 0: >>>>>> step post-4: step remove unused predicates<<<<<<
!!!:0: 0: post-preds: [HP_2] are removed
!!!:0: 0:    After removing, derived:
[ x::node<Anon_12,y>@M& XPURE(HP_2(next,y)) --> G(x,y)&true]
!!!:0: 0:    uu map:[((HP_2,[0,1]),XPURE(HP_2(next,y)))]
!!!:0: 0: >>>>>> post-predicates: step post-5: remove redundant x!=null : not implemented yet<<<<<<
!!!:0: 0: >>>>>> post-predicates: step post-6: weaken<<<<<<
!!!:0: 0: before remove redundant:[[(G,[x,y], x::node<Anon_12,y>@M& XPURE(HP_2(next,y)),[next,y])]]
!!!:0: 0: after remove redundant:[HP_RELDEFN G:  G(x_51,y_52) ::=  x_51::node<Anon_12,y_52>@M& XPURE(HP_2(next,y_52))]

*************************************
*******relational definition ********
*************************************
[ H(x_49,y_50) ::= x_49::node<Anon_11,next>@M& XPURE(HP_2(next,y_50)),
 G(x,y_40) ::= (H(x_39,y_40)) * x::node<Anon_12,y_40>@M&true,
 G(x_51,y_52) ::= x_51::node<Anon_12,y_52>@M& XPURE(HP_2(next,y_52))]
*************************************
Stop Omega... 0 invocations 
Total verification time: 0.124006 second(s)
	Time spent in main process: 0.096005 second(s)
	Time spent in child processes: 0.028001 second(s)

