data node{
 int val;
 node next;
}.


HeapPred H(node a).
HeapPred HP_2(node a).

relAssume  H // (1)
 H(x) --> x=null.
relAssume  HP // (2)
 H(x) --> x::node<_,next> * HP_2(next) .

shape_infer [H][].

/*

GOT:
[ H(x) ::= 
 x::node<Anon_11,next>@M& XPURE(HP_2(next))
 or emp&x=null
 ]

EXPECTING:
  H(x) == false



 H(x) --> true -> emp
 H(x) --> true -> x::node<_,next> & XPURE(HP_2(next))
---------------------------------------------------------
 H(x) --> true & false -> emp
   /\ true & false -> x::node<_,next> & XPURE(HP_2(next))
   /\ true & true -> x::node<_,next> & XPURE(HP_2(next)) /\ x=null
---------------------------------------------------------
 H(x) --> false \/ false \/ x::node<..> /\ x=null
      --> false

 H(x) --> false
*/