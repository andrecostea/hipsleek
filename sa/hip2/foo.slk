data node{
 int val;
 node next;
}.


HeapPred H(node a).
HeapPred HP_7(node a).
HeapPred G(node a, node a).

relAssume  H // (1)
 H(x) --> x::node<val_31_786,next_31_787>@M * HP_7(next_31_787).
relAssume  G // (2)
 HP_7(res) * x::node<val_31_786,res>@M&true --> G(x,res).
relAssume  G // (3)
 H(x)&res=x 
   //& x=null 
 --> G(x,res).

shape_infer [H][G].

/*


[ H(x_45) ::= x_45::node<val_31_786,next_31_787>@M& XPURE(HP_7(next_31_787)),
 G(x_46,res_47) ::= 
 emp&res_47=x_46 &  XPURE(H(x_46))
 or x_46::node<val_31_786,res_47>@M& XPURE(HP_7(res_47))
 ]


P -> Q
Q & K --> G
-----------
P & K --> G

P -> Q
Q -> K -> G
-----------
P -> K -> G


*/