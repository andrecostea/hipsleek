data node{
 int val;
 node next;
}.


HeapPred H(node a).
HeapPred HP_6(node a).
HeapPred G(node a, node b).

relAssume  H
 H(x)  --> x::node<_,nn>@M * HP_6(nn).

relAssume  H
 HP_6(res) * x::node<_,vv> & vv=null --> G(x,res).

shape_infer [H][G].

/*
I obtained below. But why did we rename HP_6 to HP_29.
I think we should never rename heap predicate. Can
you check which part of renaming does that; as it breaks
our inference to rename heap predicate.

[ H(x_44) ::= x_44::node<Anon_11,nn>@M& XPURE(HP_29(nn)),
 G(x,res) ::= x::node<Anon_12,vv>@M&vv=null &  XPURE(HP_29(res))]
*
*/