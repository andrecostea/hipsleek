//heap formula
data node { int val ; node next }.
data node2 { int val ; node next }.

//PART2: check args

//1.
checkeq[] x::node<u,null> -|- x::node<u,null>.
//VALID

//2.
checkeq[] x::node<v,null> -|- y::node<c,null>.
//VALID

//3.
checkeq[x] x::node<b,null> -|- x::node<c,null>.
//VALID

//4.
checkeq[x] x::node<a,null> -|- x::node<a,null>.
//VALID

//5.
checkeq[] x::node<v,null> * z::node<u,null> -|- y::node<u,null>.
//VALID  (not check match again case yet)

//6.
checkeq[] x::node<v,null> * z::node<c,null> -|- y::node<c,null> * t::node<v,null>.
//VALID

//7.
checkeq[x] x::node<t,null> * z::node<u,null> -|- y::node<t,null> * x::node<u,null>.
//VALID

//8.
checkeq[] x::node<u,c> * z::node<u,d> -|- y::node<u,a> * t::node<u,b>.
//VALID

//8.
checkeq[] x::node<a,null> * z::node<c,null> -|- y::node<c,null> * t::node<a,null>.
//VALID

//8.
checkeq[] x::node<a,null> * z::node<b,null> -|- y::node<c,null> * t::node<d,null>.
//VALID

//8.
checkeq[a] x::node<a,null> * z::node<b,null> -|- y::node<c,null> * t::node<d,null>.
//FAIL !!!!!!!!!!!!!!!!!!!***********************

//8.
checkeq[a] x::node<a,null> * z::node<b,null> -|- y::node<c,null> * t::node<a,null>.
//VALID
