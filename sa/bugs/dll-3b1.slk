data node{
	int val;
	node prev;
	node next;
}.

HeapPred H1(node a, node b).
HeapPred G1(node a, node b).
HeapPred HP_6(node a, node b).
HeapPred HP_7(node a, node b).

Declare_Unknown [HP_6].

relAssume H1
  H1(c,p)&c!=null --> c::node<_,prev_19_766',next_19>@M *
    HP_7(next_19,p)&true.

relAssume H1
  HP_7(next_19,p) & true --> H1(next_19,c')&true.

relAssume H1
  H1(c,p)&c=null --> emp.

shape_infer [H1][].//[pre_hps][post_hps]

/*
# dll-3b1.slk 

The useless elimination is not working.
We got below using --sa-useless

[ H1(c_44,p_43) ::=  
 H1(next_42,c') * c_44::node<Anon_40,prev_19_41,next_42>@M&true
 or emp&c_44=null
 ,
 HP_6(a,b) ::= NONE]


EXPECTING
=========

 H1(c_54,p_53) ::= H1a(c_45) 
 
 H1a(c_44) ::=  
    H1a(next_42) * c_44::node<Anon_40,prev_19_41,next_42>@M&true
 or emp&c_44=null
 
 HP_6(a,b) ::= NONE]


*/