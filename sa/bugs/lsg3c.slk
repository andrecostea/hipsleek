
data node{
    node s;
}.

HeapPred H(node a).

infer[H,x] 
H(x) 
 & x=null 
 |-  x::node<n>@L. 
print residue.
// OK
// <1>hfalse&false&{FLOW,(19,20)=__norm}[]
// inferred pure: [x!=null]

infer[x] 
H(x) 
 & x=null 
 |-  x::node<n>@L. 
print residue.
// OK
// <1>hfalse&false&{FLOW,(19,20)=__norm}[]
// inferred pure: [x!=null]

infer[H] 
H(x) 
 & x=null 
 |-  x::node<n>@L. 
print residue.
// WRONG (see below)
// <1>hfalse&false&{FLOW,(19,20)=__norm}[]
// inferred pure: [x!=null]


/*
INCORRECT:
==========

 <1>hfalse&false&{FLOW,(19,20)=__norm}[]
 inferred pure: [l!=null]

We must not add l!=null to
  es_infer_pure : CP.formula list; 

We must instead add: 
 inferred hprel: [H(l) --> l!=null]
which is kept at:
  es_infer_hp_rel : hprel list; (*(CP.rel_cat * formula * formula) list;*)




*/


