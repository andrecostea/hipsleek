data node{
	int val;
	node prev;
	node next;
}.

HeapPred H1(node a,node b).
HeapPred HP_5(node a,node b).
HeapPred HP_6(node a,node b).
HeapPred G1(node a, node b).
HeapPred K(int a).

/*
relAssume H1
 H1(c,y) --> c::node<v,prev_19_765',next_19_766'>@M * 
  K(v) * HP_5(prev_19_765',y) * HP_6(next_19_766',y)&true.

relAssume G1
 c::node<v,prev_14_771,y>@M * HP_5(prev_14_771,y) * K(v) * 
  HP_6(next_16_768,y)&true --> G1(c,y)&true.

*/
relAssume H1
 H1(c,y) --> c::node<v,prev,next>@M * 
   HP_5(prev,y) * HP_6(next,y)&true.

relAssume G1
 c::node<v,prev7,y>@M * HP_5(prev7,y) *
  HP_6(next_16_768,y)&true --> G1(c,y)&true.

shape_infer [H1][G1].

/*
[ H1(c_30,y_31) ::= c_30::node<v,prev_19_765',next_19_766'>@M * (HP_5(prev_19_765',y_31)) * 
(HP_6(next_19_766',y_31))&true,
 G1(c_32,y_33) ::= c_32::node<v,prev_14_771,y_33>@M * (HP_5(prev_14_771,y_33)) * 
(HP_6(next_16_768,y_33))&true,
 HP_5(prev_14_771,y) ::= htrue&true,
 HP_6(next_16_768,y) ::= htrue&true]
*/
