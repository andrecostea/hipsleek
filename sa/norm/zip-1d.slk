data node{
     int val;
     node next#REC;
}.

pred zipNM<y,n,m> ==
  self=null & y=null & n=0 & m=0
or self::node<_,p>*y::node<_,q>*p::zipNM<q, n1, m1> & n=n1+1 & m=m1+1.

pred zipN<n> ==
  self=null & n=0 
or self::node<_,p>*p::zipN< n1> & n=n1+1 .

pred zipM<m> ==
   self=null & m=0
or self::node<_,q>*q::zipM<m1> & m=m1+1.

//1
checkentail x::zipNM<y,m,n> |- x::zipN<n> * y::zipM<m>.

//2
checkentail x::zipN<n> * y::zipM<m> |- x::zipNM<y,m,n>.

print residue.
