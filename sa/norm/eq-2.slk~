data node{
	int val;
	node next;
}.

HeapPred H2(node a).
HeapPred P1(node a).

pred lseg<p> ==
    self::node<_,p> 
  or self::node<_,q> * q::lseg<p> 
 inv true.
/*
//1
infer [H2] H2(r)   |- r::node<_,null> .
print residue.
*/

/*
//2
infer [H2] H2(r)   |- r::node<n,q> & n>0 .
print residue.
*/
/*
//3
infer_exact [P1]
P1(yy)
|- (exists y,q36: P1(q36) & y=q36 & q36=yy)
.
print residue.
*/
/*
//4
infer_exact [P1]
P1(yy)
|- (exists y,q36: P1(q36) & y=q36 & y=yy)
.
print residue.
*/
/*
//5
infer_exact [P1]
P1(yy) & yy = y1 & y1 = y2 & y2=yy
|-  (exists y2,q36: P1(q36) & y2=q36 & y2=yy)
.
print residue.
*/
/*
//6
infer_exact [P1]
P1(yy) & yy = y1
|-  (exists y2,q36: P1(q36) & y2=q36 & y1=y2 )
.
print residue.
*/