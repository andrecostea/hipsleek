!!! init_tp by default: 
!!! Using z3
!!! init_tp by user: 
!!! Using oc
!!!-dre .*imply

Starting Omega...oc

!!! **sleekengine.ml#1125:type-table:[(i:11:int)(a:15:NUM[])(TVar__14:14:NUM)(Anon_full_perm:13:float)(TVar__12:12:int)(TVar__11:11:int)]
!!! **sleekcore.ml#129:conseq: EBase emp&(a[i-1])<(a[i])&{FLOW,(4,5)=__norm#E}[]
!!! **sleekcore.ml#130:fvs(conseq):[a,i]
!!! **sleekcore.ml#131:itype:[@arrvar]
!!! **sleekcore.ml#132:isvl:[a]
(==tpdispatcher.ml#1603==)
translate_tup2_imply@1
translate_tup2_imply inp1 : i=3
translate_tup2_imply inp2 : true
translate_tup2_imply@1 EXIT:( i=3, true)

!!! **sleekcore.ml#222:arrvar_flag:true
!!! **wrapper.ml#183:inside wrap_as_var
(==tpdispatcher.ml#3260==)
imply_label_filter@7@6@5@4@3@2
imply_label_filter inp1 : i=3
imply_label_filter inp2 : (a[i-1])<(a[i])
imply_label_filter@7 EXIT:[( i=3, (a[i-1])<(a[i]))]

(====)
standarize_array_imply@13@12@11@10@9@8@6@5@4@3@2
standarize_array_imply inp1 : i=3
standarize_array_imply inp2 : (a[i-1])<(a[i])
standarize_array_imply@13 EXIT:( i=3 & tarrvar1=i-1,  (a[tarrvar1])<(a[i]))

(====)
new_translate_out_array_in_imply_split@14@12@11@10@9@8@6@5@4@3@2
new_translate_out_array_in_imply_split inp1 : i=3 & tarrvar1=i-1
new_translate_out_array_in_imply_split inp2 : (a[tarrvar1])<(a[i])
new_translate_out_array_in_imply_split@14 EXIT:( i=3 & tarrvar1=i-1 & ((!(i=tarrvar1) | a___i___=a___tarrvar1___)), a___tarrvar1___<a___i___)

(====)
new_translate_out_array_in_imply_split_full@12@11@10@9@8@6@5@4@3@2
new_translate_out_array_in_imply_split_full inp1 : i=3
new_translate_out_array_in_imply_split_full inp2 : (a[i-1])<(a[i])
new_translate_out_array_in_imply_split_full@12 EXIT:( i=3 & tarrvar1=i-1 & ((!(i=tarrvar1) | a___i___=a___tarrvar1___)), a___tarrvar1___<a___i___)

(==tpdispatcher.ml#2634==)
translate_tup2_imply@16@15@11@10@9@8@6@5@4@3@2
translate_tup2_imply inp1 : i=3 & tarrvar1=i-1 & ((!(i=tarrvar1) | a___i___=a___tarrvar1___))
translate_tup2_imply inp2 : a___tarrvar1___<a___i___
translate_tup2_imply@16 EXIT:( i=3 & tarrvar1=i-1 & ((!(i=tarrvar1) | a___i___=a___tarrvar1___)), a___tarrvar1___<a___i___)

(==tpdispatcher.ml#2682==)
tp_imply_preprocess@15@11@10@9@8@6@5@4@3@2
tp_imply_preprocess inp1 :ante: i=3 & tarrvar1=i-1 & ((!(i=tarrvar1) | a___i___=a___tarrvar1___))
tp_imply_preprocess inp2 :conseq: a___tarrvar1___<a___i___
tp_imply_preprocess@15 EXIT:(None, i=3 & tarrvar1=i-1 & ((!(i=tarrvar1) | a___i___=a___tarrvar1___)), a___tarrvar1___<a___i___)

(====)
omega.imply_ops_1@18@17@11@10@9@8@6@5@4@3@2
omega.imply_ops_1 inp1 : i=3 & tarrvar1=i-1 & ((!(i=tarrvar1) | a___i___=a___tarrvar1___))
omega.imply_ops_1 inp2 : a___tarrvar1___<a___i___
omega.imply_ops_1@18 EXIT:false

(====)
[omega.ml]imply_ops_1@17@11@10@9@8@6@5@4@3@2
[omega.ml]imply_ops_1 inp1 : i=3 & tarrvar1=i-1 & ((!(i=tarrvar1) | a___i___=a___tarrvar1___))
[omega.ml]imply_ops_1 inp2 : a___tarrvar1___<a___i___
[omega.ml]imply_ops_1@17 EXIT:false

(==tpdispatcher.ml#2985==)
tp_imply_no_cache@11@10@9@8@6@5@4@3@2
tp_imply_no_cache inp1 : i=3
tp_imply_no_cache inp2 : (a[i-1])<(a[i])
tp_imply_no_cache inp3 :2
tp_imply_no_cache inp4 :OMEGA CALCULATOR
tp_imply_no_cache@11 EXIT:false

(==tpdispatcher.ml#3022==)
tp_imply_perm@10@9@8@6@5@4@3@2
tp_imply_perm inp1 : i=3
tp_imply_perm inp2 : (a[i-1])<(a[i])
tp_imply_perm@10 EXIT:false

(==tpdispatcher.ml#3029==)
imply_cache@9@8@6@5@4@3@2
imply_cache inp1 : i=3
imply_cache inp2 : (a[i-1])<(a[i])
imply_cache@9 EXIT:found?:false ans:false

(==tpdispatcher.ml#3295==)
tp_imply@8@6@5@4@3@2
tp_imply inp1 :ante: i=3
tp_imply inp2 :conseq: (a[i-1])<(a[i])
tp_imply@8 EXIT:solver:OMEGA CALCULATOR: false

(==tpdispatcher.ml#3513==)
imply_timeout 2@6@5@4@3@2
imply_timeout 2 inp1 : i=3
imply_timeout 2 inp2 : (a[i-1])<(a[i])
imply_timeout 2@6 EXIT:false

(==tpdispatcher.ml#3527==)
imply_timeout 3@5@4@3@2
imply_timeout 3 inp1 : i=3
imply_timeout 3 inp2 : (a[i-1])<(a[i])
imply_timeout 3 inp3 :timeout:3.
imply_timeout 3 inp4 :2
imply_timeout 3@5 EXIT:false

(==tpdispatcher.ml#3589==)
mix_imply_timeout@4@3@2
mix_imply_timeout inp1 : i=3
mix_imply_timeout inp2 : (a[i-1])<(a[i])
mix_imply_timeout@4 EXIT:false

(==tpdispatcher.ml#4088==)
mix_imply@3@2
mix_imply inp1 : i=3
mix_imply inp2 : (a[i-1])<(a[i])
mix_imply inp3 :999
mix_imply@3 EXIT:false

(==solver.ml#11356==)
imply_raw@2
imply_raw inp1 : i=3
imply_raw inp2 : (a[i-1])<(a[i])
imply_raw@2 EXIT:false

(==tpdispatcher.ml#1603==)
translate_tup2_imply@19
translate_tup2_imply inp1 : i=3 & a___tarrvar2___<a___i___ & tarrvar2=i-1 & ((!(i=tarrvar2) | 
a___i___=a___tarrvar2___))
translate_tup2_imply inp2 : true
translate_tup2_imply@19 EXIT:( i=3 & a___tarrvar2___<a___i___ & tarrvar2=i-1 & ((!(i=tarrvar2) | 
a___i___=a___tarrvar2___)), true)

(==tpdispatcher.ml#3260==)
imply_label_filter@27@26@25@24@23@22@21@20
imply_label_filter inp1 : i=3
imply_label_filter inp2 : (a[i-1])<(a[i])
imply_label_filter@27 EXIT:[( i=3, (a[i-1])<(a[i]))]

(==tpdispatcher.ml#3029==)
imply_cache@29@28@26@25@24@23@22@21@20
imply_cache inp1 : i=3
imply_cache inp2 : (a[i-1])<(a[i])
imply_cache@29 EXIT:found?:true ans:false

(==tpdispatcher.ml#3295==)
tp_imply@28@26@25@24@23@22@21@20
tp_imply inp1 :ante: i=3
tp_imply inp2 :conseq: (a[i-1])<(a[i])
tp_imply@28 EXIT:solver:CACHED: false

(==tpdispatcher.ml#3513==)
imply_timeout 2@26@25@24@23@22@21@20
imply_timeout 2 inp1 : i=3
imply_timeout 2 inp2 : (a[i-1])<(a[i])
imply_timeout 2@26 EXIT:false

(==tpdispatcher.ml#3527==)
imply_timeout 3@25@24@23@22@21@20
imply_timeout 3 inp1 : i=3
imply_timeout 3 inp2 : (a[i-1])<(a[i])
imply_timeout 3 inp3 :timeout:3.
imply_timeout 3 inp4 :4
imply_timeout 3@25 EXIT:false

(==solver.ml#8917==)
imply_one@24@23@22@21@20
imply_one inp1 : i=3
imply_one inp2 : (a[i-1])<(a[i])
imply_one@24 EXIT:false

(====)
imply_disj_orig@23@22@21@20
imply_disj_orig inp1 :[ i=3]
imply_disj_orig inp2 : (a[i-1])<(a[i])
imply_disj_orig@23 EXIT:false

(====)
imply_one_conj_orig@22@21@20
imply_one_conj_orig inp1 :[ i=3]
imply_one_conj_orig inp2 :[ i=3]
imply_one_conj_orig inp3 : (a[i-1])<(a[i])
imply_one_conj_orig@22 EXIT:false

(==solver.ml#8917==)
imply_conj_orig@21@20
imply_conj_orig inp1 :[ i=3]
imply_conj_orig inp2 :[ i=3]
imply_conj_orig inp3 :[ (a[i-1])<(a[i])]
imply_conj_orig@21 EXIT:false

(==cpure.ml#6320==)
imply_mix_formula#1@20
imply_mix_formula#1 inp1 : i=3
imply_mix_formula#1 inp2 :Some( i=3)
imply_mix_formula#1 inp3 : (a[i-1])<(a[i])
imply_mix_formula#1 inp4 : []
imply_mix_formula#1@20 EXIT:(false,None)

(==tpdispatcher.ml#1603==)
translate_tup2_imply@30
translate_tup2_imply inp1 : a___tarrvar3___<a___i___ & tarrvar3=i-1 & ((!(i=tarrvar3) | 
a___i___=a___tarrvar3___))
translate_tup2_imply inp2 : true
translate_tup2_imply@30 EXIT:( a___tarrvar3___<a___i___ & tarrvar3=i-1 & ((!(i=tarrvar3) | 
a___i___=a___tarrvar3___)), true)

(==tpdispatcher.ml#3260==)
imply_label_filter@36@35@34@33@32@31
imply_label_filter inp1 : i=3
imply_label_filter inp2 : (a[i-1])<(a[i])
imply_label_filter@36 EXIT:[( i=3, (a[i-1])<(a[i]))]

(==tpdispatcher.ml#3029==)
imply_cache@38@37@35@34@33@32@31
imply_cache inp1 : i=3
imply_cache inp2 : (a[i-1])<(a[i])
imply_cache@38 EXIT:found?:true ans:false

(==tpdispatcher.ml#3295==)
tp_imply@37@35@34@33@32@31
tp_imply inp1 :ante: i=3
tp_imply inp2 :conseq: (a[i-1])<(a[i])
tp_imply@37 EXIT:solver:CACHED: false

(==tpdispatcher.ml#3513==)
imply_timeout 2@35@34@33@32@31
imply_timeout 2 inp1 : i=3
imply_timeout 2 inp2 : (a[i-1])<(a[i])
imply_timeout 2@35 EXIT:false

(==tpdispatcher.ml#3527==)
imply_timeout 3@34@33@32@31
imply_timeout 3 inp1 : i=3
imply_timeout 3 inp2 : (a[i-1])<(a[i])
imply_timeout 3 inp3 :timeout:3.
imply_timeout 3 inp4 :6
imply_timeout 3@34 EXIT:false

(==tpdispatcher.ml#3589==)
mix_imply_timeout@33@32@31
mix_imply_timeout inp1 : i=3
mix_imply_timeout inp2 : (a[i-1])<(a[i])
mix_imply_timeout@33 EXIT:false

(==tpdispatcher.ml#4088==)
mix_imply@32@31
mix_imply inp1 : i=3
mix_imply inp2 : (a[i-1])<(a[i])
mix_imply inp3 :999
mix_imply@32 EXIT:false

(====)
imply_raw@31
imply_raw inp1 : i=3
imply_raw inp2 : (a[i-1])<(a[i])
imply_raw@31 EXIT:false

!!! **infer.ml#1123:new_p: before simplify: forall(i:(i!=3 | (a[i-1])<(a[i])))
(==tpdispatcher.ml#1603==)
translate_tup2_imply@39
translate_tup2_imply inp1 : forall(i:(i!=3 | (a[i-1])<(a[i])))
translate_tup2_imply inp2 : true
translate_tup2_imply@39 EXIT:( forall(i:(i!=3 | (a[i-1])<(a[i]))), true)

!!! **infer.ml#1137:new_p: forall(i:(i!=3 | (a[i-1])<(a[i])))
!!! **infer.ml#1138:new_p_ass: forall(i:(i!=3 | (a[i-1])<(a[i])))
(==tpdispatcher.ml#3260==)
imply_label_filter@45@44@43@42@41@40
imply_label_filter inp1 : i=3
imply_label_filter inp2 : forall(i:(i!=3 | (a[i-1])<(a[i])))
imply_label_filter@45 EXIT:[( i=3, forall(i:(i!=3 | (a[i-1])<(a[i]))))]

(====)
standarize_array_imply@51@50@49@48@47@46@44@43@42@41@40
standarize_array_imply inp1 : true
standarize_array_imply inp2 : forall(i_17:(i_17!=3 | (a[i_17-1])<(a[i_17])))
standarize_array_imply@51 EXIT:( true & tarrvar5=i_17-1,  forall(i_17:(i_17!=3 | (a[tarrvar5])<(a[i_17]))))

(====)
new_translate_out_array_in_imply_split@52@50@49@48@47@46@44@43@42@41@40
new_translate_out_array_in_imply_split inp1 : true & tarrvar5=i_17-1
new_translate_out_array_in_imply_split inp2 : forall(i_17:(i_17!=3 | (a[tarrvar5])<(a[3])))
new_translate_out_array_in_imply_split@52 EXIT:( true & tarrvar5=i_17-1 & ((!(3=tarrvar5) | a___3___=a___tarrvar5___)), forall(i_17:(i_17!=3 | a___tarrvar5___<a___3___)))

(====)
new_translate_out_array_in_imply_split_full@50@49@48@47@46@44@43@42@41@40
new_translate_out_array_in_imply_split_full inp1 : true
new_translate_out_array_in_imply_split_full inp2 : forall(i_17:(i_17!=3 | (a[i_17-1])<(a[i_17])))
new_translate_out_array_in_imply_split_full@50 EXIT:( true & tarrvar5=i_17-1 & ((!(3=tarrvar5) | a___3___=a___tarrvar5___)), forall(i_17:(i_17!=3 | a___tarrvar5___<a___3___)))

(==tpdispatcher.ml#2634==)
translate_tup2_imply@54@53@49@48@47@46@44@43@42@41@40
translate_tup2_imply inp1 : true & tarrvar5=i_17-1 & ((!(3=tarrvar5) | a___3___=a___tarrvar5___))
translate_tup2_imply inp2 : forall(i_17:(i_17!=3 | a___tarrvar5___<a___3___))
translate_tup2_imply@54 EXIT:( tarrvar5=i_17-1 & ((!(3=tarrvar5) | a___3___=a___tarrvar5___)), forall(i_17:(i_17!=3 | a___tarrvar5___<a___3___)))

(==tpdispatcher.ml#2682==)
tp_imply_preprocess@53@49@48@47@46@44@43@42@41@40
tp_imply_preprocess inp1 :ante: true & tarrvar5=i_17-1 & ((!(3=tarrvar5) | a___3___=a___tarrvar5___))
tp_imply_preprocess inp2 :conseq: forall(i_17:(i_17!=3 | a___tarrvar5___<a___3___))
tp_imply_preprocess@53 EXIT:(None, tarrvar5=i_17-1 & ((!(3=tarrvar5) | a___3___=a___tarrvar5___)), forall(i_17:(i_17!=3 | a___tarrvar5___<a___3___)))

(====)
omega.imply_ops_1@56@55@49@48@47@46@44@43@42@41@40
omega.imply_ops_1 inp1 : tarrvar5=i_17-1 & ((!(3=tarrvar5) | a___3___=a___tarrvar5___))
omega.imply_ops_1 inp2 : forall(i_17:(i_17!=3 | a___tarrvar5___<a___3___))
omega.imply_ops_1@56 EXIT:false

(====)
[omega.ml]imply_ops_1@55@49@48@47@46@44@43@42@41@40
[omega.ml]imply_ops_1 inp1 : tarrvar5=i_17-1 & ((!(3=tarrvar5) | a___3___=a___tarrvar5___))
[omega.ml]imply_ops_1 inp2 : forall(i_17:(i_17!=3 | a___tarrvar5___<a___3___))
[omega.ml]imply_ops_1@55 EXIT:false

(==tpdispatcher.ml#2985==)
tp_imply_no_cache@49@48@47@46@44@43@42@41@40
tp_imply_no_cache inp1 : true
tp_imply_no_cache inp2 : forall(i_17:(i_17!=3 | (a[i_17-1])<(a[i_17])))
tp_imply_no_cache inp3 :22
tp_imply_no_cache inp4 :OMEGA CALCULATOR
tp_imply_no_cache@49 EXIT:false

(==tpdispatcher.ml#3022==)
tp_imply_perm@48@47@46@44@43@42@41@40
tp_imply_perm inp1 : true
tp_imply_perm inp2 : forall(i_17:(i_17!=3 | (a[i_17-1])<(a[i_17])))
tp_imply_perm@48 EXIT:false

(==tpdispatcher.ml#3029==)
imply_cache@47@46@44@43@42@41@40
imply_cache inp1 : true
imply_cache inp2 : forall(i_17:(i_17!=3 | (a[i_17-1])<(a[i_17])))
imply_cache@47 EXIT:found?:false ans:false

(==tpdispatcher.ml#3295==)
tp_imply@46@44@43@42@41@40
tp_imply inp1 :ante: true
tp_imply inp2 :conseq: forall(i_17:(i_17!=3 | (a[i_17-1])<(a[i_17])))
tp_imply@46 EXIT:solver:OMEGA CALCULATOR: false

(==tpdispatcher.ml#3513==)
imply_timeout 2@44@43@42@41@40
imply_timeout 2 inp1 : i=3
imply_timeout 2 inp2 : forall(i:(i!=3 | (a[i-1])<(a[i])))
imply_timeout 2@44 EXIT:false

(==tpdispatcher.ml#3527==)
imply_timeout 3@43@42@41@40
imply_timeout 3 inp1 : i=3
imply_timeout 3 inp2 : forall(i:(i!=3 | (a[i-1])<(a[i])))
imply_timeout 3 inp3 :timeout:3.
imply_timeout 3 inp4 :22
imply_timeout 3@43 EXIT:false

(==tpdispatcher.ml#3589==)
mix_imply_timeout@42@41@40
mix_imply_timeout inp1 : i=3
mix_imply_timeout inp2 : forall(i:(i!=3 | (a[i-1])<(a[i])))
mix_imply_timeout@42 EXIT:false

(==tpdispatcher.ml#4088==)
mix_imply@41@40
mix_imply inp1 : i=3
mix_imply inp2 : forall(i:(i!=3 | (a[i-1])<(a[i])))
mix_imply inp3 :999
mix_imply@41 EXIT:false

(==omega.ml#1111==)
imply_raw@40
imply_raw inp1 : i=3
imply_raw inp2 : forall(i:(i!=3 | (a[i-1])<(a[i])))
imply_raw@40 EXIT:false

(==tpdispatcher.ml#3260==)
imply_label_filter@64@63@62@61@60@59@58@57
imply_label_filter inp1 : i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))
imply_label_filter inp2 : (a[i-1])<(a[i])
imply_label_filter@64 EXIT:[( i=3 & forall(i:(i!=3 | (a[i-1])<(a[i]))), (a[i-1])<(a[i]))]

(====)
standarize_array_imply@70@69@68@67@66@65@63@62@61@60@59@58@57
standarize_array_imply inp1 : i=3 & forall(i_18:(i_18!=3 | (a[i_18-1])<(a[i_18])))
standarize_array_imply inp2 : (a[i-1])<(a[i])
standarize_array_imply@70 EXIT:( i=3 & forall(i_18:(i_18!=3 | ((a[tarrvar6])<(a[i_18]) & tarrvar6=i_18-
1))) & tarrvar7=i-1,  (a[tarrvar7])<(a[i]))

(====)
new_translate_out_array_in_imply_split@71@69@68@67@66@65@63@62@61@60@59@58@57
new_translate_out_array_in_imply_split inp1 : i=3 & forall(i_18:(i_18!=3 | ((a[tarrvar6])<(a[3]) & tarrvar6=i_18-1))) & 
tarrvar7=i-1
new_translate_out_array_in_imply_split inp2 : (a[tarrvar7])<(a[i])
new_translate_out_array_in_imply_split@71 EXIT:( i=3 & forall(i_18:(i_18!=3 | (a___tarrvar6___<a___3___ & tarrvar6=i_18-
1))) & tarrvar7=i-1 & ((!(i=tarrvar7) | a___i___=a___tarrvar7___)) & 
((!(i=3) | a___i___=a___3___)) & ((!(i=tarrvar6) | 
a___i___=a___tarrvar6___)) & ((!(tarrvar7=3) | a___tarrvar7___=a___3___)) & 
((!(tarrvar7=tarrvar6) | a___tarrvar7___=a___tarrvar6___)) & 
((!(3=tarrvar6) | a___3___=a___tarrvar6___)), a___tarrvar7___<a___i___)

(====)
new_translate_out_array_in_imply_split_full@69@68@67@66@65@63@62@61@60@59@58@57
new_translate_out_array_in_imply_split_full inp1 : i=3 & forall(i_18:(i_18!=3 | (a[i_18-1])<(a[i_18])))
new_translate_out_array_in_imply_split_full inp2 : (a[i-1])<(a[i])
new_translate_out_array_in_imply_split_full@69 EXIT:( i=3 & forall(i_18:(i_18!=3 | (a___tarrvar6___<a___3___ & tarrvar6=i_18-
1))) & tarrvar7=i-1 & ((!(i=tarrvar7) | a___i___=a___tarrvar7___)) & 
((!(i=3) | a___i___=a___3___)) & ((!(i=tarrvar6) | 
a___i___=a___tarrvar6___)) & ((!(tarrvar7=3) | a___tarrvar7___=a___3___)) & 
((!(tarrvar7=tarrvar6) | a___tarrvar7___=a___tarrvar6___)) & 
((!(3=tarrvar6) | a___3___=a___tarrvar6___)), a___tarrvar7___<a___i___)

(==tpdispatcher.ml#2634==)
translate_tup2_imply@73@72@68@67@66@65@63@62@61@60@59@58@57
translate_tup2_imply inp1 : i=3 & forall(i_18:(i_18!=3 | (a___tarrvar6___<a___3___ & tarrvar6=i_18-
1))) & tarrvar7=i-1 & ((!(i=tarrvar7) | a___i___=a___tarrvar7___)) & 
((!(i=3) | a___i___=a___3___)) & ((!(i=tarrvar6) | 
a___i___=a___tarrvar6___)) & ((!(tarrvar7=3) | a___tarrvar7___=a___3___)) & 
((!(tarrvar7=tarrvar6) | a___tarrvar7___=a___tarrvar6___)) & 
((!(3=tarrvar6) | a___3___=a___tarrvar6___))
translate_tup2_imply inp2 : a___tarrvar7___<a___i___
translate_tup2_imply@73 EXIT:( i=3 & forall(i_18:(i_18!=3 | (a___tarrvar6___<a___3___ & tarrvar6=i_18-
1))) & tarrvar7=i-1 & ((!(i=tarrvar7) | a___i___=a___tarrvar7___)) & 
((!(i=3) | a___i___=a___3___)) & ((!(i=tarrvar6) | 
a___i___=a___tarrvar6___)) & ((!(tarrvar7=3) | a___tarrvar7___=a___3___)) & 
((!(tarrvar7=tarrvar6) | a___tarrvar7___=a___tarrvar6___)) & 
((!(3=tarrvar6) | a___3___=a___tarrvar6___)), a___tarrvar7___<a___i___)

(==tpdispatcher.ml#2682==)
tp_imply_preprocess@72@68@67@66@65@63@62@61@60@59@58@57
tp_imply_preprocess inp1 :ante: i=3 & forall(i_18:(i_18!=3 | (a___tarrvar6___<a___3___ & tarrvar6=i_18-
1))) & tarrvar7=i-1 & ((!(i=tarrvar7) | a___i___=a___tarrvar7___)) & 
((!(i=3) | a___i___=a___3___)) & ((!(i=tarrvar6) | 
a___i___=a___tarrvar6___)) & ((!(tarrvar7=3) | a___tarrvar7___=a___3___)) & 
((!(tarrvar7=tarrvar6) | a___tarrvar7___=a___tarrvar6___)) & 
((!(3=tarrvar6) | a___3___=a___tarrvar6___))
tp_imply_preprocess inp2 :conseq: a___tarrvar7___<a___i___
tp_imply_preprocess@72 EXIT:(None, i=3 & forall(i_18:(i_18!=3 | (a___tarrvar6___<a___3___ & tarrvar6=i_18-
1))) & tarrvar7=i-1 & ((!(i=tarrvar7) | a___i___=a___tarrvar7___)) & 
((!(i=3) | a___i___=a___3___)) & ((!(i=tarrvar6) | 
a___i___=a___tarrvar6___)) & ((!(tarrvar7=3) | a___tarrvar7___=a___3___)) & 
((!(tarrvar7=tarrvar6) | a___tarrvar7___=a___tarrvar6___)) & 
((!(3=tarrvar6) | a___3___=a___tarrvar6___)), a___tarrvar7___<a___i___)

(====)
omega.imply_ops_1@75@74@68@67@66@65@63@62@61@60@59@58@57
omega.imply_ops_1 inp1 : i=3 & forall(i_18:(i_18!=3 | (a___tarrvar6___<a___3___ & tarrvar6=i_18-
1))) & tarrvar7=i-1 & ((!(i=tarrvar7) | a___i___=a___tarrvar7___)) & 
((!(i=3) | a___i___=a___3___)) & ((!(i=tarrvar6) | 
a___i___=a___tarrvar6___)) & ((!(tarrvar7=3) | a___tarrvar7___=a___3___)) & 
((!(tarrvar7=tarrvar6) | a___tarrvar7___=a___tarrvar6___)) & 
((!(3=tarrvar6) | a___3___=a___tarrvar6___))
omega.imply_ops_1 inp2 : a___tarrvar7___<a___i___
omega.imply_ops_1@75 EXIT:true

(====)
[omega.ml]imply_ops_1@74@68@67@66@65@63@62@61@60@59@58@57
[omega.ml]imply_ops_1 inp1 : i=3 & forall(i_18:(i_18!=3 | (a___tarrvar6___<a___3___ & tarrvar6=i_18-
1))) & tarrvar7=i-1 & ((!(i=tarrvar7) | a___i___=a___tarrvar7___)) & 
((!(i=3) | a___i___=a___3___)) & ((!(i=tarrvar6) | 
a___i___=a___tarrvar6___)) & ((!(tarrvar7=3) | a___tarrvar7___=a___3___)) & 
((!(tarrvar7=tarrvar6) | a___tarrvar7___=a___tarrvar6___)) & 
((!(3=tarrvar6) | a___3___=a___tarrvar6___))
[omega.ml]imply_ops_1 inp2 : a___tarrvar7___<a___i___
[omega.ml]imply_ops_1@74 EXIT:true

(==tpdispatcher.ml#2985==)
tp_imply_no_cache@68@67@66@65@63@62@61@60@59@58@57
tp_imply_no_cache inp1 : i=3 & forall(i_18:(i_18!=3 | (a[i_18-1])<(a[i_18])))
tp_imply_no_cache inp2 : (a[i-1])<(a[i])
tp_imply_no_cache inp3 :23
tp_imply_no_cache inp4 :OMEGA CALCULATOR
tp_imply_no_cache@68 EXIT:true

(==tpdispatcher.ml#3022==)
tp_imply_perm@67@66@65@63@62@61@60@59@58@57
tp_imply_perm inp1 : i=3 & forall(i_18:(i_18!=3 | (a[i_18-1])<(a[i_18])))
tp_imply_perm inp2 : (a[i-1])<(a[i])
tp_imply_perm@67 EXIT:true

(==tpdispatcher.ml#3029==)
imply_cache@66@65@63@62@61@60@59@58@57
imply_cache inp1 : i=3 & forall(i_18:(i_18!=3 | (a[i_18-1])<(a[i_18])))
imply_cache inp2 : (a[i-1])<(a[i])
imply_cache@66 EXIT:found?:false ans:true

(==tpdispatcher.ml#3295==)
tp_imply@65@63@62@61@60@59@58@57
tp_imply inp1 :ante: i=3 & forall(i_18:(i_18!=3 | (a[i_18-1])<(a[i_18])))
tp_imply inp2 :conseq: (a[i-1])<(a[i])
tp_imply@65 EXIT:solver:OMEGA CALCULATOR: true

(==tpdispatcher.ml#3513==)
imply_timeout 2@63@62@61@60@59@58@57
imply_timeout 2 inp1 : i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))
imply_timeout 2 inp2 : (a[i-1])<(a[i])
imply_timeout 2@63 EXIT:true

(==tpdispatcher.ml#3527==)
imply_timeout 3@62@61@60@59@58@57
imply_timeout 3 inp1 : i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))
imply_timeout 3 inp2 : (a[i-1])<(a[i])
imply_timeout 3 inp3 :timeout:3.
imply_timeout 3 inp4 :23
imply_timeout 3@62 EXIT:true

(==solver.ml#8917==)
imply_one@61@60@59@58@57
imply_one inp1 : i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))
imply_one inp2 : (a[i-1])<(a[i])
imply_one@61 EXIT:true

(====)
imply_disj_orig@60@59@58@57
imply_disj_orig inp1 :[ i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))]
imply_disj_orig inp2 : (a[i-1])<(a[i])
imply_disj_orig@60 EXIT:true

(====)
imply_one_conj_orig@59@58@57
imply_one_conj_orig inp1 :[ i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))]
imply_one_conj_orig inp2 :[ i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))]
imply_one_conj_orig inp3 : (a[i-1])<(a[i])
imply_one_conj_orig@59 EXIT:true

(==solver.ml#8917==)
imply_conj_orig@58@57
imply_conj_orig inp1 :[ i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))]
imply_conj_orig inp2 :[ i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))]
imply_conj_orig inp3 :[ (a[i-1])<(a[i])]
imply_conj_orig@58 EXIT:true

(====)
imply_mix_formula#2@57
imply_mix_formula#2 inp1 : i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))
imply_mix_formula#2 inp2 :Some( i=3 & forall(i:(i!=3 | (a[i-1])<(a[i]))))
imply_mix_formula#2 inp3 : (a[i-1])<(a[i])
imply_mix_formula#2 inp4 : []
imply_mix_formula#2@57 EXIT:(true,None)

(==tpdispatcher.ml#1603==)
translate_tup2_imply@76
translate_tup2_imply inp1 : forall(i:(i!=3 | (a[i-1])<(a[i]))) & i=3
translate_tup2_imply inp2 : true
translate_tup2_imply@76 EXIT:( forall(i:(i!=3 | (a[i-1])<(a[i]))) & i=3, true)

Entail (1) : Valid. 

Residue:
 <1>emp&i=3 & forall(i:(i!=3 | (a[i-1])<(a[i])))&{FLOW,(4,5)=__norm#E}[]
 inferred pure: [forall(i:(i!=3 | (1+(a[i-1]))<=(a[i])))]

Stop Omega... 21 invocations 
SAT Count   : 6
SAT % Hit   : 16.66%
IMPLY Count : 5
IMPLY % Hit : 40.%
Time(cache overhead) : 0.000307 (seconds)

!!! log(small):(0.039131,25)
Total verification time: 0.093175 second(s)
	Time spent in main process: 0.078985 second(s)
	Time spent in child processes: 0.01419 second(s)

