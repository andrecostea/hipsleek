//============== dag.v ==================//
data node{
int val;
node left;
node right
}.

relation updG(bag(node) G, node x, int d, node l, node r, bag(node) G1).
relation lookup(bag(node) G, node x, int d, node l, node r).
relation sub(bag(node) R, bag(node) R1,bag(node) G, bag(node) G1).
relation reach(bag(node) G, node x, bag(node) R).
relation notreach(bag(node) G, node x, bag(node) NR).

pred dag<G> == self = null
       or self::node<v,l,r> * (l::dag<G> U* r::dag<G>)
	& lookup(G,self,v,l,r).
 
//========================================//

relation mark(bag(node) G,node x,bag(node) G1).
relation mark1(bag(node) G,node x,bag(node) G1).

axiom lookup(G,x,1,l,r) ==> mark(G,x,G1).

axiom lookup(G,x,_,l,r) & mark(G,l,G1) & mark(G1,r,G2) ==> lookup(G2,x,_,l,r).
//axiom lookup(G,x,v,l,r) ==> updG(G,x,v,l,r,_).

//axiom updG(G,x,1,l,r,G1) ==> mark1(G,x,G1).

axiom mark(G,x,G1) ==> reach(G,x,R) & reach(G1,x,R1) & sub(R,R1,G,G1).
axiom mark(G,x,G1) ==> notreach(G,x,NR) & notreach(G1,x,NR).

axiom mark(G,x,G1) & mark(G1,y,G2) ==> mark(G,y,G1) & mark(G1,x,G2).
axiom mark(G,l,G1) & mark(G1,r,G2) & mark1(G2,x,G3) ==> mark(G,x,G3).
axiom mark(G,r,G1) & mark1(G1,x,G2) & mark(G2,l,G3) ==> mark(G,x,G3).
axiom mark(G,l,G1) & mark1(G1,x,G2) & mark(G2,r,G3) ==> mark(G,x,G3).
axiom mark1(G,x,G1) & mark(G1,l,G2) & mark(G2,r,G3) ==> mark(G,x,G3).


checkentail  G_1108=G_1134 & v_1110=val_61_1133 & r_1112=r_50' & v_1110!=1 & x'!=null & 
x=x' & lookup(G,x',v_1110,l_1111,r_1112) & G=G_1108 & G=G_1109 & 
l_1111=l_49' & mark(G_1134,l_49',G1_1144)
|- reach(G,l_49',R) & reach(G1_1144,l_49',R1) & sub(R,R1,G,G1_1144) & 
notreach(G,l_49',NR) & notreach(G1_1144,l_49',NR).
