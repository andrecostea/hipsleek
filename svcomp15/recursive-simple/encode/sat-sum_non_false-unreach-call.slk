/*
void __error()
/*@
  requires emp & true
  ensures emp & true & flow __Error;
*/;
*/

/*
int sum(int n, int m)
/*@
  requires true
  ensures res=n+m;
*/
{
    if (n <= 0) {
      return m + n;
    } else {
      return sum(n - 1, m + 1);
    }
}
*/

pred sum_v<n,m,r,e> == n<=0 & r=m+n & e=0
     or _::sum_v<n-1,m+1,r1,e1> & r=r1 & e1=0 & e=0
     or _::sum_v<n-1,m+1,r1,e1> & e1=1 & e=1.

/*
void main()
/*@
  requires true
  ensures true;
*/
{
  int a;
  int b;
  int result = sum(a, b);
  if (result == a + b) {
    __error();
  }
}
*/

pred main_v<e> ==  _::sum_v<a,b,result,e1> & result=a+b & e1=0 & e=1
   or  _::sum_v<a,b,result,e1> & result!=a+b & e1=0 & e=0
   or  _::sum_v<a,b,result,e1> & e1=1 & e=1.


checksat _::main_v<e> & e=1.

expect Unsat.