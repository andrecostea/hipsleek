// extern void __VERIFIER_error() __attribute__ ((__noreturn__));

/*
 * Recursive computation of fibonacci numbers.
 * 
 * Author: Matthias Heizmann
 * Date: 2013-07-13
 * 
 */

// extern int __VERIFIER_nondet_int(void);

/*
int fibonacci(int n) {
    if (n < 1) {
        return 0;
    } else if (n == 1) {
        return 1;
    } else {
        return fibonacci(n-1) + fibonacci(n-2);
    }
}
*/

pred fibonacci_v<n,r,e> == n<1 & r=0 & e=1
     or n=1 & r=1 & e=1
     or _::fibonacci_v<n-1,r1,e1> * _::fibonacci_v<n-2,r2,e2> & r=r1+r2 & e1=1 & e2=1 & e=1.

/*
int main() {
    int x = __VERIFIER_nondet_int();
    if (x > 46 || x == -2147483648) {
        return 0;
    }
    int result = fibonacci(x);
    if (result >= x - 1) {
        return 0;
    } else {
        ERROR: __VERIFIER_error();
    }
}
*/

pred main_v<x,r,e> == x>46 & r=0 & e=1
     or x=-2147483648 & r=0 & e=1
     or _::fibonacci_v<x,r1,e1> & x<=46 & x!=-2147483648 & r1>=x-1 & r=0 & e=e1
     or _::fibonacci_v<x,r1,e1> & x<=46 & x!=-2147483648 & r1<x-1 & e=0.


checksat _::main_v<x,r,e> & e=0.

expect Unsat.

