Starting Omega... 

 checking:  EXISTS(a_29,m_30,n_31: x::node<m,n,-,a,a_29>@M * 
y::node<m_30,n_31,-,-,->@M & a_29=a & m_30=m & n_31=n &
{FLOW,(27,27)=__norm}) |-  EBase exists (E)[](I)[m1; e; f](ex)[]x::node<m1,-,-,e,f>@M & e=f &
       {FLOW,(27,27)=__norm}


!!!:0: 0: [entail:0][post:0]SAT #1

!!!:0: 0: [entail:0][post:0] a_29=a & m_30=m & n_31=n & x=1 & y=2

!!!:0: 0: [entail:0][post:0]heap_entail_struc_init:
ctx:
 
Good Context: [es_formula: 
                EXISTS(a_29,m_30,n_31: x::node<m,n,-,a,a_29>@M * 
                y::node<m_30,n_31,-,-,->@M & a_29=a & m_30=m & n_31=n &
                {FLOW,(27,27)=__norm})
               es_pure: true
               es_heap: true
               es_aux_conseq: true
               es_must_error: None
               es_var_label: None]

conseq:
 EBase exists (E)[](I)[m1; e; f](ex)[]x::node<m1,-,-,e,f>@M & e=f &
       {FLOW,(27,27)=__norm}

!!!:0: 0: [entail:0][post:0]heap_entail_one_context_struc:
ctx:
 es_formula: 
  EXISTS(a_29,m_30,n_31: x::node<m,n,-,a,a_29>@M * 
  y::node<m_30,n_31,-,-,->@M & a_29=a & m_30=m & n_31=n &
  {FLOW,(27,27)=__norm})
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 EBase exists (E)[](I)[m1; e; f](ex)[]x::node<m1,-,-,e,f>@M & e=f &
       {FLOW,(27,27)=__norm}

!!!:0: 0: [entail:0][post:0]heap_entail_after_sat_struc: invoking heap_entail_conjunct_lhs_struc
context:
 es_formula: 
  EXISTS(a_29,m_30,n_31: x::node<m,n,-,a,a_29>@M * 
  y::node<m_30,n_31,-,-,->@M & a_29=a & m_30=m & n_31=n &
  {FLOW,(27,27)=__norm})
 es_pure: true
 es_heap: true
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 EBase exists (E)[](I)[m1; e; f](ex)[]x::node<m1,-,-,e,f>@M & e=f &
       {FLOW,(27,27)=__norm}

!!!:0: 0: [entail:0][post:0]heap_entail_one_context:
ctx:
 es_formula: 
  EXISTS(a_29,m_30,n_31: x::node<m,n,-,a,a_29>@M * 
  y::node<m_30,n_31,-,-,->@M & a_29=a & m_30=m & n_31=n &
  {FLOW,(27,27)=__norm})
 es_pure: true
 es_heap: true
 es_gen_impl_vars: [m1; e; f]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 x::node<m1,-,-,e,f>@M & e=f & {FLOW,(27,27)=__norm}


!!!:0: 0: [entail:0][post:0]heap_entail_after_sat: invoking heap_entail_conjunct_lhs
context:
 es_formula: 
  EXISTS(a_29,m_30,n_31: x::node<m,n,-,a,a_29>@M * 
  y::node<m_30,n_31,-,-,->@M & a_29=a & m_30=m & n_31=n &
  {FLOW,(27,27)=__norm})
 es_pure: true
 es_heap: true
 es_gen_impl_vars: [m1; e; f]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 x::node<m1,-,-,e,f>@M & e=f & {FLOW,(27,27)=__norm}

!!!:0: 0: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  EXISTS(a_29,m_30,n_31: x::node<m,n,-,a,a_29>@M * 
  y::node<m_30,n_31,-,-,->@M & a_29=a & m_30=m & n_31=n &
  {FLOW,(27,27)=__norm})
 es_pure: true
 es_heap: true
 es_gen_impl_vars: [m1; e; f]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 x::node<m1,-,-,e,f>@M & e=f & {FLOW,(27,27)=__norm}

!!!:0: 0: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  EXISTS(a_29,m_30,n_31: x::node<m,n,-,a,a_29>@M * 
  y::node<m_30,n_31,-,-,->@M & a_29=a & m_30=m & n_31=n &
  {FLOW,(27,27)=__norm})
 es_pure: true
 es_heap: true
 es_gen_impl_vars: [m1; e; f]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 x::node<m1,-,-,e,f>@M & e=f & {FLOW,(27,27)=__norm}

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  x::node<m,n,-,a,a_54>@M * y::node<m_55,n_56,-,-,->@M & a_54=a & m_55=m & 
  n_56=n & {FLOW,(27,27)=__norm}
 es_pure: true
 es_heap: true
 es_gen_impl_vars: [m1; e; f]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 x::node<m1,-,-,e,f>@M & e=f & {FLOW,(27,27)=__norm}

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an non-empty heap component
context:
 es_formula: 
  x::node<m,n,-,a,a_54>@M * y::node<m_55,n_56,-,-,->@M & a_54=a & m_55=m & 
  n_56=n & {FLOW,(27,27)=__norm}
 es_pure: true
 es_heap: true
 es_gen_impl_vars: [m1; e; f]
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 x::node<m1,-,-,e,f>@M & e=f & {FLOW,(27,27)=__norm}

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]do_match: using  x::node<m,n,-,a,a_54>@M to prove  x::node<m1,-,-,e,f>@M

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]do_match (after): LHS:  y::node<m_55,n_56,-,-,->@M & a_54=a & m_55=m & n_56=n & m1=m & e=a & 
f=a_54 & {FLOW,(27,27)=__norm}

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]do_match (after): RHS: true & e=f & {FLOW,(27,27)=__norm}

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]heap_entail_conjunct:
context:
 es_formula: 
  y::node<m_55,n_56,-,-,->@M & a_54=a & m_55=m & n_56=n & m1=m & e=a & 
  f=a_54 & {FLOW,(27,27)=__norm}
 es_pure: true
 es_heap: x::node<m,n,-,a,a_54>@M
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 true & e=f & {FLOW,(27,27)=__norm}

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]heap_entail_conjunct_helper:
context:
 es_formula: 
  y::node<m_55,n_56,-,-,->@M & a_54=a & m_55=m & n_56=n & m1=m & e=a & 
  f=a_54 & {FLOW,(27,27)=__norm}
 es_pure: true
 es_heap: x::node<m,n,-,a,a_54>@M
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 true & e=f & {FLOW,(27,27)=__norm}

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]heap_entail_conjunct_helper: conseq has an empty heap component
context:
 es_formula: 
  y::node<m_55,n_56,-,-,->@M & a_54=a & m_55=m & n_56=n & m1=m & e=a & 
  f=a_54 & {FLOW,(27,27)=__norm}
 es_pure: true
 es_heap: x::node<m,n,-,a,a_54>@M
 es_aux_conseq: true
 es_must_error: None
 es_var_label: None
conseq:
 true & e=f & {FLOW,(27,27)=__norm}

!!!:0: 0: [entail:0][post:0]simplify the consequent with omega

!!!:0: 0: [entail:0][post:0]IMP #1

!!!:0: 0: [entail:0][post:0]IMP #2

!!!:0: 0: [entail:0][post:0]ante:  a_54=a & m_55=m & n_56=n & m1=m & e=a & f=a_54 & y=1 & x=2

!!!:0: 0: [entail:0][post:0]conseq:  e=f

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]heap_entail_empty_heap: formula is valid

!!!bugs/dh1.slk:17: 13: [entail:0][post:0]heap_entail_empty_heap: res_ctx:
 es_formula: 
  y::node<m_55,n_56,-,-,->@M & a_54=a & m_55=m & n_56=n & m1=m & e=a & 
  f=a_54 & {FLOW,(27,27)=__norm}
 es_pure: true
 es_heap: x::node<m,n,-,a,a_54>@M
 es_aux_conseq: true
 es_must_error: None
 es_var_label: NoneEntail(1)=Valid.
 y::node<m,n,-,-,->@M & m1=m & e=a & f=a & {FLOW,(27,27)=__norm}
Stop Omega... 2 invocations 
