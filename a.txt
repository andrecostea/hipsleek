Starting Omega... 
data node {
  int val
  node next
}

case_normalize_struc_formula@1
case_normalize_struc_formula inp1 :[self,res,n,p]
case_normalize_struc_formula inp2 :[self,res,n,p]
case_normalize_struc_formula inp3 :
 [][](self = p) & (n = 0) FLOW __flow) {}
 [][]((self::node<next=r>) * (r::lseg<n-1, p>))*(true)( FLOW __flow) {}
case_normalize_struc_formula@1 EXIT out :
 [][](EX  . true & (self = p) & (n = 0)) {}
 [ r][](EX p_32 Anon_29 flted_6_31 . ((self::node<Anon_29, r>) * (r::lseg<flted_6_31, p_32>))*((flted_6_31 = n-1) & (p_32 = p))( FLOW __flow)) {}

data node {
  int val
  node next
}
data Object {

}

 view lseg<n:int,p:node>= 
  EBase exists (E)[](I)[r](ex)[]{2}->EXISTS(p_32,Anon_29,
        flted_6_31: self::node<Anon_29,r>@M * 
        NN r::lseg<flted_6_31,p_32>@M[Orig] & flted_6_31+1=n & p_32=p &
        {FLOW,(13,28)=__flow})
  || EBase {1}->true & self=p & n=0 & {FLOW,(13,28)=__flow}
  inv: 0<=n
  unstructured formula: 
   {1}->true & self=p & n=0 & {FLOW,(13,28)=__flow}
   || {2}->EXISTS(p_32,Anon_29,flted_6_31,r: self::node<Anon_29,r>@M * 
      NN r::lseg<flted_6_31,p_32>@M[Orig][LHSCase] & flted_6_31+1=n & 
      p_32=p & {FLOW,(13,28)=__flow})
  xform: self=p & n=0 | self!=null & 1<=n
  is_recursive?: true
  materialized vars: [(self,partial,[])]
  bag of addr: 
  raw base case: {1}->true & self=p & n=0 & {FLOW,(13,28)=__flow}
  base case: n=0->self=p & n=0
  view_complex_inv: None
  prune branches: ,[]
  prune conditions: {
[]}
  prune baga conditions: 
  prune invs:0:,[]







case_normalize_struc_formula@2
case_normalize_struc_formula inp1 :[self,p,n,a,b]
case_normalize_struc_formula inp2 :[self,p,n,a,b]
case_normalize_struc_formula inp3 :
 [][](EX  . ((self::lseg<a, r>) * (r::lseg<b, p>))*(true)( FLOW __flow)) {}
case_normalize_struc_formula@2 EXIT out :
 [ r][](EX a_58 b_59 p_60 . ((self::lseg<a_58, r>) * (r::lseg<b_59, p_60>))*((a_58 = a) & ((b_59 = b) & (p_60 = p)))( FLOW __flow)) {}

 Astsimp.ml 0: head: NN self::lseg<n,p>@M#O[V1][Derv][LHSCase] & n=b+a & 0<=a & 0<=b &
{FLOW,(13,28)=__flow}
case_normalize_struc_formula@3
case_normalize_struc_formula inp1 :[n,self,a,r,b,p]
case_normalize_struc_formula inp2 :[n,self,a,r,b,p]
case_normalize_struc_formula inp3 :
 [][](EX  . (self::lseg<n, p>)*(true)( FLOW __flow)) {}
case_normalize_struc_formula@3 EXIT out :
 [][](EX n_81 p_82 . (self::lseg<n_81, p_82>)*((n_81 = n) & (p_82 = p))( FLOW __flow)) {}

 Astsimp.ml 1: head:
 [][](EX n_81 p_82 . (self::lseg<n_81, p_82>)*((n_81 = n) & (p_82 = p))( FLOW __flow)) {}
 Astsimp.ml 2: head: EBase EXISTS(n_81,p_82: NN self::lseg<n_81,p_82>@M[Orig][LHSCase] &
       n_81=n & p_82=p & {FLOW,(13,28)=__flow})
 Astsimp.ml 3: head: EXISTS(n_93,p_94: NN self::lseg<n_93,p_94>@M[Orig][LHSCase] & n_93=n & 
p_94=p & {FLOW,(13,28)=__flow})
left:
 Lemma "V1":  NN self::lseg<n,p>@M#O[V1][Derv][LHSCase] & n=b+a & 0<=a & 0<=b &
{FLOW,(13,28)=__flow}==> EXISTS(r: NN self::lseg<a,r>@M#O[V1][Derv] * NN r::lseg<b,p>@M[Derv] &
true & {FLOW,(13,28)=__flow})
 head match:lseg
 body view:lseg
 materialized vars:  [(self,full,[lseg])]
 univ_vars: [a,b]

 right:


run_entail_check:
 true & self_V1=p & n=0 & n=b+a & 0<=a & 0<=b & {FLOW,(13,28)=__flow}
 or EXISTS(p_102,Anon_103,flted_6_104,
    r_105: self_V1::node<Anon_103,r_105>@M * 
    NN r_105::lseg<flted_6_104,p_102>@M[Orig] & flted_6_104+1=n & p_102=p & 
    n=b+a & 0<=a & 0<=b & {FLOW,(13,28)=__flow}) |-  EBase EXISTS(a_78,b_79,p_80,r: NN self_V1::lseg<a_78,r>@M[Orig][LHSCase] * 
       NN r::lseg<b_79,p_80>@M[Orig][LHSCase] & a_78=a & b_79=b & p_80=p &
       {FLOW,(13,28)=__flow})
Checking lemma "V1": Fail. (may) cause:may[213  0<=b & p_118=p & r_126=r_121 & flted_6_120+1=n & n=b+a & 0<=a & 
(r_121=p_118 & flted_6_120=0 | r_121!=null & 1<=flted_6_120) |-  1+flted_6_120=a;  r_126=r_121 & p_118=p & (r_121=p_118 & flted_6_120=0 | r_121!=null & 
1<=flted_6_120) & 0<=a & flted_6_120+1=n & n=b+a & 0<=b |-  b=0 (may-bug).,213  p_118=p & (r_121=p_118 & flted_6_120=0 | r_121!=null & 1<=flted_6_120) & 
0<=b & flted_6_120+1=n & n=b+a & 0<=a |-  a=0;  p_118=p & (r_121=p_118 & flted_6_120=0 | r_121!=null & 1<=flted_6_120) & 
0<=a & flted_6_120+1=n & n=b+a & 0<=b |-  b=0;  0<=b & 0<=a & n=b+a & flted_6_120+1=n & (r_121=p_118 & flted_6_120=0 | 
r_121!=null & 1<=flted_6_120) & p_118=p & self_V1=2 |-  self_V1=p (may-bug).]
Stop Omega... 59 invocations 
